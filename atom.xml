<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>太阳落下</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-05-05T03:11:59.409Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>木鱼</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux 专题导航</title>
    <link href="http://yoursite.com/2018/06/05/Linux-%E4%B8%93%E9%A2%98%E5%AF%BC%E8%88%AA/"/>
    <id>http://yoursite.com/2018/06/05/Linux-专题导航/</id>
    <published>2018-06-05T03:09:32.000Z</published>
    <updated>2018-05-05T03:11:59.409Z</updated>
    
    <content type="html"><![CDATA[<h2 id="文件管理"><a href="#文件管理" class="headerlink" title="文件管理"></a>文件管理</h2><h2 id="权限管理"><a href="#权限管理" class="headerlink" title="权限管理"></a>权限管理</h2><h2 id="软件管理"><a href="#软件管理" class="headerlink" title="软件管理"></a>软件管理</h2><h2 id="网络管理"><a href="#网络管理" class="headerlink" title="网络管理"></a>网络管理</h2><h2 id="服务管理"><a href="#服务管理" class="headerlink" title="服务管理"></a>服务管理</h2><h2 id="系统管理"><a href="#系统管理" class="headerlink" title="系统管理"></a>系统管理</h2>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;文件管理&quot;&gt;&lt;a href=&quot;#文件管理&quot; class=&quot;headerlink&quot; title=&quot;文件管理&quot;&gt;&lt;/a&gt;文件管理&lt;/h2&gt;&lt;h2 id=&quot;权限管理&quot;&gt;&lt;a href=&quot;#权限管理&quot; class=&quot;headerlink&quot; title=&quot;权限管理&quot;&gt;&lt;/a
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux后台管理</title>
    <link href="http://yoursite.com/2018/05/14/Linux%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86/"/>
    <id>http://yoursite.com/2018/05/14/Linux后台管理/</id>
    <published>2018-05-14T08:57:05.000Z</published>
    <updated>2018-05-14T09:17:05.904Z</updated>
    
    <content type="html"><![CDATA[<p>工作（后台）管理指的是在单个登录终端中（shell界面）同时管理多个工作行为</p>
<p>注意事项</p>
<ol>
<li>当前的登录终端，只能管理当前终端的工作，而不能管理其他登录终端的工作</li>
<li>放入后台的命令必须可以持续运行一段时间，这样我们才能捕捉和操作这个工作</li>
<li>放入后台执行的命令不能和前台用户有交互或需要前台输入，否则放入后台只能暂停，而不能执行</li>
</ol>
<p>top、vi之类放在后台也是暂停的，因为一个需要用户来查看进程健康状态，一个需要用户写入</p>
<p>压缩、解压缩、cp、mv、find之类可以放在后台<br>所以，想要让这个命令在后台运行，首先，<strong>不能与用户有交互</strong>。其次，它要<strong>运行一段时间</strong></p>
<h2 id="把进程放入后台"><a href="#把进程放入后台" class="headerlink" title="把进程放入后台"></a>把进程放入后台</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">tar -zcf etc.tar.gz /etc &amp;    </div><div class="line">#在命令后加个&amp;，把命令放在后台执行</div><div class="line"></div><div class="line">top</div><div class="line">#ctrl+z放在后台暂停</div></pre></td></tr></table></figure>
<h2 id="查看后台的工作"><a href="#查看后台的工作" class="headerlink" title="查看后台的工作"></a>查看后台的工作</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">jobs [-l]</div><div class="line">-l:显示工作的PID</div><div class="line">jobs默认是绑定终端的</div><div class="line"></div><div class="line">+代表最后一个放入的进程，也是工作恢复时，默认恢复的工作</div><div class="line">-代表倒二个放入的进程</div></pre></td></tr></table></figure>
<h2 id="把后台暂停的工作回复到前台执行"><a href="#把后台暂停的工作回复到前台执行" class="headerlink" title="把后台暂停的工作回复到前台执行"></a>把后台暂停的工作回复到前台执行</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">fg %工作号</div><div class="line"># %可以省略，但要注意工作号和PID的区别</div></pre></td></tr></table></figure>
<h2 id="把后台暂停的工作回复到后台执行"><a href="#把后台暂停的工作回复到后台执行" class="headerlink" title="把后台暂停的工作回复到后台执行"></a>把后台暂停的工作回复到后台执行</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">bg %工作号</div><div class="line"># 后台恢复执行的命令，是不能和前台有交互的，否则不能恢复到后台执行</div></pre></td></tr></table></figure>
<h2 id="后台命令脱离终端执行"><a href="#后台命令脱离终端执行" class="headerlink" title="后台命令脱离终端执行"></a>后台命令脱离终端执行</h2><p>把命令放入后台，只能在当前登录终端执行。当用户logout时或关闭终端，会向该用户终端下所有，进程发送SIGHUP信号，后台程序就会停止</p>
<p>mysqld不会跟随关闭，d表示守护进程damon，守护进程damon进程开机运行，某一个用户退出终端不影响该程序的运行，但把所有需要脱离终端执行的命令都放到守护进程里不切实际</p>
<ol>
<li>把需要后台执行的命令加入<code>/etc/rc.local</code>文件，自启动文件</li>
<li>使用系统定时任务，让系统在指定的时间执行某个后台命令</li>
<li>使用 nohup命令（常用）<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">nohup 命令 &amp;</div><div class="line">nohup /root/for.sh &amp;</div><div class="line">#可以是脚本</div></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;工作（后台）管理指的是在单个登录终端中（shell界面）同时管理多个工作行为&lt;/p&gt;
&lt;p&gt;注意事项&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;当前的登录终端，只能管理当前终端的工作，而不能管理其他登录终端的工作&lt;/li&gt;
&lt;li&gt;放入后台的命令必须可以持续运行一段时间，这样我们才能捕捉和
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux进程管理</title>
    <link href="http://yoursite.com/2018/05/14/Linux%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/"/>
    <id>http://yoursite.com/2018/05/14/Linux进程管理/</id>
    <published>2018-05-14T08:56:47.000Z</published>
    <updated>2018-05-14T08:57:29.321Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>VirtualBox扩容</title>
    <link href="http://yoursite.com/2018/05/14/VirtualBox%E6%89%A9%E5%AE%B9/"/>
    <id>http://yoursite.com/2018/05/14/VirtualBox扩容/</id>
    <published>2018-05-14T02:22:32.000Z</published>
    <updated>2018-05-14T09:02:59.023Z</updated>
    
    <content type="html"><![CDATA[<p>这篇文章用于在VirtualBox虚拟机上的CentOS扩充根目录空间，区别于新增硬盘以及添加新的挂载点</p>
<p>主机环境为Ubuntu 17.04<br>VirtualBox 5.2<br>虚拟机为CentOS 7</p>
<p>VirtualBox 中虚拟硬盘有几种形式，VMDK、VDI、VHD、HDD等。</p>
<ul>
<li>VMDK：是VMware开发并使用的，同时也被SUN的xVM、QEMU、SUSE Studio、.NET DiscUtils支持，所以兼容性会好些。</li>
<li>VDI：是Virtual Box 自己的处理格式，而且Virtual Box支持Windows和Linux，所以对于使用VirtualBox的用户比较好。</li>
<li>VHD：是Windows专有的处理格式，HDD是Apple专有的处理格式，所以不会支持跨平台，一般不会考虑。</li>
</ul>
<h2 id="扩容磁盘文件"><a href="#扩容磁盘文件" class="headerlink" title="扩容磁盘文件"></a>扩容磁盘文件</h2><p>在主机上操作<br>VBoxManage命令是安装VirtualBox时安装的，如果无法使用该命令，请指定完整路径，寻找VirtualBox的安装目录，我的在<code>/usr/bin</code>下<br>centos.vdi和centos.vmdk是VirtualBox创建的系统磁盘文件，一般位于用户的<code>VirtualBox VMs</code>文件夹下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">#VDI</div><div class="line">#单位为M</div><div class="line">VBoxManage modifyhd centos.vdi --resize 16000</div><div class="line"></div><div class="line">#VMDK</div><div class="line">#单位为M</div><div class="line">#如果是VMDK就要先转换成VDI，然后再扩容</div><div class="line">#vmdk是转换前的文件，vdi是转换之后的文件</div><div class="line">VBoxManage clonehd &quot;centos.vmdk&quot; &quot;centos.vdi&quot; --format vdi</div><div class="line">VBoxManage modifyhd &quot;centos.vdi&quot; --resize 16000</div><div class="line">#如果想再转回为VMDK，用这个命令就可以了，直接使用vdi格式也可以</div><div class="line">VBoxManage clonehd &quot;centos.vdi&quot; &quot;resized.vmdk&quot; --format vmdk</div></pre></td></tr></table></figure>
<h2 id="指定新磁盘文件"><a href="#指定新磁盘文件" class="headerlink" title="指定新磁盘文件"></a>指定新磁盘文件</h2><p>打开虚拟机，选择系统 &gt; 右击 &gt; 设置 &gt; 存储 &gt; 控制器SATA &gt; 右边的添加虚拟硬盘 &gt; 选择转换后的文件<br>在虚拟机打开系统，通过df -h查看发现，根目录还是原样<br><img src="http://ow3dy62zt.bkt.clouddn.com/IMG34.png" alt=""></p>
<h2 id="使用LVM扩展空间"><a href="#使用LVM扩展空间" class="headerlink" title="使用LVM扩展空间"></a>使用LVM扩展空间</h2><p>在虚拟机上操作<br>因为要修改现有分区，所以要用LVM<br>LVM（Logic Volume Manager）逻辑卷管理，像RedHat系的默认分区管理方式，是建立在硬盘分区之上，文件系统之下的逻辑层，用来解决在最初分区时未正确的评估和和分配分区容量，而造成系统分区不够用。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">#查看当前系统分区情况</div><div class="line">fdisk -l</div><div class="line"></div><div class="line">#进行分区</div><div class="line">fdisk /dev/sda</div><div class="line"></div><div class="line">#重读分区表</div><div class="line">partprobe</div><div class="line"></div><div class="line">#将分区格式化为ext4格式</div><div class="line">mkfs.ext4 /dev/sda3</div><div class="line"></div><div class="line">#开始LVM操作,查看卷组名，即VG Name，我这里是centos</div><div class="line">vgdisplay</div><div class="line"></div><div class="line">#创建新物理卷，sda3是之前分区分配的</div><div class="line">pvcreate /dev/sda3</div><div class="line">#扩展到卷组</div><div class="line">vgextend centos /dev/sda3</div><div class="line"></div><div class="line">#查看根分区</div><div class="line">lvdisplay</div></pre></td></tr></table></figure>
<p><img src="http://ow3dy62zt.bkt.clouddn.com/IMG35.png" alt=""></p>
<p><code>/dev/centos/root</code>就是根分区，也是我们要扩展的分区<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">#扩展到容量逻辑分区</div><div class="line">lvextend /dev/centos/root /dev/sda3</div><div class="line"></div><div class="line">#刷新逻辑分区容量</div><div class="line">resize2fs /dev/centos/root</div></pre></td></tr></table></figure></p>
<p>报错<br><img src="http://ow3dy62zt.bkt.clouddn.com/IMG36.png" alt=""><br>因为我的centos7的某些分区用的是xfs的文件系统（使用df -T查看即可知道）<br>使用<code>xfs_growfs /dev/centos/root</code>代替<code>resize2fs /dev/centos/root</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#查看</div><div class="line">df -h</div></pre></td></tr></table></figure>
<p>参考：</p>
<ul>
<li>扩充根目录空间：<a href="https://www.awaimai.com/1194.html" target="_blank" rel="external">https://www.awaimai.com/1194.html</a></li>
<li>添加新的挂载点：<a href="https://blog.csdn.net/ganshuyu/article/details/17954733" target="_blank" rel="external">https://blog.csdn.net/ganshuyu/article/details/17954733</a></li>
<li><a href="http://www.imooc.com/qadetail/100002" target="_blank" rel="external">http://www.imooc.com/qadetail/100002</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这篇文章用于在VirtualBox虚拟机上的CentOS扩充根目录空间，区别于新增硬盘以及添加新的挂载点&lt;/p&gt;
&lt;p&gt;主机环境为Ubuntu 17.04&lt;br&gt;VirtualBox 5.2&lt;br&gt;虚拟机为CentOS 7&lt;/p&gt;
&lt;p&gt;VirtualBox 中虚拟硬盘有几
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Linux配置WordPress</title>
    <link href="http://yoursite.com/2018/05/13/Linux%E9%85%8D%E7%BD%AEWordPress/"/>
    <id>http://yoursite.com/2018/05/13/Linux配置WordPress/</id>
    <published>2018-05-13T15:30:59.000Z</published>
    <updated>2018-05-14T12:33:09.335Z</updated>
    
    <content type="html"><![CDATA[<p>##安装LAMP<br><a href="https://lamp.sh/install.html" target="_blank" rel="external">https://lamp.sh/install.html</a></p>
<p>##创建WordPress数据库和一个用户</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">mysql&gt;create database wordpress;</div><div class="line">//wordpress是数据库名</div><div class="line">mysql&gt;create user &apos;wordpress&apos;@&apos;localhost&apos; identified by &apos;password&apos;;</div><div class="line">//wordpress是数据库名，一般使用localhost，password为密码</div><div class="line">mysql&gt;grant all privileges on wordpress.* to &apos;wordpress&apos;@&apos;localhost&apos;;</div><div class="line">mysql&gt;FLUSH PRIVILEGES;</div></pre></td></tr></table></figure>
<p>##下载WordPress安装包并解压<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">wget http://wordpress.org/latest.tar.gz</div><div class="line">tar -xzvf latest.tar.gz</div></pre></td></tr></table></figure></p>
<p>##上传文件<br>默认的网站根目录： /data/www/default<br>将解压好的wordpress文件复制到该目录下</p>
<h2 id="设置wp-config-php文件"><a href="#设置wp-config-php文件" class="headerlink" title="设置wp-config.php文件"></a>设置wp-config.php文件</h2><p>（这一步可以略过，通过下一步的网页设置）<br>将wordpress目录下的wp-config-sample.php重命名为wp-config.php，并修改以下选项<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">/** The name of the database for WordPress */</div><div class="line">define(&apos;DB_NAME&apos;, &apos;wordpress&apos;);</div><div class="line"></div><div class="line">/** MySQL database username */</div><div class="line">define(&apos;DB_USER&apos;, &apos;wordpress&apos;);</div><div class="line"></div><div class="line">/** MySQL database password */</div><div class="line">define(&apos;DB_PASSWORD&apos;, &apos;password&apos;);</div><div class="line"></div><div class="line">/** MySQL hostname */</div><div class="line">define(&apos;DB_HOST&apos;, &apos;localhost&apos;);</div><div class="line"></div><div class="line">/** Database Charset to use in creating database tables. */</div><div class="line">define(&apos;DB_CHARSET&apos;, &apos;utf8&apos;);</div></pre></td></tr></table></figure></p>
<p>##<br>在浏览器访问：<a href="http://ip/wordpress，填写好信息一键安装，安装好后就可以是使用了" target="_blank" rel="external">http://ip/wordpress，填写好信息一键安装，安装好后就可以是使用了</a></p>
<p>参考：<br><a href="https://codex.wordpress.org/zh-cn:%E5%AE%89%E8%A3%85WordPress" target="_blank" rel="external">https://codex.wordpress.org/zh-cn:%E5%AE%89%E8%A3%85WordPress</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;##安装LAMP&lt;br&gt;&lt;a href=&quot;https://lamp.sh/install.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://lamp.sh/install.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;##创建WordPress数据
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>PR剪辑视频基础操作</title>
    <link href="http://yoursite.com/2018/05/13/PR%E5%89%AA%E8%BE%91%E8%A7%86%E9%A2%91%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/"/>
    <id>http://yoursite.com/2018/05/13/PR剪辑视频基础操作/</id>
    <published>2018-05-13T09:28:54.000Z</published>
    <updated>2018-05-13T09:51:52.367Z</updated>
    
    <content type="html"><![CDATA[<p>尝试用PR剪了一个抖音合辑，基本上是不同视频片段的拼接</p>
<p>##新建<br>选择自定义宽和高，29，往往由素材的大小决定</p>
<p>##剪辑<br>空白处右键，波纹删除<br>切片工具</p>
<p>##字幕<br>菜单栏，Title &gt; 静态字幕<br>ctrl+c ctrl+v复制字幕<br>alt替换字幕</p>
<p>ctrl+~(波浪号) 全屏预览</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;尝试用PR剪了一个抖音合辑，基本上是不同视频片段的拼接&lt;/p&gt;
&lt;p&gt;##新建&lt;br&gt;选择自定义宽和高，29，往往由素材的大小决定&lt;/p&gt;
&lt;p&gt;##剪辑&lt;br&gt;空白处右键，波纹删除&lt;br&gt;切片工具&lt;/p&gt;
&lt;p&gt;##字幕&lt;br&gt;菜单栏，Title &amp;gt; 静态字幕&lt;br
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Linux安装Mysql</title>
    <link href="http://yoursite.com/2018/05/13/Linux%E5%AE%89%E8%A3%85Mysql/"/>
    <id>http://yoursite.com/2018/05/13/Linux安装Mysql/</id>
    <published>2018-05-13T09:27:59.000Z</published>
    <updated>2018-05-13T15:59:40.946Z</updated>
    
    <content type="html"><![CDATA[<h2 id="二进制包安装"><a href="#二进制包安装" class="headerlink" title="二进制包安装"></a>二进制包安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">#以下命令全在root下完成，所以没有加sudo</div><div class="line">#查看要下载的版本，https://dev.mysql.com/downloads/repo/yum/</div><div class="line">wget https://dev.mysql.com/get/mysql57-community-release-el7-9.noarch.rpm</div><div class="line">rpm -ivh mysql57-community-release-el7-9.noarch.rpm</div><div class="line">yum install mysql-server</div><div class="line"></div><div class="line">systemctl start mysqld</div><div class="line">systemctl status mysqld</div><div class="line"></div><div class="line">#初次安装mysql，root账户没有密码</div><div class="line">mysql -u root -p</div><div class="line">#很多文章都说是在这里找临时密码，我找了半天没有找到</div><div class="line">#grep &apos;temporary password&apos; /var/log/mysqld.log</div><div class="line"></div><div class="line">#使用此命令运行安全脚本,用于更改远程root登录和示例用户等安全性较低的默认选项</div><div class="line">mysql_secure_installation</div><div class="line">#设置root密码，删除匿名用户，禁止远程root用户登录，删除测试数据库并对其进行访问，并重新加载权限表</div></pre></td></tr></table></figure>
<h2 id="配置mysql"><a href="#配置mysql" class="headerlink" title="配置mysql"></a>配置mysql</h2><p>####编码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">#mysql配置文件为/etc/my.cnf</div><div class="line"></div><div class="line">最后加上编码配置</div><div class="line">default-character-set =utf8</div></pre></td></tr></table></figure></p>
<p>####设置密码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&gt;SET PASSWORD FOR &apos;jeffrey&apos;@&apos;localhost&apos; = &apos;auth_string&apos;;</div><div class="line">#为当前用户设置密码</div><div class="line">&gt;SET PASSWORD = &apos;auth_string&apos;;</div></pre></td></tr></table></figure></p>
<p>####新增用户<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&gt;create database testdb;</div><div class="line">&gt;create  user  &apos;testuser&apos;@&apos;localhost&apos;  identified  by  &apos;password&apos; ;</div><div class="line">&gt;grant  all  on testdb.* to &apos;testuser&apos;@&apos;localhost&apos;;</div></pre></td></tr></table></figure></p>
<p>####远程连接设置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#把在所有数据库的所有表的所有权限赋值给位于所有IP地址的root用户</div><div class="line">&gt; grant all privileges on *.* to root@&apos;%&apos;identified by &apos;password&apos;;</div></pre></td></tr></table></figure></p>
<h2 id="源码包安装"><a href="#源码包安装" class="headerlink" title="源码包安装"></a>源码包安装</h2><p>内存小的不要用这种方法了，make卡在了48%哈哈。。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">#安装依赖，依赖包并不是一定提前知道的，是根据安装的报错信息逐渐添加的，看官方文档的当我没说。。</div><div class="line">#反正全安好就行，m4和perl应该是安装bison的时候被安装了</div><div class="line">yum install cmake ncurses-devel gcc gcc-c++ bison bison-devel</div><div class="line">#下载安装boost c++库，https://sourceforge.net/projects/boost/files/boost/1.59.0/</div><div class="line">tar -zxvf boost_1_59_0.tar.gz</div><div class="line">cp -r boost_1_59_0/ /usr/local/</div><div class="line"></div><div class="line">#获取源码，http://dev.mysql.com/downloads/mysql/，这里选择MySQL-5.7.22.tar.gz</div><div class="line">wget https://dev.mysql.com/get/MySQL-5.7.22.tar.gz</div><div class="line">tar -zxvf MySQL-5.7.22.tar.gz</div><div class="line">cd MySQL-5.7.22</div><div class="line">#cmake出错重新cmake之前需要删除CMakeCache.txt文件</div><div class="line">rm -rf CMakeCache.txt</div><div class="line">cmake . -DWITH_BOOST=/usr/local/boost_1_59_0</div><div class="line"></div><div class="line">make</div><div class="line">#内存不足，设置交换内存或者增加虚拟机内存</div><div class="line"></div><div class="line">#MySQL的默认安装目录为/usr/local/mysql，DESTDIR参数指定安装目录</div><div class="line">make install DESTDIR=&quot;/opt/mysql&quot;</div><div class="line"></div><div class="line">其他配置参考https://itbilu.com/database/mysql/VJVOut01M.html</div></pre></td></tr></table></figure>
<p>参考：</p>
<ul>
<li><a href="https://www.digitalocean.com/community/tutorials/how-to-install-mysql-on-centos-7" target="_blank" rel="external">https://www.digitalocean.com/community/tutorials/how-to-install-mysql-on-centos-7</a></li>
<li>安装mariadb：<a href="https://www.digitalocean.com/community/tutorials/how-to-install-mariadb-on-centos-7" target="_blank" rel="external">https://www.digitalocean.com/community/tutorials/how-to-install-mariadb-on-centos-7</a></li>
<li><a href="https://blog.gtwang.org/linux/centos-7-install-mariadb-mysql-server-tutorial/" target="_blank" rel="external">https://blog.gtwang.org/linux/centos-7-install-mariadb-mysql-server-tutorial/</a></li>
<li><a href="http://www.cnblogs.com/starof/p/4680083.html" target="_blank" rel="external">http://www.cnblogs.com/starof/p/4680083.html</a></li>
<li><a href="https://itbilu.com/database/mysql/VJVOut01M.html" target="_blank" rel="external">https://itbilu.com/database/mysql/VJVOut01M.html</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;二进制包安装&quot;&gt;&lt;a href=&quot;#二进制包安装&quot; class=&quot;headerlink&quot; title=&quot;二进制包安装&quot;&gt;&lt;/a&gt;二进制包安装&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gut
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux安装PHP</title>
    <link href="http://yoursite.com/2018/05/13/Linux%E5%AE%89%E8%A3%85PHP/"/>
    <id>http://yoursite.com/2018/05/13/Linux安装PHP/</id>
    <published>2018-05-13T08:44:17.000Z</published>
    <updated>2018-05-13T16:01:02.923Z</updated>
    
    <content type="html"><![CDATA[<p>无脑输命令， CentOS 7.2/PHP5.6</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">yum -y install wget</div><div class="line"></div><div class="line">wget http://hk1.php.net/get/php-5.6.36.tar.bz2/from/this/mirror</div><div class="line">tar -jxvf php-5.6.36.tar.bz2</div><div class="line"></div><div class="line">cd php-5.6.36</div><div class="line">sudo yum -y install autoconf automake libtool re2c flex bison libxml2 libxml2-devel</div><div class="line">./configure --profix=/usr/local/php56</div><div class="line">make</div><div class="line">make test</div><div class="line">#Bug #69958</div><div class="line">#Bug #70172</div><div class="line">make install</div></pre></td></tr></table></figure>
<p>环境变量 </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">#只对当前登录用户生效</div><div class="line">vi ~/.bashrc</div><div class="line">export PATH=/usr/local/php56/bin:$PATH</div><div class="line">source ~/.bashrc</div><div class="line"></div><div class="line">#所有系统用户生效</div><div class="line">vi /etc/profile</div><div class="line">PATH=$PATH:/usr/local/php56/bin</div><div class="line">export PATH</div><div class="line">source /etc/profile</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;无脑输命令， CentOS 7.2/PHP5.6&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>【转】Hexo中用CSS控制Markdown各列表格宽度</title>
    <link href="http://yoursite.com/2018/05/12/%E3%80%90%E8%BD%AC%E3%80%91Hexo%E4%B8%AD%E7%94%A8CSS%E6%8E%A7%E5%88%B6Markdown%E5%90%84%E5%88%97%E8%A1%A8%E6%A0%BC%E5%AE%BD%E5%BA%A6/"/>
    <id>http://yoursite.com/2018/05/12/【转】Hexo中用CSS控制Markdown各列表格宽度/</id>
    <published>2018-05-12T01:45:32.000Z</published>
    <updated>2018-05-12T01:46:55.678Z</updated>
    
    <content type="html"><![CDATA[<p>转自<a href="https://www.jixian.io/2017/10/11/Hexo%E4%B8%AD%E7%94%A8CSS%E6%8E%A7%E5%88%B6Markdown%E5%90%84%E5%88%97%E8%A1%A8%E6%A0%BC%E5%AE%BD%E5%BA%A6/" target="_blank" rel="external">https://www.jixian.io/2017/10/11/Hexo%E4%B8%AD%E7%94%A8CSS%E6%8E%A7%E5%88%B6Markdown%E5%90%84%E5%88%97%E8%A1%A8%E6%A0%BC%E5%AE%BD%E5%BA%A6/</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">&lt;style&gt;</div><div class="line">table th:nth-of-type(1)&#123;</div><div class="line">width: 10%;</div><div class="line">&#125;</div><div class="line">table th:nth-of-type(2)&#123;</div><div class="line">width: 20%</div><div class="line">;</div><div class="line">&#125;</div><div class="line">table th:nth-of-type(3)&#123;</div><div class="line">width: 30%;</div><div class="line">&#125;</div><div class="line">table th:nth-of-type(4)&#123;</div><div class="line">width: 40%;</div><div class="line">&#125;</div><div class="line">&lt;/style&gt;</div><div class="line"></div><div class="line">| 一 | 二 | 三 | 四 |</div><div class="line">| :-: | :-: | :-: | :-: |</div><div class="line">| 1 | 2 | 3 | 4 |</div></pre></td></tr></table></figure>
<style>
table th:nth-of-type(1){
width: 10%;
}
table th:nth-of-type(2){
width: 20%
;
}
table th:nth-of-type(3){
width: 30%;
}
table th:nth-of-type(4){
width: 40%;
}
</style>

<table>
<thead>
<tr>
<th style="text-align:center">一</th>
<th style="text-align:center">二</th>
<th style="text-align:center">三</th>
<th style="text-align:center">四</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">2</td>
<td style="text-align:center">3</td>
<td style="text-align:center">4</td>
</tr>
</tbody>
</table>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;转自&lt;a href=&quot;https://www.jixian.io/2017/10/11/Hexo%E4%B8%AD%E7%94%A8CSS%E6%8E%A7%E5%88%B6Markdown%E5%90%84%E5%88%97%E8%A1%A8%E6%A0%BC%E5%AE
    
    </summary>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Linux常见服务列表</title>
    <link href="http://yoursite.com/2018/05/12/Linux%E5%B8%B8%E8%A7%81%E6%9C%8D%E5%8A%A1%E5%88%97%E8%A1%A8/"/>
    <id>http://yoursite.com/2018/05/12/Linux常见服务列表/</id>
    <published>2018-05-12T01:22:43.000Z</published>
    <updated>2018-05-12T01:48:37.831Z</updated>
    
    <content type="html"><![CDATA[<style>
table th:nth-of-type(1){
width: 20%;
}
table th:nth-of-type(2){
width: 60%
;
}
table th:nth-of-type(3){
width: 20%;
}

</style>

<table>
<thead>
<tr>
<th>服务名称</th>
<th>功能简介</th>
<th>建议</th>
</tr>
</thead>
<tbody>
<tr>
<td>acpid</td>
<td>电源管理接口。如果是笔记本用户建议开启，可以监听内核层的相关电源事件。</td>
<td>开启</td>
</tr>
<tr>
<td>anacron</td>
<td>系统的定时任务程序。cron 的一个子系统，如果定时任务错过了执行时间，可以通过 anacron 继续唤醒执行。</td>
<td>关闭</td>
</tr>
<tr>
<td>alsasound</td>
<td>Alsa 声卡驱动。如果使用 alsa 声卡，开启</td>
<td>关闭</td>
</tr>
<tr>
<td>apmd</td>
<td>电源管理模块。如果支持 acpid，就不需要 apmd，可以关闭</td>
<td>关闭</td>
</tr>
<tr>
<td>atd</td>
<td>指定系统在特定时间执行某个任务，只能执行一次。如果需要则开启，但我们一般使用 crond 来进行循环定时任务。</td>
<td>关闭</td>
</tr>
<tr>
<td>auditd</td>
<td>审核子系统。如果开启了此服务，SELinux 的审核信息会写入/var/log/audit/audit.log 文件，如果不开启，审核信息会记录在 syslog 中</td>
<td>开启</td>
</tr>
<tr>
<td>autofs</td>
<td>让服务器可以自动挂载网络中的其他服务器的共享数据，一般用来自动挂载 NFS 服务。如果没有 NFS 服务建议关闭</td>
<td>关闭</td>
</tr>
<tr>
<td>avahi-daemon</td>
<td>Avahi  是 zeroconf 协 议 的 实 现 。 它可以在没有 DNS 服务的局域网里发现基于 zeroconf 协议的设备和服务。除非有兼容设备或使用zeroconf 协议，否则关闭。</td>
<td>关闭</td>
</tr>
<tr>
<td>bluetooth</td>
<td>蓝牙设备支持。一般不会在服务器上启用蓝牙设备，关闭它</td>
<td>关闭</td>
</tr>
<tr>
<td>capi</td>
<td>仅对使用 ISND 设备的用户有用。</td>
<td>关闭</td>
</tr>
<tr>
<td>chargen-dgram</td>
<td>使用 UDP 协议的 chargen server。主要功能是提供类似远程打字的功能。</td>
<td>关闭</td>
</tr>
<tr>
<td>chargen-stream</td>
<td>同上。</td>
<td>关闭</td>
</tr>
<tr>
<td>cpuspeed</td>
<td>可以用来调整 CPU 的频率。当闲置时可以自动降低 CPU 频率来节省电量。</td>
<td>开启</td>
</tr>
<tr>
<td>crond</td>
<td>系统的定时任务，一般的 Linux 服务器都需要定时任务帮助系统维护。建议开启</td>
<td>开启</td>
</tr>
<tr>
<td>cvs</td>
<td>一个版本控制系统</td>
<td>关闭</td>
</tr>
<tr>
<td>daytime-dgram</td>
<td>daytime 使用 TCP 协议的 Daytime 守护进程，该协议为客户机实现从远程服务器获取日期 和时间的功能。</td>
<td>关闭</td>
</tr>
<tr>
<td>daytime-stream</td>
<td>同上。</td>
<td>关闭</td>
</tr>
<tr>
<td>dovecot</td>
<td>邮件服务中 POP3/IMAP 服务的守护进程。主要用来接收信件， 如果启动了邮件服务则开启，否则关闭</td>
<td>关闭</td>
</tr>
<tr>
<td>echo-dgram</td>
<td>服务器回显客户服务的进程。</td>
<td>关闭</td>
</tr>
<tr>
<td>echo-stream</td>
<td>同上。</td>
<td>关闭</td>
</tr>
<tr>
<td>firstboot</td>
<td>系统安装完成之后，有个欢迎界面，需要对系统进程初始设定。就是这个进程的作用。既然不是第一次启动了，关闭吧</td>
<td>关闭</td>
</tr>
<tr>
<td>gpm</td>
<td>在字符终端(tty1-tty6)中可以使用鼠标复制和粘贴。就是这个服务的功能。</td>
<td>开启</td>
</tr>
<tr>
<td>haldaemon</td>
<td>检测盒支持 USB 设备。如果是服务器可以关闭，个人机建议开启。</td>
<td>关闭</td>
</tr>
<tr>
<td>hidd</td>
<td>蓝牙鼠标、键盘等蓝牙设备检测。必须启动 bluetooth 服务。</td>
<td>关闭</td>
</tr>
<tr>
<td>hplip HP</td>
<td>打印机支持，如果没有 HP 打印机关闭吧</td>
<td>关闭</td>
</tr>
<tr>
<td>httpd</td>
<td>apache 服务的守护进程。如果需要启动 apache，就开启。</td>
<td>开启</td>
</tr>
<tr>
<td>ip6tables</td>
<td>IPv6 的防火墙，目前 IPv6 协议并没有使用，可以关闭</td>
<td>关闭</td>
</tr>
<tr>
<td>iptables</td>
<td>防火墙功能，Linux 中防火墙是内核支持功能。这是服务器的主要防护手段，必须开启。</td>
<td>开启</td>
</tr>
<tr>
<td>irda</td>
<td>IrDA 提供红外线设备(笔记本，PDA’s，手机，计算器等等) 关闭间的通讯支持。关闭吧</td>
<td>关闭</td>
</tr>
<tr>
<td>irqbalance</td>
<td>支持多核处理器，让 CPU 可以自动分配系统中断(IRQ)，提高系统性能。目前服务器多是多核 CPU，请开启。</td>
<td>开启</td>
</tr>
<tr>
<td>isdn</td>
<td>使用 ISDN 设备连接网络。目前主流的联网方式是光纤接入和ADSL，ISDN 已经非常少见，请关闭</td>
<td>关闭</td>
</tr>
<tr>
<td>kudzu</td>
<td>该服务可以在开机时进行硬件检测，并会调用相关的设置软件。建议关闭，仅在需要时开启</td>
<td>关闭</td>
</tr>
<tr>
<td>lvm2-monitor</td>
<td>该服务可以让系统支持 LVM 逻辑卷组，如果分区采用的是 LVM方式，那么应该开启。建议开启</td>
<td>开启</td>
</tr>
<tr>
<td>mcstrans</td>
<td>SELinux 的支持服务。建议启动</td>
<td>开启</td>
</tr>
<tr>
<td>mdmonitor</td>
<td>该服务用来监测 Software RAID 或 LVM 的信息。不是必须服务，建议关闭</td>
<td>关闭</td>
</tr>
<tr>
<td>mdmpd</td>
<td>该服务用来监测 Multi-Path 设备。不是必须服务</td>
<td>关闭</td>
</tr>
<tr>
<td>messagebus</td>
<td>这是 Linux 的 IPC(Interprocess Communication，进程间通讯)服务，用来在各个软件中交换信息。个人建议关闭</td>
<td>关闭</td>
</tr>
<tr>
<td>microcode_ctl</td>
<td>Intel 系列的 CPU 可以通过这个服务支持额外的微指令集。</td>
<td>关闭</td>
</tr>
<tr>
<td>mysqld</td>
<td>mysql 数据库服务器。如果需要就开启，否则关闭</td>
<td>开启</td>
</tr>
<tr>
<td>named</td>
<td>DNS 服务的守护进程，用来进行域名解析。如果是 DNS 服务器则开启，否则关闭</td>
<td>关闭</td>
</tr>
<tr>
<td>netfs</td>
<td>该服务用于在系统启动时自动挂载网络中的共享文件空间，比如:NFS，Samba 等等。需要就开启，否则关闭</td>
<td>关闭</td>
</tr>
<tr>
<td>network</td>
<td>提供网络设置功能。通过这个服务来管理网络，所以开启</td>
<td>开启</td>
</tr>
<tr>
<td>nfs</td>
<td>NFS(Network File System)服务，Linux 与 Linux 之间的文件共享服务。需要就开启，否则关闭</td>
<td>关闭</td>
</tr>
<tr>
<td>nfslock</td>
<td>在 Linux 中如果使用了 NFS 服务，为了避免同一个文件被不同的用户同时编辑，所有有这个锁服务。有 NFS 是开启，否则关闭</td>
<td>关闭</td>
</tr>
<tr>
<td>ntpd</td>
<td>该服务可以通过互联网自动更新系统时间，使系统时间永远都准确。需要则开启，但不是必须服务</td>
<td>关闭</td>
</tr>
<tr>
<td>pcscd</td>
<td>智能卡检测服务，可以关闭</td>
<td>关闭</td>
</tr>
<tr>
<td>portmap</td>
<td>用在远程过程调用(RPC)的服务，如果没有任何 RPC 服务时， 可以关闭。主要是 NFS 和 NIS 服务需要。</td>
<td>关闭</td>
</tr>
<tr>
<td>psacct</td>
<td>该守护进程支持几个监控进程活动的工具。</td>
<td>关闭</td>
</tr>
<tr>
<td>rdisc</td>
<td>客户端 ICMP 路由协议</td>
<td>关闭</td>
</tr>
<tr>
<td>readahead_early</td>
<td>在系统开机的时候，先将某些进程加载如内存整理，可以加快一点启动速度。</td>
<td>关闭</td>
</tr>
<tr>
<td>readahead_later</td>
<td>同上</td>
<td>关闭</td>
</tr>
<tr>
<td>restorecond</td>
<td>用于给 SELinux 监测和重新加载正确的文件上下文。如果开启 SELinux 则需要开启。</td>
<td>关闭</td>
</tr>
<tr>
<td>rpcgssd</td>
<td>与 NFS 有关的客户端功能。如果没有 NFS 就关闭吧。</td>
<td>关闭</td>
</tr>
<tr>
<td>rpcidmapd</td>
<td>同上</td>
<td>关闭</td>
</tr>
<tr>
<td>rsync</td>
<td>远程数据备份守护进程。</td>
<td>关闭</td>
</tr>
<tr>
<td>sendmail</td>
<td>sendmail 邮件服务的守护进程。如果有邮件服务就开启，否则关闭</td>
<td>关闭</td>
</tr>
<tr>
<td>setroubleshoot</td>
<td>该 服 务 用 于 将 SELinux 相 关 信 息 记 录 在 日 志/var/log/messages 中。建议开启</td>
<td>开启</td>
</tr>
<tr>
<td>smartd</td>
<td>该服务用于自动检测硬盘状态。建议开启</td>
<td>开启</td>
</tr>
<tr>
<td>smb</td>
<td>网络服务 samba 的守护进程。可以让 Linux 和 Windows 之间共享数据。如果需要则开启</td>
<td>关闭</td>
</tr>
<tr>
<td>squid</td>
<td>代理服务的守护进程。如果需要则开启，否则关闭</td>
<td>关闭</td>
</tr>
<tr>
<td>sshd</td>
<td>ssh 加密远程登陆管理的服务。服务器的远程管理必须使用此服务，不要关闭</td>
<td>开启</td>
</tr>
<tr>
<td>syslog</td>
<td>日志的守护进程。</td>
<td>开启</td>
</tr>
<tr>
<td>vsftpd</td>
<td>vsftp 服务的守护进程。如果需要 FTP 服务则开启，否则关闭</td>
<td>关闭</td>
</tr>
<tr>
<td>xfs</td>
<td>这个是 X Window 的字体守护进程。为图形界面提供字体服务，如果不启动图形界面，就不用开启。</td>
<td>关闭</td>
</tr>
<tr>
<td>xinetd</td>
<td>超级守护进程。如果有依赖 xinetd 的服务就必须开启。</td>
<td>开启</td>
</tr>
<tr>
<td>ypbind</td>
<td>为 NIS(网络信息系统)客户机激活 ypbind 服务进程。</td>
<td>关闭</td>
</tr>
<tr>
<td>yum-updatesd</td>
<td>yum 的在线升级服务。</td>
<td>关闭</td>
</tr>
</tbody>
</table>
<p>链接: <a href="https://pan.baidu.com/s/13cuRwKQ24MmGciC0twAH0Q" target="_blank" rel="external">https://pan.baidu.com/s/13cuRwKQ24MmGciC0twAH0Q</a> 密码: 4qg6</p>
]]></content>
    
    <summary type="html">
    
      &lt;style&gt;
table th:nth-of-type(1){
width: 20%;
}
table th:nth-of-type(2){
width: 60%
;
}
table th:nth-of-type(3){
width: 20%;
}

&lt;/style&gt;

&lt;ta
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux下批量重命名</title>
    <link href="http://yoursite.com/2018/05/12/Linux%E4%B8%8B%E6%89%B9%E9%87%8F%E9%87%8D%E5%91%BD%E5%90%8D/"/>
    <id>http://yoursite.com/2018/05/12/Linux下批量重命名/</id>
    <published>2018-05-11T16:27:01.000Z</published>
    <updated>2018-05-12T07:25:01.686Z</updated>
    
    <content type="html"><![CDATA[<p>需要命名一些文件，在文件名的前缀加上序列，这些文件的文件包空格、中文<br>思路如下：<br>重命名使用mv命令（不讨论其它重命名命令），需要提供文件名，通过ls命令可以获得文件名，将ls命令得到的文件名分割为数组，在遍历中进行重命名</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">#!/usr/bin/env bash</div><div class="line"></div><div class="line">#这样只有一条path</div><div class="line">p=&apos;/home/lee/Templates/&apos;</div><div class="line">path=$(ls -Art $p)</div><div class="line"># echo $path</div><div class="line">IFS=$&apos;\n&apos;</div><div class="line">#只有加单引号且使用$才是换行符</div><div class="line"># https://blog.csdn.net/apache0554/article/details/47006609</div><div class="line">array=($path)</div><div class="line"></div><div class="line">i=0</div><div class="line">while [ $i -lt $&#123;#array[@]&#125; ]</div><div class="line">do</div><div class="line">  echo $&#123;array[$i]&#125;</div><div class="line">  echo &apos;s&apos;</div><div class="line">  var=$(printf &quot;%03d&quot; $i)</div><div class="line">  # echo $var</div><div class="line">  mv &quot;$&#123;p&#125;$&#123;array[$i]&#125;&quot; &quot;$&#123;p&#125;$&#123;var&#125;$&#123;array[$i]&#125;&quot;</div><div class="line">  let i++</div><div class="line">done</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;需要命名一些文件，在文件名的前缀加上序列，这些文件的文件包空格、中文&lt;br&gt;思路如下：&lt;br&gt;重命名使用mv命令（不讨论其它重命名命令），需要提供文件名，通过ls命令可以获得文件名，将ls命令得到的文件名分割为数组，在遍历中进行重命名&lt;/p&gt;
&lt;figure class=&quot;
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux服务管理</title>
    <link href="http://yoursite.com/2018/05/11/Linux%E6%9C%8D%E5%8A%A1%E7%AE%A1%E7%90%86/"/>
    <id>http://yoursite.com/2018/05/11/Linux服务管理/</id>
    <published>2018-05-11T08:11:49.000Z</published>
    <updated>2018-05-12T01:48:08.223Z</updated>
    
    <content type="html"><![CDATA[<style>
table th:nth-of-type(1){
width: 20%;
}
table th:nth-of-type(2){
width: 60%
;
}
table th:nth-of-type(3){
width: 20%;
}

</style>



<h2 id="系统的运行级别"><a href="#系统的运行级别" class="headerlink" title="系统的运行级别"></a>系统的运行级别</h2><table>
<thead>
<tr>
<th>运行级别</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>0</td>
<td>关机</td>
</tr>
<tr>
<td>1</td>
<td>单用户模式，主要用于系统修复</td>
</tr>
<tr>
<td>2</td>
<td>不完全的命令行,不含NFS服务</td>
</tr>
<tr>
<td>3</td>
<td>完全的命令行</td>
</tr>
<tr>
<td>4</td>
<td>系统暴露</td>
</tr>
<tr>
<td>5</td>
<td>图形模式</td>
</tr>
<tr>
<td>6</td>
<td>重启</td>
</tr>
</tbody>
</table>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">runlevel			#查看运行级别</div><div class="line">init 5				#修改运行级别</div><div class="line"></div><div class="line">vi /etc/inittab		#修改系统默认运行级别</div><div class="line">id:3:initdefault:</div><div class="line">#系统开机后直接进入哪个运行级别</div></pre></td></tr></table></figure>
<h2 id="服务的分类"><a href="#服务的分类" class="headerlink" title="服务的分类"></a>服务的分类</h2><p><img src="http://ow3dy62zt.bkt.clouddn.com/IMG33.png" alt=""></p>
<p>独立服务：独立的运行在内存中，一直在运行的</p>
<p>基于xinetd的服务：<br>服务由xinetd来管控，平时不运行，一有访问，先到xinetd，然后由xinetd去调用<br>现在基本上不再使用xinetd。<br>默认没有安装，可以通过yum方式安装xinetd服务，在安装之前使用chkconfig可以查看系统的服务状态，安装完整之后会出现一组xinetd管理的服务，默认都是关闭的。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">chkconfig --list			#查看xinetd是否安装</div><div class="line">yum -y install xinetd		#安装xinetd</div><div class="line">chkconfig --list			#查看xinetd服务</div></pre></td></tr></table></figure></p>
<p>RPM安装服务和源码包安装服务的区别：安装位置不同</p>
<ul>
<li>源码包安装在知道位置，一般是<code>/usr/local</code></li>
<li>RPM包安装在默认位置中</li>
</ul>
<table>
<thead>
<tr>
<th>目录</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>/etc/</td>
<td>配置文件位置</td>
</tr>
<tr>
<td>/etc/init.d/</td>
<td>启动脚本位置</td>
</tr>
<tr>
<td>/etc/sysconfig/</td>
<td>初始化环境配置文件位置</td>
</tr>
<tr>
<td>/etc/xinetd.conf</td>
<td>xinetd配置文件</td>
</tr>
<tr>
<td>/etc/xinetd/</td>
<td>基于xinetd服务的启动脚本</td>
</tr>
<tr>
<td>/var/lib/</td>
<td>服务产生的数据目录</td>
</tr>
<tr>
<td>/var/log/</td>
<td>日志</td>
</tr>
</tbody>
</table>
<h2 id="查询已经安装的服务"><a href="#查询已经安装的服务" class="headerlink" title="查询已经安装的服务"></a>查询已经安装的服务</h2><ol>
<li><p>RPM包安装的服务：<code>chkconfig --list</code><br>查看服务自启动状态，可以看到所有RPM包安装的服务</p>
</li>
<li><p>源码包安装的服务：查看服务安装位置，一般是<code>/usr/local</code>下</p>
</li>
</ol>
<h2 id="服务与端口"><a href="#服务与端口" class="headerlink" title="服务与端口"></a>服务与端口</h2><p>端口：每个协议都有65536个端口，默认给某个协议提供了端口，那么此端口就不在为其他协议体统服务。<br>在<code>/etc/services</code>中可以查看服务与端口对应关系<br>因为服务与端口的这种一一对应的关系，所以可以通过查询端口来查看服务状态<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ps aux  #查看系统中运行了哪些服务（包含程序）</div></pre></td></tr></table></figure></p>
<h2 id="查询系统中开启的服务"><a href="#查询系统中开启的服务" class="headerlink" title="查询系统中开启的服务"></a>查询系统中开启的服务</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">netstat -tlunp</div><div class="line"> -t:列出tcp数据</div><div class="line"> -u:列出udp数据</div><div class="line"> -l:列出正在监听的网络服务(不包含已连接的网络服务)</div><div class="line"> -n:用端口号来显示服务，而不是服务名</div><div class="line"> -p：列出该服务的进程id（PID）</div><div class="line"></div><div class="line">netstat -an  #查看系统中开了哪些程序和服务占用了端口</div></pre></td></tr></table></figure>
<h2 id="服务的启动与自启动"><a href="#服务的启动与自启动" class="headerlink" title="服务的启动与自启动"></a>服务的启动与自启动</h2><p>服务启动：就是在当前系统中让服务运行，并提供功能。<br>服务自启动：让服务在系统开机或者重启动之后，随着系统的启动而自动启动服务。</p>
<p>推荐统一用配置文件的方式，这样不容易冲突</p>
<p><img src="http://ow3dy62zt.bkt.clouddn.com/IMG32.jpg" alt=""></p>
<ul>
<li><code>chkconfig off</code>不需要添加启动级别</li>
<li>xinetd自启动和启动是相通的，相互一致</li>
<li>源码包安装服务的启动使用绝对路径，调用启动脚本来启动。不同的源码包的启动脚本不同。<br>可以查看源码包的安装说明，其中有启动脚本的方法</li>
<li>让源码包的服务能被service命令管理启动：在init.d目录中做个软链接<br>`ln -s /usr/local/apache2/bin/apache    /etc/init.d/</li>
<li><p>让源码包服务能被 chkconfig 与  ntsysv 命令管理自启动</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">vi /etc/init.d/apache</div><div class="line"># chkconfig:35 86 76</div><div class="line">#指定httpd脚本可以被chkconfig命令管理。</div><div class="line">#格式： chkconfig ： 运行级别  启动顺序  关闭顺序</div><div class="line">#description： source package apache   </div><div class="line">#说明，内容随意。</div><div class="line">把这两句加到/etc/rc.d/init.d/apachetctl 保存(需要带#)</div><div class="line">然后chkconfig --add apache</div></pre></td></tr></table></figure>
</li>
<li><p>源码安装的Apache输入IP地址默认打开的网页是/usr/local/apache2/htdocs/index.html<br>rpm包安装的Apache默认打开的是/var/www/html/下的文件，但是默认是没有的，所以打开Apache测试页。当在这个目录下建一个网页后，打开的是新增的网页。</p>
</li>
<li>/etc/rc3.d/下面的文件是运行级别3时，系统开启与关闭分别要执行的服务文件，启动顺序与关闭顺序不能和现有的冲突</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;style&gt;
table th:nth-of-type(1){
width: 20%;
}
table th:nth-of-type(2){
width: 60%
;
}
table th:nth-of-type(3){
width: 20%;
}

&lt;/style&gt;



&lt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Fiddler for Linux 安装</title>
    <link href="http://yoursite.com/2018/05/11/Fiddler-for-Linux-%E5%AE%89%E8%A3%85/"/>
    <id>http://yoursite.com/2018/05/11/Fiddler-for-Linux-安装/</id>
    <published>2018-05-11T02:01:44.000Z</published>
    <updated>2018-05-11T02:04:31.372Z</updated>
    
    <content type="html"><![CDATA[<ol>
<li><p>安装mono：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt install mono-complete</div></pre></td></tr></table></figure>
</li>
<li><p>下载Fiddler<br><a href="https://www.telerik.com/download/fiddler" target="_blank" rel="external">https://www.telerik.com/download/fiddler</a></p>
</li>
<li><p>用mono安装它，从提取的目录中运行：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mono Fiddler.exe</div></pre></td></tr></table></figure>
</li>
</ol>
<p>或者运行 <code>mono /path/to/extracted/fiddler/Fiddler.exe</code></p>
]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;安装mono：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;co
    
    </summary>
    
    
      <category term="工具" scheme="http://yoursite.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Linux 安装Tomcat并部署Java web项目</title>
    <link href="http://yoursite.com/2018/05/07/Linux-%E5%AE%89%E8%A3%85Tomcat%E5%B9%B6%E9%83%A8%E7%BD%B2Java-web%E9%A1%B9%E7%9B%AE/"/>
    <id>http://yoursite.com/2018/05/07/Linux-安装Tomcat并部署Java-web项目/</id>
    <published>2018-05-07T14:10:33.000Z</published>
    <updated>2018-05-07T14:49:33.155Z</updated>
    
    <content type="html"><![CDATA[<h2 id="在Linux上安装JDK"><a href="#在Linux上安装JDK" class="headerlink" title="在Linux上安装JDK"></a>在Linux上安装JDK</h2><p>略</p>
<h2 id="在Linux上安装FTP"><a href="#在Linux上安装FTP" class="headerlink" title="在Linux上安装FTP"></a>在Linux上安装FTP</h2><p>略</p>
<h2 id="在Linux上安装Tomcat"><a href="#在Linux上安装Tomcat" class="headerlink" title="在Linux上安装Tomcat"></a>在Linux上安装Tomcat</h2><p>下载Tomcat，利用FTP上传到服务器上<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">#解压，位置随意</div><div class="line">tar -zxvf apache-tomcat-8.0.29.tar.gz</div><div class="line"></div><div class="line">#防火墙里面开放8080端口</div><div class="line">vim /etc/sysconfig/iptables</div><div class="line">#重启防火墙</div><div class="line">service iptables restart</div><div class="line"></div><div class="line">#启动Tomcat</div><div class="line">/usr/local/tomcat/bin/startup.sh</div><div class="line"></div><div class="line">#tomcat自启动 </div><div class="line">vim /etc/rc.d/rc.local</div><div class="line">/usr/local/tomcat/bin/startup.sh</div></pre></td></tr></table></figure></p>
<p><img src="http://ow3dy62zt.bkt.clouddn.com/IMG31.png" alt=""></p>
<h2 id="Idea打包Java-web项目"><a href="#Idea打包Java-web项目" class="headerlink" title="Idea打包Java web项目"></a>Idea打包Java web项目</h2><p>点击Idea左下角，在右侧出现maven project选项，单击maven project选项，出现菜单，选择其中的Lifecycle菜单项，展开，执行里面的package命令即可。<br>在项目文件夹/target/下可以找到 *.war 文件。</p>
<h2 id="将war文件部署到tomcat上"><a href="#将war文件部署到tomcat上" class="headerlink" title="将war文件部署到tomcat上"></a>将war文件部署到tomcat上</h2><ol>
<li>将war文件拷贝到tomcat安装目录的<code>$TOMCAT_HOME/webapps</code>文件夹下。</li>
<li>修改<code>$TOMCAT_HOME/conf/server.xml</code>，在Host配置段中添加类似于如下内容：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;Context path=&quot;/&quot; docBase=&quot;appname.war&quot; debug=&quot;0&quot; privileged=&quot;true&quot; reloadable=&quot;true&quot;/&gt;</div></pre></td></tr></table></figure>
</li>
</ol>
<p>docBase=”appname.war”中的appname.war 替换成自己的war的名字。</p>
<ol>
<li>重启tomcat，然后访问<a href="http://localhost:8080/appname" target="_blank" rel="external">http://localhost:8080/appname</a> 即可。</li>
</ol>
<p>参考：</p>
<ul>
<li><a href="https://blog.csdn.net/to_baidu/article/details/52823402" target="_blank" rel="external">https://blog.csdn.net/to_baidu/article/details/52823402</a></li>
<li><a href="https://blog.csdn.net/yums467/article/details/51660683" target="_blank" rel="external">https://blog.csdn.net/yums467/article/details/51660683</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;在Linux上安装JDK&quot;&gt;&lt;a href=&quot;#在Linux上安装JDK&quot; class=&quot;headerlink&quot; title=&quot;在Linux上安装JDK&quot;&gt;&lt;/a&gt;在Linux上安装JDK&lt;/h2&gt;&lt;p&gt;略&lt;/p&gt;
&lt;h2 id=&quot;在Linux上安装FTP&quot;&gt;&lt;a
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux ftp命令</title>
    <link href="http://yoursite.com/2018/05/07/Linux-ftp%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2018/05/07/Linux-ftp命令/</id>
    <published>2018-05-07T09:52:45.000Z</published>
    <updated>2018-05-07T12:03:35.139Z</updated>
    
    <content type="html"><![CDATA[<h2 id="连接ftp服务器"><a href="#连接ftp服务器" class="headerlink" title="连接ftp服务器"></a>连接ftp服务器</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ftp [hostname| ip-address]</div></pre></td></tr></table></figure>
<h2 id="列出文件列表以及切换目录"><a href="#列出文件列表以及切换目录" class="headerlink" title="列出文件列表以及切换目录"></a>列出文件列表以及切换目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ls</div><div class="line">cd</div></pre></td></tr></table></figure>
<h2 id="下载文件"><a href="#下载文件" class="headerlink" title="下载文件"></a>下载文件</h2><p>下载文件通常用get和mget这两条命令。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">#get [remote-file] [local-file]</div><div class="line">#获取远程服务器上/usr/your/1.htm</div><div class="line">ftp&gt; get /usr/your/1.htm 1.htm</div><div class="line"></div><div class="line">mget [remote-files]</div><div class="line">#从远端主机接收一批文件至本地主机</div><div class="line">#获取服务器上/usr/your/下的所有文件</div><div class="line">cd /usr/your/</div><div class="line">mget *.*</div><div class="line"></div><div class="line">#显示下载进度</div><div class="line">ftp&gt; hash</div></pre></td></tr></table></figure>
<h2 id="上传文件"><a href="#上传文件" class="headerlink" title="上传文件"></a>上传文件</h2><p>注意上传命令需要指定目标文件名<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">put local-file [remote-file]</div><div class="line">#将本地一个文件传送至远端主机中。</div><div class="line">#把本地的1.htm传送到远端主机/usr/your,并改名为2.htm</div><div class="line">ftp&gt; put 1.htm /usr/your/2.htm</div><div class="line"></div><div class="line">mput local-files</div><div class="line">#将本地主机中一批文件传送至远端主机。</div><div class="line">#把本地当前目录下所有html文件上传到服务器/usr/your/ 下</div><div class="line">ftp&gt; cd /usr/your</div><div class="line">ftp&gt; mput *.htm</div></pre></td></tr></table></figure></p>
<h2 id="断开连接"><a href="#断开连接" class="headerlink" title="断开连接"></a>断开连接</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">bye：中断与服务器的连接</div><div class="line">ftp&gt; bye</div></pre></td></tr></table></figure>
<h2 id="改变传输模式"><a href="#改变传输模式" class="headerlink" title="改变传输模式"></a>改变传输模式</h2><p>ftp的传输模式有ascii模式和二进制模式<br>直接输入ascii则设置传输模式为ascii模式<br>直接输入binary则设置传输模式为binary模式</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ftp&gt; ascii</div><div class="line">ftp&gt; binary</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;连接ftp服务器&quot;&gt;&lt;a href=&quot;#连接ftp服务器&quot; class=&quot;headerlink&quot; title=&quot;连接ftp服务器&quot;&gt;&lt;/a&gt;连接ftp服务器&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cl
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux 安装vsftpd</title>
    <link href="http://yoursite.com/2018/05/07/Linux-%E5%AE%89%E8%A3%85vsftpd/"/>
    <id>http://yoursite.com/2018/05/07/Linux-安装vsftpd/</id>
    <published>2018-05-07T07:15:39.000Z</published>
    <updated>2018-05-07T11:12:43.409Z</updated>
    
    <content type="html"><![CDATA[<p>vsftpd 的全称是”very secure FTP daemon“，是一款在Linux发行版中最受推崇的FTP服务器程序。特点是小巧轻快，安全易用。</p>
<p>总结起来只有几步</p>
<ul>
<li>安装</li>
<li>配置文件</li>
<li>防火墙</li>
<li>设置ftp用户</li>
</ul>
<p>一、安装FTP服务器<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">#查看是否已经安装vsftpd</div><div class="line">rpm -qa | grep vsftpd</div><div class="line"></div><div class="line">yum -y install vsftpd</div></pre></td></tr></table></figure></p>
<p>二、手动启动，并使其能够从下次系统启动时自动启动<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">systemctl start vsftpd</div><div class="line">systemctl enable vsftpd</div><div class="line">#chkconfig vsftpd on</div></pre></td></tr></table></figure></p>
<p>三、允许从外部系统访问FTP服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">firewall-cmd --permanent --zone=public  --add-port=21/tcp</div><div class="line">firewall-cmd --permanent --zone=public  --add-service=ftp</div><div class="line">firewall-cmd --reload</div></pre></td></tr></table></figure></p>
<p>四、备份配置文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cp /etc/vsftpd/vsftpd.conf /etc/vsftpd/vsftpd.conf.bak</div><div class="line">cp /etc/vsftpd.userlist /etc/vsftpd.userlist.bak</div></pre></td></tr></table></figure></p>
<p>五、配置<code>/etc/vsftpd/vsftpd.conf</code><br>没有的请自行添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">anonymous_enable = NO＃禁用匿名登录</div><div class="line">local_enable = YES＃允许本地登录</div><div class="line">write_enable = YES＃启用更改文件系统的FTP命令</div><div class="line">local_umask = 022＃用于本地用户创建文件的umask值</div><div class="line">dirmessage_enable = YES＃用户首次进入新目录时启用显示消息</div><div class="line">xferlog_enable = YES＃会保存一个日志文件，详细说明上传和下载</div><div class="line">connect_from_port_20 = YES＃使用服务器机器上的端口20（ftp-data）进行端口连接</div><div class="line">xferlog_std_format = YES＃保持标准的日志文件格式</div><div class="line">listen = NO＃阻止vsftpd在独立模式下运行</div><div class="line">listen_ipv6 = YES＃vsftpd将监听IPv6套接字而不是IPv4套接字</div><div class="line">pam_service_name = vsftpd＃vsftpd将使用的PAM服务的名称</div><div class="line">userlist_enable = YES＃启用vsftpd加载用户名列表</div><div class="line">tcp_wrappers = YES＃打开tcp</div></pre></td></tr></table></figure></p>
<p>FTP基于用户列表文件允许/拒绝对用户的FTP访问<br>默认情况下，如果userlist_enable = YES  并且userlist_deny = YES，在<code>userlist_file=/etc/vsftpd/user_list</code>列出的用户都无法登录访问FTP。</p>
<p>如果userlist_deny = NO，这意味着只有<code>userlist_file = /etc/vsftpd/user_list</code>中明确列出的用户才能登录。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">userlist_enable = YES ＃vsftpd将加载从userlist_file给出的用户名列表</div><div class="line">userlist_file = /etc/vsftpd/user_list＃存储用户名</div><div class="line">userlist_deny = NO</div></pre></td></tr></table></figure>
<p>when users login to the FTP server, they are placed in a chroot’ed jail, this is the local root directory which will act as their home directory for the FTP session only.<br>当用户登录到FTP服务器时，他们被放置在chroot jail里，chroot jail是本地根目录，会作为FTP会话的主目录</p>
<p>限制FTP用户到他们的主目录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">chroot_local_user = YES </div><div class="line">allow_writeable_chroot = YES</div></pre></td></tr></table></figure></p>
<p><code>chroot_local_user = YES</code>意味着本地用户通过默认设置登录后，他们的主目录将被放置在chroot jail中</p>
<p>并且默认情况下，vsftpd不允许chroot jail目录因安全原因而可写，但是，我们可以使用选项<code>allow_writeable_chroot = YES</code>来覆盖此设置。</p>
<p>保存该文件并关闭它</p>
<p>六、配置SELinux<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">setsebool -P ftp_home_dir on</div><div class="line">#会报错</div></pre></td></tr></table></figure></p>
<p>set SELinux rule to allow FTP to read/write user’s home directory<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">semanage boolean -m ftpd_full_access --on</div><div class="line">-bash: semanage: command not found</div><div class="line">yum provides semanage</div><div class="line">yum install policycoreutils-python</div><div class="line">systemctl restart vsftpd</div></pre></td></tr></table></figure></p>
<p>七、测试FTP服务器<br>创建一个FTP用户<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">useradd -d /home/ftptest -g ftp -s /sbin/nologin ftptest</div><div class="line">passwd ftpuser</div></pre></td></tr></table></figure></p>
<p>将用户添加到文件/etc/vsftpd/user_list中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">echo ftptest &gt;&gt; /etc/vsftpd.userlist</div><div class="line">cat /etc/vsftpd.userlist</div></pre></td></tr></table></figure></p>
<p>分别测试匿名用户anonymous、root、ftptest</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">ftp 192.168.0.203</div><div class="line">anonymous	530</div><div class="line">root		530</div><div class="line">ftptest		230</div><div class="line"></div><div class="line">#root因为在/etc/ftpusers目录里所以无法登录，该目录为禁止登录的用户</div><div class="line">#ftptest进入后，执行ls，可以测试是否为ftptest用户自己的主目录</div></pre></td></tr></table></figure>
<p>八、配置不同的FTP用户主目录</p>
<p>使用<code>allow_writeable_chroot=YES</code>具有某些安全隐患，特别是在用户具有上载权限或shell访问权限的情况下。<br>只有当你确切地知道你在做什么时才激活这个选项。需要注意的是，这些安全性影响并不是vsftpd特有的，它们适用于所有提供将本地用户放入chroot jail的FTP守护进程。</p>
<p>注释掉之前的语句<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">＃allow_writeable_chroot = YES</div></pre></td></tr></table></figure></p>
<p>为用户创建替代本地根目录的目录（ravi您的可能不同），并将所有用户的写入权限移除到此目录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mkdir /home/ftptest/ftp</div><div class="line">chown nobody：nobody /home/ftptest/ftp</div><div class="line">chmod a+w /home/ftptest/ftp</div></pre></td></tr></table></figure></p>
<p>修改vsftpd配置文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">user_sub_token = $USER＃将用户名插入本地根目录</div><div class="line">local_root = /home/$USER/ftp＃定义任何用户本地根目录</div></pre></td></tr></table></figure></p>
<p>重启vsftpd</p>
<p>注意上传命令需要指定目标文件名<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ftp put /path/to/local_file remote_file_name</div></pre></td></tr></table></figure></p>
<p>参考：</p>
<ul>
<li>重点<a href="https://www.kancloud.cn/chandler/bc-linux/52710" target="_blank" rel="external">https://www.kancloud.cn/chandler/bc-linux/52710</a></li>
<li><a href="https://www.tecmint.com/install-ftp-server-in-centos-7/" target="_blank" rel="external">https://www.tecmint.com/install-ftp-server-in-centos-7/</a></li>
<li><a href="https://wsgzao.github.io/post/vsftpd/" target="_blank" rel="external">https://wsgzao.github.io/post/vsftpd/</a></li>
<li><a href="https://blog.csdn.net/aiynmimi/article/details/77012507" target="_blank" rel="external">https://blog.csdn.net/aiynmimi/article/details/77012507</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;vsftpd 的全称是”very secure FTP daemon“，是一款在Linux发行版中最受推崇的FTP服务器程序。特点是小巧轻快，安全易用。&lt;/p&gt;
&lt;p&gt;总结起来只有几步&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安装&lt;/li&gt;
&lt;li&gt;配置文件&lt;/li&gt;
&lt;li&gt;防火墙&lt;/
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux 安装Apache</title>
    <link href="http://yoursite.com/2018/05/07/Linux-%E5%AE%89%E8%A3%85Apache/"/>
    <id>http://yoursite.com/2018/05/07/Linux-安装Apache/</id>
    <published>2018-05-07T06:15:33.000Z</published>
    <updated>2018-05-07T07:10:44.118Z</updated>
    
    <content type="html"><![CDATA[<p>安裝Apache<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo yum install httpd</div></pre></td></tr></table></figure></p>
<p>启动Apache，并且设定为开机自动启动<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo systemctl start httpd</div><div class="line">sudo systemctl enable httpd</div></pre></td></tr></table></figure></p>
<p>允许http服务通过防火墙<br>CentOS 7的内置防火墙默认设置为阻止网络流量<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">sudo firewall-cmd --add-service=http --permanent</div><div class="line">sudo firewall-cmd --add-service=https --permanent</div><div class="line">#sudo firewall-cmd --permanent --add-port=80/tcp</div><div class="line">#sudo firewall-cmd --permanent --add-port=443/tcp</div><div class="line">sudo systemctl restart firewalld</div></pre></td></tr></table></figure></p>
<p>重启Apache<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo systemctl restart httpd.service</div></pre></td></tr></table></figure></p>
<p>配置文件</p>
<p><code>/etc/httpd/conf/httpd.conf</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">DocumentRoot &quot;/var/www/html/example.com/public_html&quot;</div><div class="line"></div><div class="line">...</div><div class="line"></div><div class="line">&lt;IfModule prefork.c&gt;</div><div class="line">    StartServers        5</div><div class="line">    MinSpareServers     20</div><div class="line">    MaxSpareServers     40</div><div class="line">    MaxRequestWorkers   256</div><div class="line">    MaxConnectionsPerChild 5500</div><div class="line">&lt;/IfModule&gt;</div></pre></td></tr></table></figure></p>
<p><code>/etc/httpd/conf.d/vhost.conf</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">NameVirtualHost *:80</div><div class="line"></div><div class="line">&lt;VirtualHost *:80&gt;</div><div class="line">    ServerAdmin webmaster@example.com</div><div class="line">    ServerName example.com</div><div class="line">    ServerAlias www.example.com</div><div class="line">    DocumentRoot /var/www/html/example.com/public_html/</div><div class="line">    ErrorLog /var/www/html/example.com/logs/error.log</div><div class="line">    CustomLog /var/www/html/example.com/logs/access.log combined</div><div class="line">&lt;/VirtualHost&gt;</div></pre></td></tr></table></figure></p>
<p>创建上面引用的目录：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo mkdir -p /var/www/html/example.com/&#123;public_html,logs&#125;</div></pre></td></tr></table></figure></p>
<p>检查Apache的状态<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo systemctl status httpd</div></pre></td></tr></table></figure></p>
<p>停止Apache<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo systemctl stop httpd</div></pre></td></tr></table></figure></p>
<p>参考：</p>
<p><a href="https://www.linode.com/docs/web-servers/apache/install-and-configure-apache-on-centos-7/" target="_blank" rel="external">https://www.linode.com/docs/web-servers/apache/install-and-configure-apache-on-centos-7/</a><br><a href="https://www.liquidweb.com/kb/how-to-install-apache-on-centos-7/" target="_blank" rel="external">https://www.liquidweb.com/kb/how-to-install-apache-on-centos-7/</a><br>SELinux：<a href="https://www.brilliantcode.net/170/centos-7-install-apache-httpd/" target="_blank" rel="external">https://www.brilliantcode.net/170/centos-7-install-apache-httpd/</a><br>SELinux：<a href="https://www.brilliantcode.net/145/centos-7-check-selinux-status-enabled-or-not/" target="_blank" rel="external">https://www.brilliantcode.net/145/centos-7-check-selinux-status-enabled-or-not/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;安裝Apache&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux desktop entriy</title>
    <link href="http://yoursite.com/2018/05/07/Linux-desktop-entry/"/>
    <id>http://yoursite.com/2018/05/07/Linux-desktop-entry/</id>
    <published>2018-05-07T03:17:37.000Z</published>
    <updated>2018-05-07T03:28:54.314Z</updated>
    
    <content type="html"><![CDATA[<p>在 Windows 平台上，用户可以通过点击位于桌面或菜单上的快捷方式轻松打开目标应用程序。现代 Linux 桌面系统的应用程序是通过<code>*.desktop</code>文件管理的。</p>
<p>一个应用程序对应一个<code>.desktop</code>文件，根据是用户自己可见还是所有用户可见的不同而放在 <code>~/.local/share/applications</code>或者 <code>/usr/share/applications/</code> 目录中。</p>
<p>可以自己添加.desktop文件来增加应用程序到launcher里，<code>*.desktop</code>文件格式如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">[Desktop Entry]</div><div class="line">Encoding=UTF-8</div><div class="line">Name=火狐浏览器</div><div class="line">Name[en]=Firefox</div><div class="line">Name[en_US]=Firefox</div><div class="line">Comment=Firefox for jason</div><div class="line">Exec=/opt/firefox/firefox</div><div class="line">Icon=/opt/firefox/browser/icons/mozicon128.png</div><div class="line">Terminal=false</div><div class="line">Type=Application</div><div class="line">Categories=Application;Network;</div></pre></td></tr></table></figure>
<p>使用流程：</p>
<ol>
<li>创建文件，以.desktop为后缀。</li>
<li>编写内容，修改权限</li>
<li>测试是否能双击启动程序</li>
<li>移动到/usr/share/applications/目录下</li>
</ol>
<p>文件中不能有多余的全角或半角空格，否则会出错</p>
<p>参考：</p>
<ul>
<li><a href="https://linux.cn/article-9199-1.html" target="_blank" rel="external">https://linux.cn/article-9199-1.html</a></li>
<li><a href="https://wiki.archlinux.org/index.php/Desktop_entries_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87" target="_blank" rel="external">https://wiki.archlinux.org/index.php/Desktop_entries_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87</a>)</li>
<li><a href="https://www.ibm.com/developerworks/cn/linux/l-cn-dtef/index.html" target="_blank" rel="external">https://www.ibm.com/developerworks/cn/linux/l-cn-dtef/index.html</a></li>
<li><a href="https://blog.csdn.net/lwjdgl/article/details/49204659" target="_blank" rel="external">https://blog.csdn.net/lwjdgl/article/details/49204659</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在 Windows 平台上，用户可以通过点击位于桌面或菜单上的快捷方式轻松打开目标应用程序。现代 Linux 桌面系统的应用程序是通过&lt;code&gt;*.desktop&lt;/code&gt;文件管理的。&lt;/p&gt;
&lt;p&gt;一个应用程序对应一个&lt;code&gt;.desktop&lt;/code&gt;文件，
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux用户管理 查看用户</title>
    <link href="http://yoursite.com/2018/05/06/Linux%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86-%E6%9F%A5%E7%9C%8B%E7%94%A8%E6%88%B7/"/>
    <id>http://yoursite.com/2018/05/06/Linux用户管理-查看用户/</id>
    <published>2018-05-06T11:56:06.000Z</published>
    <updated>2018-05-06T12:21:32.128Z</updated>
    
    <content type="html"><![CDATA[<h3 id="查看用户"><a href="#查看用户" class="headerlink" title="查看用户"></a>查看用户</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">w：查看登录用户信息</div><div class="line">w 用户名</div><div class="line">user:登陆的用户名</div><div class="line">tty:登陆终端</div><div class="line">from:从哪个IP地址登陆</div><div class="line">login@:登陆时间</div><div class="line">idle:用户闲置时间</div><div class="line">jcpu:和终端连接所有进程占用的时间</div><div class="line">pcpu:当前进程所占用的时间</div><div class="line">what:正在运行的命令</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">who：查看登录用户信息</div><div class="line">who 用户名</div><div class="line">登录名</div><div class="line">登陆终端</div><div class="line">登录时间（登陆来源IP地址）</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">last：查询当前和过去登录的用户信息</div><div class="line">last  默认读取var/log/wtmp</div><div class="line">用户名</div><div class="line">登录终端</div><div class="line">登陆IP</div><div class="line">登录时间</div><div class="line">退出时间（在线时间）</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">lastlog：查看所有用户最后一次登录信息</div><div class="line">lastlog </div><div class="line">lastlog命令默认是读取/var/log/lastlog文件内容</div><div class="line">用户名</div><div class="line">登录终端</div><div class="line">登陆ip</div><div class="line">最后一次登陆时间</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">whoami				#显示当前登录用户名</div><div class="line">id 用户名			#显示指定用户信息，包括用户编号、用户编号、主要组编号及名称、附属组列表</div><div class="line">groups 用户名 		#显示用户所在的所有组，包括主要组和附属组</div><div class="line">chfn 用户名 		#设置用户资料，依次输入用户资料</div><div class="line">finger 用户名 		#显示用户详细资料，与chfn对应</div></pre></td></tr></table></figure>
<p>###切换用户<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">su 用户名 				#切换到其他用户下</div><div class="line">su 					</div><div class="line">#后面什么也不接表示切换到root用户下</div><div class="line">#普通用户进其他用户需要密码，root用户进普通用户不需要密码</div></pre></td></tr></table></figure></p>
<h3 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">touch /etc/nologin					#在etc目录下创建一个nologin文件(文件内容无关紧要)，暂时禁止除管理员外的用户登录</div><div class="line">passwd -l user1						#锁定账户</div><div class="line">passwd -u user1						#解锁账户</div><div class="line">passwd -d user1						#清除用户密码，无密码登录</div><div class="line"></div><div class="line">wall [想说的话] 相当于喇叭广播的功能</div><div class="line">talk [用户名] 聊天框里聊天</div><div class="line">write [用户名] 相当于密聊</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;查看用户&quot;&gt;&lt;a href=&quot;#查看用户&quot; class=&quot;headerlink&quot; title=&quot;查看用户&quot;&gt;&lt;/a&gt;查看用户&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pr
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux用户管理 新增/修改/删除用户</title>
    <link href="http://yoursite.com/2018/05/06/Linux%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86-%E6%96%B0%E5%A2%9E-%E4%BF%AE%E6%94%B9-%E5%88%A0%E9%99%A4%E7%94%A8%E6%88%B7/"/>
    <id>http://yoursite.com/2018/05/06/Linux用户管理-新增-修改-删除用户/</id>
    <published>2018-05-06T11:55:37.000Z</published>
    <updated>2018-05-06T12:00:27.594Z</updated>
    
    <content type="html"><![CDATA[<h2 id="用户基本命令"><a href="#用户基本命令" class="headerlink" title="用户基本命令"></a>用户基本命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">useradd 用户名					#添加用户，所在用户组与用户名同名</div><div class="line">useradd -g 组名 用户名			#添加用户，指定其所在的组</div><div class="line">useradd -d 目录 用户名 			#添加用户，制定其用户的家目录，没有指定所在组时，默认用户名就为用户组名</div><div class="line">#passwd 用户名					#新建的用户需要设置密码，设置用户目录</div><div class="line"></div><div class="line">usermod -c 注释信息 用户名 	  #为指定用户名添加注释</div><div class="line">usermod -l 新用户名 旧用户名 		#更改用户名</div><div class="line">usermod -d 目录 用户名 			#更改用户个人文件夹的路径</div><div class="line">usermod -g 新用户组 用户名 	#更改指定用户的所属组</div><div class="line">userdel 用户名 				#删除用户，但是不删除用户个人文件夹里的文件</div><div class="line">userdel -r 用户名 				#删除用户并且删除用户个人文件夹里的文件</div></pre></td></tr></table></figure>
<h2 id="用户组基本命令"><a href="#用户组基本命令" class="headerlink" title="用户组基本命令"></a>用户组基本命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">groupadd 组名 				#创建用户组</div><div class="line">groupadd -g 组编号 组名 			#创建用户组并指定组编号</div><div class="line">groupmod -n 新组名 原组名 		#更改用户组名称</div><div class="line">groupmod -g 组编号 组名 			#设置用户组编号</div><div class="line">groupdel 组名 					#删除用户组，前提是用户组内没有用户</div></pre></td></tr></table></figure>
<h2 id="附属组"><a href="#附属组" class="headerlink" title="附属组"></a>附属组</h2><p>用户可以同时属于多个组，一个是主要组，其他的为附属组</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">gpasswd -a 用户名 附属组 			#给用户添加附属组</div><div class="line">gpasswd -d 用户名 附属组 			#把用户从附属组中删除</div><div class="line"></div><div class="line">newgrp 组名</div><div class="line">#用户创建的文件默认为主要组；需要以附属组创建文件的，需将身份切换到附属组</div><div class="line">#把用户的组切换到附属组，需要用户登录后，自己执行，切换</div><div class="line">#组密码是在组切换时用的，如果有会要求输入组密码</div><div class="line"></div><div class="line">useradd -g group1 -G group2,group3... 用户名  </div><div class="line">#同时指定主用户组和附属用户组</div><div class="line">gpasswd 用户名 </div><div class="line">#更改组密码,回车会有相应的提示操作</div><div class="line">gpasswd -a 用户名 附属组，附属组，.....</div><div class="line">#添加附属组</div><div class="line">usermod -g</div><div class="line">#修改主要组</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;用户基本命令&quot;&gt;&lt;a href=&quot;#用户基本命令&quot; class=&quot;headerlink&quot; title=&quot;用户基本命令&quot;&gt;&lt;/a&gt;用户基本命令&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gut
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
</feed>
