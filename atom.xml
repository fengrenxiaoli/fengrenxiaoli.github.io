<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>太阳落下</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-05-05T03:11:59.409Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>木鱼</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux 专题导航</title>
    <link href="http://yoursite.com/2018/06/05/Linux-%E4%B8%93%E9%A2%98%E5%AF%BC%E8%88%AA/"/>
    <id>http://yoursite.com/2018/06/05/Linux-专题导航/</id>
    <published>2018-06-05T03:09:32.000Z</published>
    <updated>2018-05-05T03:11:59.409Z</updated>
    
    <content type="html"><![CDATA[<h2 id="文件管理"><a href="#文件管理" class="headerlink" title="文件管理"></a>文件管理</h2><h2 id="权限管理"><a href="#权限管理" class="headerlink" title="权限管理"></a>权限管理</h2><h2 id="软件管理"><a href="#软件管理" class="headerlink" title="软件管理"></a>软件管理</h2><h2 id="网络管理"><a href="#网络管理" class="headerlink" title="网络管理"></a>网络管理</h2><h2 id="服务管理"><a href="#服务管理" class="headerlink" title="服务管理"></a>服务管理</h2><h2 id="系统管理"><a href="#系统管理" class="headerlink" title="系统管理"></a>系统管理</h2>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;文件管理&quot;&gt;&lt;a href=&quot;#文件管理&quot; class=&quot;headerlink&quot; title=&quot;文件管理&quot;&gt;&lt;/a&gt;文件管理&lt;/h2&gt;&lt;h2 id=&quot;权限管理&quot;&gt;&lt;a href=&quot;#权限管理&quot; class=&quot;headerlink&quot; title=&quot;权限管理&quot;&gt;&lt;/a
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>局域网安装ftp</title>
    <link href="http://yoursite.com/2018/05/18/%E5%B1%80%E5%9F%9F%E7%BD%91%E5%AE%89%E8%A3%85ftp/"/>
    <id>http://yoursite.com/2018/05/18/局域网安装ftp/</id>
    <published>2018-05-18T03:47:05.000Z</published>
    <updated>2018-05-18T03:59:13.212Z</updated>
    
    <content type="html"><![CDATA[<p>写这篇文章的主要目的是方便局域网内的ftp配置</p>
<p>基本上实现这三点足够了：</p>
<ul>
<li>不允许匿名访问，因为我不想其他机器随便都能登陆上来；</li>
<li>锁定一个共享目录，在这个目录下我可以上传和下载文件，进行文件共享；</li>
<li>不单独建立ftp用户，本机就可以访问；</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install vsftpd </div><div class="line"></div><div class="line">#ubuntu的配置文件位置</div><div class="line">sudo vim /etc/vsftpd.conf</div><div class="line"></div><div class="line">anonymous_enable=NO         #禁止匿名登陆</div><div class="line">local_root=/home/user/ftp   #设定一个共享目录</div><div class="line">local_enable=YES            #本机可以访问</div><div class="line">write_enable=YES            #可以写</div><div class="line">chroot_list_enable=YES      </div><div class="line">chroot_list_file=/etc/vsftpd.chroot_list</div><div class="line">#不单独建立ftp用户</div><div class="line"></div><div class="line">#在其中写入可以使用ftp的用户名</div><div class="line">sudo vim /etc/vsftpd.chroot_list</div><div class="line"></div><div class="line">#不允许其他用户写</div><div class="line">chmod u-w,g-w ftp</div><div class="line"></div><div class="line">#重启</div><div class="line">sudo service vsftpd restart</div></pre></td></tr></table></figure>
<p>然后就可以使用各种客户端登陆了</p>
<p><br></p>
<p>参考：</p>
<ul>
<li><a href="https://blog.csdn.net/hongbin_xu/article/details/73177748" target="_blank" rel="external">https://blog.csdn.net/hongbin_xu/article/details/73177748</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;写这篇文章的主要目的是方便局域网内的ftp配置&lt;/p&gt;
&lt;p&gt;基本上实现这三点足够了：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不允许匿名访问，因为我不想其他机器随便都能登陆上来；&lt;/li&gt;
&lt;li&gt;锁定一个共享目录，在这个目录下我可以上传和下载文件，进行文件共享；&lt;/li&gt;
&lt;li&gt;不
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux SFTP、SCP命令</title>
    <link href="http://yoursite.com/2018/05/18/Linux-SFTP%5CSCP%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2018/05/18/Linux-SFTP\SCP命令/</id>
    <published>2018-05-18T02:20:11.000Z</published>
    <updated>2018-05-18T03:45:29.363Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SFTP"><a href="#SFTP" class="headerlink" title="SFTP"></a>SFTP</h2><p>SFTP是安全文件传送协议，可以为传输文件提供一种安全的网络的加密方法。</p>
<p>SFTP 与 FTP 有着几乎一样的语法和功能。SFTP 为 SSH的其中一部分，所以说 SFTP 就是通过SSH端口（默认 22端口）和 Linux 用户和密码登陆的（例如 root 账号）。SFTP 使用加密传输认证信息和传输的数据，所以使用SFTP是非常安全的。但是由于这种传输方式使用了加密/解密技术，所以传输效率比普通的FTP要低得多。</p>
<p>使用SFTP并不需要在服务器上做任何配置，只需要找个SFTP客户端，然后知道SSH端口、服务器用户名+密码即可。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"># 连接到SFTP</div><div class="line">sftp tecmint@27.48.137.6</div><div class="line"></div><div class="line"># 获得帮助</div><div class="line">?</div><div class="line">help</div><div class="line"></div><div class="line"># 检查本地工作目录</div><div class="line">lpwd</div><div class="line"># 检查远程工作目录</div><div class="line">pwd</div><div class="line"></div><div class="line"># 列出本地文件</div><div class="line">lls</div><div class="line"># 列出远程文件</div><div class="line">ls</div><div class="line"></div><div class="line"># 上传单个或多个文件</div><div class="line">put local.profile</div><div class="line"># 上传多个文件</div><div class="line">mput * .xls</div><div class="line"></div><div class="line"># 下载单个或多个文件</div><div class="line">get SettlementReport_1-10th.xls</div><div class="line"># 下载多个文件</div><div class="line">mget * .xls</div><div class="line"></div><div class="line"># 切换本地目录</div><div class="line">lcd Documents</div><div class="line"># 切换远程目录</div><div class="line">cd test</div><div class="line"></div><div class="line"># 创建目录</div><div class="line">mkdir test</div><div class="line">lmkdir test</div><div class="line"></div><div class="line"># 删除目录，该目录必须为空</div><div class="line">rm Report.xls</div><div class="line">rmdir sub1</div><div class="line"></div><div class="line"># 退出SFTP</div><div class="line">!</div><div class="line">exit</div></pre></td></tr></table></figure>
<h2 id="SCP"><a href="#SCP" class="headerlink" title="SCP"></a>SCP</h2><p>使用SSH协议来传输文件的</p>
<ul>
<li>SCP比较简单，是轻量级的，SFTP的功能则比较多</li>
<li>SCP的速度较快</li>
<li>SFTP在文件传输过程中中断的话，连接后还可以继续传输，但SCP不行</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">scp [-r] 用户名@ip:文件路径 本地路径</div><div class="line"># 网络复制命令, 下载文件 或加-r 下载文件夹</div><div class="line"></div><div class="line">scp [-r] 本地文件 用户名@ip:上传路径</div><div class="line"># 网络复制命令, 上传文件 或加-r 上传文件夹</div><div class="line"># 此为linux 与 linux之间进行文件传输的最简单方式</div></pre></td></tr></table></figure>
<p>参考：</p>
<ul>
<li><a href="https://www.tecmint.com/sftp-command-examples/" target="_blank" rel="external">https://www.tecmint.com/sftp-command-examples/</a></li>
<li><a href="https://www.jscape.com/blog/scp-vs-sftp" target="_blank" rel="external">https://www.jscape.com/blog/scp-vs-sftp</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;SFTP&quot;&gt;&lt;a href=&quot;#SFTP&quot; class=&quot;headerlink&quot; title=&quot;SFTP&quot;&gt;&lt;/a&gt;SFTP&lt;/h2&gt;&lt;p&gt;SFTP是安全文件传送协议，可以为传输文件提供一种安全的网络的加密方法。&lt;/p&gt;
&lt;p&gt;SFTP 与 FTP 有着几乎一样的
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>FTP主动模式和被动模式</title>
    <link href="http://yoursite.com/2018/05/17/FTP%E4%B8%BB%E5%8A%A8%E6%A8%A1%E5%BC%8F%E5%92%8C%E8%A2%AB%E5%8A%A8%E6%A8%A1%E5%BC%8F/"/>
    <id>http://yoursite.com/2018/05/17/FTP主动模式和被动模式/</id>
    <published>2018-05-17T04:40:42.000Z</published>
    <updated>2018-05-17T07:25:52.565Z</updated>
    
    <content type="html"><![CDATA[<p>FTP只通过TCP连接,没有用于FTP的UDP组件.FTP不同于其他服务的是它使用了两个端口, 一个数据端口和一个命令端口(或称为控制端口)。通常21端口是命令端口，20端口是数据端口。根据FTP工作方式的不同，数据端口并不总是20，这就是主动与被动FTP的最大不同之处。（不管主动模式还是被动模式都是用TCP 21端口来传输控制信号的。）</p>
<h2 id="主动FTP-PORT-Active"><a href="#主动FTP-PORT-Active" class="headerlink" title="主动FTP(PORT/Active)"></a>主动FTP(PORT/Active)</h2><p>客户端从一个任意的非特权端口N（N&gt;1023）连接到FTP服务器的命令端口，也就是21端口。然后客户端开始监听端口N+1，并发送FTP命令“port N+1”到FTP服务器。接着服务器会从它自己的数据端口（20）连接到客户端指定的数据端口（N+1）。<br><img src="http://ow3dy62zt.bkt.clouddn.com/IMG43.jpg" alt=""></p>
<p>针对FTP服务器前面的防火墙来说，必须允许以下通讯才能支持主动方式FTP：</p>
<ol>
<li>任何大于1024的端口到FTP服务器的21端口。（客户端初始化的连接）</li>
<li>FTP服务器的21端口到大于1023的端口。 （服务器响应客户端的控制端口）</li>
<li>FTP服务器的20端口到大于1023的端口。（服务器端初始化数据连接到客户端的数据端口）</li>
<li>大于1023端口到FTP服务器的20端口（客户端发送ACK响应到服务器的数据端口）</li>
</ol>
<h2 id="被动FTP-PASV-Passive"><a href="#被动FTP-PASV-Passive" class="headerlink" title="被动FTP(PASV/Passive)"></a>被动FTP(PASV/Passive)</h2><p>为了解决服务器发起到客户的连接的问题，人们开发了一种不同的FTP连接方式。这就是所谓的被动方式，当客户端通知服务器它处于被动模式时才启用。</p>
<p>在被动方式FTP中，命令连接和数据连接都由客户端发起，这样就可以解决从服务器到客户端的数据端口的入方向连接被防火墙过滤掉的问题。</p>
<p>当开启一个 FTP连接时，客户端打开两个任意的非特权本地端口（N &gt; 1024和N+1）。第一个端口连接服务器的21端口，但与主动方式的FTP不同，客户端不会提交PORT命令并允许服务器来回连它的数据端口，而是提交 PASV命令。这样做的结果是服务器会开启一个任意的非特权端口（P &gt; 1024），并发送PORT P命令给客户端。然后客户端发起从本地端口N+1到服务器的端口P的连接用来传送数据。</p>
<p><img src="http://ow3dy62zt.bkt.clouddn.com/IMG44.jpg" alt=""></p>
<p>对于服务器端的防火墙来说，必须允许下面的通讯才能支持被动方式的FTP:</p>
<ol>
<li>从任何大于1023的端口到服务器的21端口 （客户端初始化的连接）</li>
<li>服务器的21端口到任何大于1023的端口 （服务器响应到客户端的控制端口的连接）</li>
<li>从任何大于1023端口到服务器的大于1023端口 （客户端初始化数据连接到服务器指定的任意端口）</li>
<li>服务器的大于1023端口到远程的大于1023的端口（服务器发送ACK响应和数据到客户端的数据端口）</li>
</ol>
<h2 id="主动与被动FTP优缺点："><a href="#主动与被动FTP优缺点：" class="headerlink" title="主动与被动FTP优缺点："></a>主动与被动FTP优缺点：</h2><p>主动FTP对FTP服务器的管理有利，但对客户端的管理不利。因为FTP服务器企图与客户端的高位随机端口建立连接，而这个端口很有可能被客户端的防火墙阻塞掉。被动FTP对FTP客户端的管理有利，但对服务器端的管理不利。因为客户端要与服务器端建立两个连接，其中一个连到一个高位随机端口，而这个端口很有可能被服务器端的防火墙阻塞掉。</p>
<p>幸运的是，有折衷的办法。既然FTP服务器的管理员需要他们的服务器有最多的客户连接，那么必须得支持被动FTP。我们可以通过为FTP服务器指定一个有限的端口范围来减小服务器高位端口的暴露。这样，不在这个范围的任何端口会被服务器的防火墙阻塞。虽然这没有消除所有针对服务器的危险，但它大大减少了危险。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>主动FTP：<br>　　命令连接：客户端 &gt;1023端口 -&gt; 服务器 21端口<br>　　数据连接：客户端 &gt;1023端口 &lt;- 服务器 20端口 </p>
<p>被动FTP：<br>　　命令连接：客户端 &gt;1023端口 -&gt; 服务器 21端口<br>　　数据连接：客户端 &gt;1023端口 -&gt; 服务器 &gt;1023端口</p>
<p>主动模式是从服务器端向客户端发起连接；被动模式是客户端向服务器端发起连接。两者的共同点是都使用 21端口进行用户验证及管理，差别在于传送数据的方式不同，PORT模式的FTP服务器数据端口固定在20，而PASV模式则在1024-65535之间随机</p>
<p>PORT（主动）方式的连接过程是：客户端向服务器的FTP端口（默认是21）发送连接请求，服务器接受连接，建立一条命令链路。当需要传送数据时，客户端在命令链路上用PORT命令告诉服务器：“我打开了XXXX端口，你过来连接我”。于是服务器从20端口向客户端的XXXX端口发送连接请求，建立一条数据链路来传送数据。</p>
<p>PASV（被动）方式的连接过程是：客户端向服务器的FTP端口（默认是21）发送连接请求，服务器接受连接，建立一条命令链路。当需要传送数据时，服务器在命令链路上用PASV命令告诉客户端：“我打开了XXXX端口，你过来连接我”。于是客户端向服务器的XXXX端口发送连接请求，建立一条数据链路来传送数据。</p>
<p>当NAT(Network Address Translation)设备以主动模式访问FTP服务器时，由于NAT设备不会聪明的变更FTP包中的IP地址，从而导致无法访问服务器。</p>
<p>大部分互联网应用都是被动模式，因为大部分客户端都是在路由器后面，没有独立的公网IP地址，服务器想要主动连接客户端，难度太大，在现在真实的互联网环境里面几乎是不可能完成的任务。</p>
<p>大部分FTP客户端默认使用PASV方式，在大部分FTP客户端的设置里，常见到的字眼都是“PASV”或“被动模式”。</p>
<h2 id="vsftpd配置"><a href="#vsftpd配置" class="headerlink" title="vsftpd配置"></a>vsftpd配置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># vi /etc/vsftpd/vsftpd.conf</div><div class="line">pasv_enable=YES</div><div class="line">pasv_min_port=3000</div><div class="line">pasv_max_port=4000</div></pre></td></tr></table></figure>
<p>参考：</p>
<ul>
<li><a href="https://www.centos.bz/2012/08/ftp-port-pasv-mode/" target="_blank" rel="external">https://www.centos.bz/2012/08/ftp-port-pasv-mode/</a></li>
<li><a href="http://www.serv-u.com/kb/1138/Active-and-Passive-FTP-Transfers-Defined" target="_blank" rel="external">http://www.serv-u.com/kb/1138/Active-and-Passive-FTP-Transfers-Defined</a></li>
<li><a href="http://blog.sina.com.cn/s/blog_5cdb72780100jwm9.html" target="_blank" rel="external">http://blog.sina.com.cn/s/blog_5cdb72780100jwm9.html</a></li>
<li><a href="http://www.rfyy.net/archives/2641.html" target="_blank" rel="external">http://www.rfyy.net/archives/2641.html</a></li>
<li><a href="https://my.oschina.net/binny/blog/17469" target="_blank" rel="external">https://my.oschina.net/binny/blog/17469</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/36403412" target="_blank" rel="external">https://zhuanlan.zhihu.com/p/36403412</a></li>
<li><a href="http://www.cnblogs.com/xiaohh/p/4789813.html" target="_blank" rel="external">http://www.cnblogs.com/xiaohh/p/4789813.html</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;FTP只通过TCP连接,没有用于FTP的UDP组件.FTP不同于其他服务的是它使用了两个端口, 一个数据端口和一个命令端口(或称为控制端口)。通常21端口是命令端口，20端口是数据端口。根据FTP工作方式的不同，数据端口并不总是20，这就是主动与被动FTP的最大不同之处。（
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Linux查看用户登录时间及历史命令</title>
    <link href="http://yoursite.com/2018/05/16/linux%E6%9F%A5%E7%9C%8B%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E6%97%B6%E9%97%B4%E5%8F%8A%E5%8E%86%E5%8F%B2%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2018/05/16/linux查看用户登录时间及历史命令/</id>
    <published>2018-05-16T12:34:14.000Z</published>
    <updated>2018-05-16T13:13:22.917Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">who</div><div class="line">#查看当前登录用户信息：用户名、终端类型、登陆日期以及远程主机</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">users</div><div class="line">#当前登录的用户</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">history</div><div class="line">#查看命令历史</div><div class="line">$HOME/.bash_history：每个用户都有一份命令历史记录</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">last</div><div class="line">#查看用户登录历史</div><div class="line">#此命令会读取 /var/log/wtmp 文件，/var/log/btmp可以显示远程登陆信息。 </div><div class="line">#last默认打印所有用户的登陆信息</div><div class="line">last 用户名</div><div class="line">#打印某个用户的登陆信息</div><div class="line">选项： </div><div class="line">-x：显示系统开关机以及执行等级信息 </div><div class="line">-a：将登陆ip显示在最后一行 </div><div class="line">-f ：读取特定文件，可以选择 -f /var/log/btmp文件 </div><div class="line">-d：将IP地址转换为主机名 </div><div class="line">-n：设置列出名单的显示列数 </div><div class="line">-t：查看指定时间的用户登录历史 </div><div class="line">例如： </div><div class="line">last -t 20150226160404 </div><div class="line">显示这个时间戳之前的登陆历史</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">lastlog</div><div class="line">#查看所有用户最近一次登录历史</div><div class="line">#命令将读取 /var/log/lastlog 文件，用户排列顺序按照 /etc/passwd 中的顺序</div><div class="line">选项： </div><div class="line">-u：查看某个用户的最后一次登陆历史 </div><div class="line">例如： lastlog -u test </div><div class="line">查看用户test的登陆历史 </div><div class="line"></div><div class="line">-t：查看最近几天之内的用户登录历史 </div><div class="line">例如： lastlog -t 1 </div><div class="line">查看最近1天之内的登陆历史</div><div class="line"></div><div class="line">-b：查看指定天数之前的用户登录历史 </div><div class="line">例如： lastlog -b 60 </div><div class="line">查看60天之前的用户登录历史</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">ac</div><div class="line">根据/var/log/wtmp文件中的登陆和退出时间报告用户连接的时间（小时），默认输出报告总时间 </div><div class="line">-p：显示每个用户的连接时间 </div><div class="line">-d：显示每天的连接时间 </div><div class="line">-y：显示年份，和-d配合使用</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;c
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux下ls命令只显示目录或文件</title>
    <link href="http://yoursite.com/2018/05/16/Linux%E4%B8%8Bls%E5%91%BD%E4%BB%A4%E5%8F%AA%E6%98%BE%E7%A4%BA%E7%9B%AE%E5%BD%95%E6%88%96%E6%96%87%E4%BB%B6/"/>
    <id>http://yoursite.com/2018/05/16/Linux下ls命令只显示目录或文件/</id>
    <published>2018-05-16T12:05:49.000Z</published>
    <updated>2018-05-16T12:07:29.355Z</updated>
    
    <content type="html"><![CDATA[<p>本质上来说就是根据有没有以<code>/</code>结尾</p>
<h2 id="只显示目录"><a href="#只显示目录" class="headerlink" title="只显示目录"></a>只显示目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">ls -F | grep /$    # -F使得ls将文件分类，通过在文件后面加一些标记来实现</div><div class="line">ls -F | grep /</div><div class="line">ls -l | grep ^d</div><div class="line">ls -d */</div><div class="line">ls -ld */</div></pre></td></tr></table></figure>
<h2 id="只显示文件"><a href="#只显示文件" class="headerlink" title="只显示文件"></a>只显示文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">ls -F | grep [^\/]$  # 注意行尾匹配符号$不可少</div><div class="line">ls -F | grep [^/]$</div><div class="line">ls -l | grep ^-</div><div class="line">ls -l | grep ^- | wc -l  # wc命令统计行数</div><div class="line">find . -type f -maxdepth 1 | xargs ls -al</div><div class="line">ls -p | grep [^/]$  # -p使得ls命令在目录后面加斜杠</div><div class="line">find . ! -name . -prune -type f   # 这个命令不会很好排序文件</div></pre></td></tr></table></figure>
<p>参考：</p>
<ul>
<li><a href="http://blog.163.com/ytyang__/blog/static/8405845201112502159277/" target="_blank" rel="external">http://blog.163.com/ytyang__/blog/static/8405845201112502159277/</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本质上来说就是根据有没有以&lt;code&gt;/&lt;/code&gt;结尾&lt;/p&gt;
&lt;h2 id=&quot;只显示目录&quot;&gt;&lt;a href=&quot;#只显示目录&quot; class=&quot;headerlink&quot; title=&quot;只显示目录&quot;&gt;&lt;/a&gt;只显示目录&lt;/h2&gt;&lt;figure class=&quot;highlight
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux禁止ping以及开启ping的方法</title>
    <link href="http://yoursite.com/2018/05/16/Linux%E7%A6%81%E6%AD%A2ping%E4%BB%A5%E5%8F%8A%E5%BC%80%E5%90%AFping%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2018/05/16/Linux禁止ping以及开启ping的方法/</id>
    <published>2018-05-16T11:56:24.000Z</published>
    <updated>2018-05-16T12:05:12.878Z</updated>
    
    <content type="html"><![CDATA[<p>Linux默认是允许Ping响应的，系统是否允许Ping由2个因素决定的：A、内核参数，B、防火墙，需要2个因素同时允许才能允许Ping，2个因素有任意一个禁Ping就无法Ping。</p>
<p>具体的配置方法如下：</p>
<h2 id="内核参数设置"><a href="#内核参数设置" class="headerlink" title="内核参数设置"></a>内核参数设置</h2><h4 id="允许ping设置"><a href="#允许ping设置" class="headerlink" title="允许ping设置"></a>允许ping设置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">#临时允许PING操作的命令</div><div class="line">echo 0 &gt;/proc/sys/net/ipv4/icmp_echo_ignore_all</div><div class="line"></div><div class="line">#永久允许ping配置方法</div><div class="line">#/etc/sysctl.conf设置</div><div class="line">net.ipv4.icmp_echo_ignore_all=0</div><div class="line">#使新配置生效</div><div class="line">sysctl -p</div></pre></td></tr></table></figure>
<h4 id="禁止Ping设置"><a href="#禁止Ping设置" class="headerlink" title="禁止Ping设置"></a>禁止Ping设置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">#临时禁止PING的命令</div><div class="line">echo 1 &gt; /proc/sys/net/ipv4/icmp_echo_ignore_all     </div><div class="line"></div><div class="line">#永久禁止ping配置方法</div><div class="line">#/etc/sysctl.conf设置</div><div class="line">net.ipv4.icmp_echo_ignore_all=1</div><div class="line">#使新配置生效</div><div class="line">sysctl -p</div></pre></td></tr></table></figure>
<h2 id="防火墙设置"><a href="#防火墙设置" class="headerlink" title="防火墙设置"></a>防火墙设置</h2><p>注：此处的方法的前提是内核配置是默认值，也就是没有禁止Ping</p>
<p>这里以Iptables防火墙为例，其他防火墙操作方法可参考防火墙的官方文档。</p>
<h4 id="允许ping设置-1"><a href="#允许ping设置-1" class="headerlink" title="允许ping设置"></a>允许ping设置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">iptables -A INPUT -p icmp --icmp-type echo-request -j ACCEPT</div><div class="line">iptables -A OUTPUT -p icmp --icmp-type echo-reply -j ACCEPT</div><div class="line">#或者也可以临时停止防火墙操作的</div><div class="line">service iptables stop</div></pre></td></tr></table></figure>
<h4 id="禁止ping设置"><a href="#禁止ping设置" class="headerlink" title="禁止ping设置"></a>禁止ping设置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">iptables -A INPUT -p icmp --icmp-type 8 -s 0/0 -j DROP</div></pre></td></tr></table></figure>
<p>参考：</p>
<ul>
<li><a href="https://www.cnblogs.com/chenshoubiao/p/4781016.html" target="_blank" rel="external">https://www.cnblogs.com/chenshoubiao/p/4781016.html</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Linux默认是允许Ping响应的，系统是否允许Ping由2个因素决定的：A、内核参数，B、防火墙，需要2个因素同时允许才能允许Ping，2个因素有任意一个禁Ping就无法Ping。&lt;/p&gt;
&lt;p&gt;具体的配置方法如下：&lt;/p&gt;
&lt;h2 id=&quot;内核参数设置&quot;&gt;&lt;a href
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>【Linux】Linux 系统资源查看</title>
    <link href="http://yoursite.com/2018/05/15/Linux-%E7%B3%BB%E7%BB%9F%E8%B5%84%E6%BA%90%E6%9F%A5%E7%9C%8B/"/>
    <id>http://yoursite.com/2018/05/15/Linux-系统资源查看/</id>
    <published>2018-05-15T04:48:04.000Z</published>
    <updated>2018-05-16T01:45:29.276Z</updated>
    
    <content type="html"><![CDATA[<h2 id="监控系统资源（memory-swap-system-io-cpu等）"><a href="#监控系统资源（memory-swap-system-io-cpu等）" class="headerlink" title="监控系统资源（memory swap system io cpu等）"></a>监控系统资源（memory swap system io cpu等）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">vmstat [刷新延时 刷新次数]</div><div class="line">例：vmstat 1 3</div><div class="line"></div><div class="line">procs：进程信息字段</div><div class="line">-r：等待运行的进程数，数量越大，系统越繁忙</div><div class="line">-b：不可被唤醒和进程数量，数量越大，系统越繁忙</div><div class="line"></div><div class="line">memory：内存信息字段</div><div class="line">-swpd：虚拟内存的使用情况，单位KB</div><div class="line">-free：空闲的内存容量，单位KB</div><div class="line">-buff：缓冲的内存容量，单位KB</div><div class="line">-cache：缓存的内存容量，单位KB</div><div class="line"></div><div class="line">swap：交换分区的信息字段</div><div class="line">-si：从磁盘中交换到内存中数据的数量，单位KB</div><div class="line">-so：从内存中交换到磁盘中数据的数量，单位KB</div><div class="line">这两个数越大，证明需要经常在磁盘和内存之间交换，系统性能越差</div><div class="line"></div><div class="line">io：磁盘读写信息字段</div><div class="line">-bi：从块设备读入数据的总量，单位是块</div><div class="line">-bo：写到块设备的数据和总量，单位是块。</div><div class="line">这两个数越大，代表系统的I/O越繁忙 </div><div class="line"></div><div class="line">system：系统信息字段</div><div class="line">-in：每秒被中断的进程次数</div><div class="line">-cs：每秒钟进行的事件切换次数。此两个数越大，代表系统与接口设备的通信非常繁忙 </div><div class="line"></div><div class="line">CPU：CPU信息字段</div><div class="line">-us：非内核进程消耗CPU运算时间的百分比</div><div class="line">-sy：内核进程消耗CPU运算时间的百分比</div><div class="line">-id：空闲CPU的百分比</div><div class="line">-wa：等待I/O所消耗的CPU百分比</div><div class="line">-st：被虚拟机所盗用的CPU百分比</div></pre></td></tr></table></figure>
<h2 id="开机时内核检测信息"><a href="#开机时内核检测信息" class="headerlink" title="开机时内核检测信息"></a>开机时内核检测信息</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">dmesg</div><div class="line">dmesg | grep cpu</div></pre></td></tr></table></figure>
<h2 id="查看内存使用状态"><a href="#查看内存使用状态" class="headerlink" title="查看内存使用状态"></a>查看内存使用状态</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">free [-b-k-m-g]</div><div class="line">-b：以字节为单位显示</div><div class="line">-k：以KBl为单位显示，默认就是以KB为单位显示</div><div class="line">-m：以MB为单位显示</div><div class="line">-g：以GB为单位显示（不满1g时显示精度丢失）</div></pre></td></tr></table></figure>
<p><img src="http://ow3dy62zt.bkt.clouddn.com/IMG38.png" alt=""></p>
<p>第一行：total是总内存数，used是已经使用的内存数，free是空闲的内存数，shared是多个进程共享的内存总数，buff是缓冲内存数，cache是缓存内存数。默认单位是KB</p>
<p><del>第二行：-/buffers/cache的内存数，相当于第一行的used-buffers-cached。+/buffers/cache的内存数，相当于第一行的free+buffers+cached</del></p>
<p>第<del>二</del>三行：total是swap的总数；used是已经使用的swap总数，free是空闲的swap数。默认单位是KB</p>
<h2 id="查看cpu信息"><a href="#查看cpu信息" class="headerlink" title="查看cpu信息"></a>查看cpu信息</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat/proc/cpuinfo</div></pre></td></tr></table></figure>
<h2 id="显示系统的系统时间，平均负载，当前登录用户数"><a href="#显示系统的系统时间，平均负载，当前登录用户数" class="headerlink" title="显示系统的系统时间，平均负载，当前登录用户数"></a>显示系统的系统时间，平均负载，当前登录用户数</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">uptime</div></pre></td></tr></table></figure>
<p>显示系统的系统时间，平均负载，当前登录用户数，即top命令的第一行（top命令耗费资源）</p>
<p>w命令也可以看到这个数据，w命令侧重用户信息的显示，显示了终端号ip，平均负载等</p>
<h2 id="查看系统与内核相关信息"><a href="#查看系统与内核相关信息" class="headerlink" title="查看系统与内核相关信息"></a>查看系统与内核相关信息</h2><p>两种方法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">uname [选项]</div><div class="line"></div><div class="line">选项：</div><div class="line">-a :查看系统所有相关信息</div><div class="line">-r :查看内核版本</div><div class="line">-s :查看内核名称</div><div class="line"></div><div class="line"></div><div class="line">cat /proc/version</div></pre></td></tr></table></figure></p>
<h2 id="判断当前系统的位数"><a href="#判断当前系统的位数" class="headerlink" title="判断当前系统的位数"></a>判断当前系统的位数</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">file /bin/ls</div><div class="line">#通过查看命令的位数</div><div class="line">#64位cpu仍可以安装32位系统，不能通过cpu位数来判断</div></pre></td></tr></table></figure>
<h2 id="查看发行版信息"><a href="#查看发行版信息" class="headerlink" title="查看发行版信息"></a>查看发行版信息</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">#centos 7 可用</div><div class="line">#实际上，打开/etc目录可以看到redhat-release和system-release全都软链接到了centos-release</div><div class="line">rpm -q centos-release</div><div class="line">cat /etc/centos-release</div><div class="line">cat /etc/redhat-release</div><div class="line">cat /etc/system-release</div><div class="line"></div><div class="line">#centos 7.4不可用</div><div class="line">lsb_release -a</div><div class="line">cat /etc/issue</div></pre></td></tr></table></figure>
<h2 id="列出进程打开或使用的文件信息"><a href="#列出进程打开或使用的文件信息" class="headerlink" title="列出进程打开或使用的文件信息"></a>列出进程打开或使用的文件信息</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">lsof [选项]</div><div class="line"></div><div class="line">选项：</div><div class="line">-c 字符串 ：只列出以字符串开头的进程打开文件</div><div class="line">-u 用户名 ：只列出某个用户的进程打开的文件</div><div class="line">-p pid    : 列出某个pid进程打开的文件</div><div class="line"></div><div class="line"></div><div class="line">示例：</div><div class="line">lsof | more</div><div class="line">#查询所有进程-分屏显示</div><div class="line"></div><div class="line">lsof /sbin/init</div><div class="line">#查询/sbin/init文件被哪个文件调用（只能查系统文件，其他自己建立的文件查没有意义）</div><div class="line"></div><div class="line">lsof -c httpd </div><div class="line">#查看httpd进程调用了哪个文件</div><div class="line"></div><div class="line">lsof -u root</div><div class="line">#按照用户名，查询某用户的进程所调用的文件名（数量可能很多）</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;监控系统资源（memory-swap-system-io-cpu等）&quot;&gt;&lt;a href=&quot;#监控系统资源（memory-swap-system-io-cpu等）&quot; class=&quot;headerlink&quot; title=&quot;监控系统资源（memory swap syste
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>【Linux】Linux进程管理03 修改进程优先级</title>
    <link href="http://yoursite.com/2018/05/15/Linux%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86-%E4%BF%AE%E6%94%B9%E8%BF%9B%E7%A8%8B%E4%BC%98%E5%85%88%E7%BA%A7/"/>
    <id>http://yoursite.com/2018/05/15/Linux进程管理-修改进程优先级/</id>
    <published>2018-05-15T03:10:37.000Z</published>
    <updated>2018-05-15T18:06:07.531Z</updated>
    
    <content type="html"><![CDATA[<p>Linux操作系统是一个多用户、多任务的操作系统，Linux系统中运行着非常多的进程，但是CPU在同一时钟周期内只能运算一个指令。进程优先级决定了每个进程处理的先后顺序 </p>
<h2 id="查看优先级"><a href="#查看优先级" class="headerlink" title="查看优先级"></a>查看优先级</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ps -el </div><div class="line">#PRI(priority): 是系统的优先级</div><div class="line">#NI (nice)： 用户可以自定义的优先级</div><div class="line">#实际执行的优先级是PRI+NI，数字越小该进程优先级越高</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="给新执行的命令赋予NI值"><a href="#给新执行的命令赋予NI值" class="headerlink" title="给新执行的命令赋予NI值"></a>给新执行的命令赋予NI值</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">nice [选项] 命令</div><div class="line">#nice命令可以给新执行的命令直接赋予NI值，但是不能修改已经存在进程的NI值</div><div class="line">选项：</div><div class="line">-n NI值：给命令赋予NI值。</div><div class="line">例如：nice -n -5 service httpd start</div></pre></td></tr></table></figure>
<p>修改NI值时有几个注意事项</p>
<ul>
<li>NI值的范围是-20到19</li>
<li>普通用户调整NI值的范围是0到19,而且只能调整自己的进程</li>
<li>普通用户只能调高NI值，而不能降低，如原本NI值为0，则只能调整为大于0</li>
<li>root用户才能设定进程NI值为负值，而且可以调整任何用户的进程</li>
<li>PRI（最终值）=PRI（原始值）+NI</li>
<li>用户只能修改NI的值，不能直接修改PRI</li>
</ul>
<p><br></p>
<h2 id="修改已经存在进程的NI值"><a href="#修改已经存在进程的NI值" class="headerlink" title="修改已经存在进程的NI值"></a>修改已经存在进程的NI值</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">renice [优先级] PID</div><div class="line">#renice命令是修改已经存在进程的NI值的命令</div><div class="line"></div><div class="line">renice -10 2125</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Linux操作系统是一个多用户、多任务的操作系统，Linux系统中运行着非常多的进程，但是CPU在同一时钟周期内只能运算一个指令。进程优先级决定了每个进程处理的先后顺序 &lt;/p&gt;
&lt;h2 id=&quot;查看优先级&quot;&gt;&lt;a href=&quot;#查看优先级&quot; class=&quot;headerli
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>【Linux】Linux进程管理02 杀死进程</title>
    <link href="http://yoursite.com/2018/05/15/Linux%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86-%E6%9D%80%E6%AD%BB%E8%BF%9B%E7%A8%8B/"/>
    <id>http://yoursite.com/2018/05/15/Linux进程管理-杀死进程/</id>
    <published>2018-05-15T03:10:00.000Z</published>
    <updated>2018-05-15T18:06:17.127Z</updated>
    
    <content type="html"><![CDATA[<h2 id="kill命令-杀死一个进程"><a href="#kill命令-杀死一个进程" class="headerlink" title="kill命令 杀死一个进程"></a>kill命令 杀死一个进程</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">kill -l</div><div class="line">#查看可用的进程信号</div><div class="line"></div><div class="line">kill [信号] PID</div></pre></td></tr></table></figure>
<style>
table th:nth-of-type(1){
width: 20%;
}
table th:nth-of-type(2){
width: 20%;
}
table th:nth-of-type(3){
width: 60%;
}
</style>

<p>其中有两个常用信号</p>
<table>
<thead>
<tr>
<th>信号代号</th>
<th>信号名称</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>SIGHUP</td>
<td>关闭读取配置文件后重启</td>
</tr>
<tr>
<td>9</td>
<td>SIGKILL</td>
<td>强制停止</td>
</tr>
</tbody>
</table>
<p><img src="http://ow3dy62zt.bkt.clouddn.com/IMG037.png" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">kill -HUP(或-1) 进程号</div><div class="line">#平滑重启服务</div><div class="line">#正常修改完配置文件后，需要重启服务</div><div class="line">#用普通的restart来重启会提出正在使用的用户，造成不好的用户体验。</div><div class="line">#平滑重启是重启服务配置，保留正在使用的用户。 </div><div class="line"></div><div class="line">kill -9 2236</div><div class="line">#强制杀死进程</div></pre></td></tr></table></figure>
<p><br>  </p>
<h2 id="killall命令-批量杀死同一类型的进程"><a href="#killall命令-批量杀死同一类型的进程" class="headerlink" title="killall命令 批量杀死同一类型的进程"></a>killall命令 批量杀死同一类型的进程</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">killall  [选项]  [信号]  进程名 </div><div class="line">#按照进程名杀死进程，可以批量杀死同一类型的进程</div><div class="line"></div><div class="line">选项：</div><div class="line">-i：交互式，询问是否要杀死某个进程</div><div class="line">-I：忽略进程名的大小写</div></pre></td></tr></table></figure>
<p><br>  </p>
<h2 id="pkill命令-批量杀死同一类型的进程"><a href="#pkill命令-批量杀死同一类型的进程" class="headerlink" title="pkill命令 批量杀死同一类型的进程"></a>pkill命令 批量杀死同一类型的进程</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">pkill [选项] [信号] 进程名 </div><div class="line">#按照进程名终止进程，可以批量杀死同一类型的进程</div><div class="line"></div><div class="line">选项：</div><div class="line">-t 终端号：按照终端号踢出用户</div></pre></td></tr></table></figure>
<p>案例：踢出登录用户<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">w </div><div class="line">#查看当前登陆用户的用户 TTY列为终端号</div><div class="line">按照终端号杀死进程</div><div class="line">pkill -9 -t tty1</div><div class="line"></div><div class="line">#只有超级用户才能踢除用户</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;kill命令-杀死一个进程&quot;&gt;&lt;a href=&quot;#kill命令-杀死一个进程&quot; class=&quot;headerlink&quot; title=&quot;kill命令 杀死一个进程&quot;&gt;&lt;/a&gt;kill命令 杀死一个进程&lt;/h2&gt;&lt;figure class=&quot;highlight plai
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>【Linux】Linux进程管理01 查看进程</title>
    <link href="http://yoursite.com/2018/05/15/Linux%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86-%E6%9F%A5%E7%9C%8B%E8%BF%9B%E7%A8%8B/"/>
    <id>http://yoursite.com/2018/05/15/Linux进程管理-查看进程/</id>
    <published>2018-05-15T03:09:00.000Z</published>
    <updated>2018-05-17T12:47:06.972Z</updated>
    
    <content type="html"><![CDATA[<style>
table th:nth-of-type(1){
width: 30%;
}
table th:nth-of-type(2){
width: 70%;
}
</style>


<p>进程是正在执行的一个程序或命令，每一个进程都是一个运行的实体，都有自己的地址空间，并占用一定的系统资源</p>
<p>进程管理的作用</p>
<ol>
<li>判断服务器健康状态</li>
<li>查看系统中所有的进程</li>
<li>杀死进程</li>
</ol>
<p><br>  </p>
<h2 id="ps命令-查看所有进程"><a href="#ps命令-查看所有进程" class="headerlink" title="ps命令 查看所有进程"></a>ps命令 查看所有进程</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">ps aux </div><div class="line">#查看系统中所有进程 ，使用BSD操作系统格式（没有-）</div><div class="line">ps -le</div><div class="line">#查看系统中所有进程 ，使用Linux标准命令格式</div><div class="line">ps -ef |grep ssh</div><div class="line"></div><div class="line">选项</div><div class="line">-a :显示一个终端的所有进程</div><div class="line">-u :显示进程的归属用户及内存的使用情况</div><div class="line">-x :显示没有控制终端的进程</div><div class="line">-l :长格式显示，显示更加详细的信息</div><div class="line">-e :显示所有进程，和-A作用一致</div></pre></td></tr></table></figure>
<p>输出详解</p>
<table>
<thead>
<tr>
<th>显示</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>USER</td>
<td>该进程是由哪个用户产生的</td>
</tr>
<tr>
<td>%CPU</td>
<td>该进程占用CPU资源的百分比，占用越高，进程越耗费资源</td>
</tr>
<tr>
<td>%MEM</td>
<td>该进程占用物理内存的百分比，占用越高，进程越耗费资源</td>
</tr>
<tr>
<td>VSZ</td>
<td>该进程占用虚拟内存的大小 ，单位KB</td>
</tr>
<tr>
<td>RSS</td>
<td>该进程占用实际物理内存的大小，单位KB</td>
</tr>
<tr>
<td>TTY</td>
<td>表示该进程是在哪个终端运行的<br>tty1-tty6是本地字符界面终端，tty7是本地图形终端<br> pts/0-255代表虚拟终端</td>
</tr>
<tr>
<td>STAT</td>
<td>进程的状态  <br>R :运行 <br> S :睡眠 <br>T :停止<br>s :包含子进程 <br>   + :位于后台</td>
</tr>
<tr>
<td>START</td>
<td>该进程的启动时间</td>
</tr>
<tr>
<td>TIME</td>
<td>该进程占用CPU的运算时间，注意不是系统时间</td>
</tr>
<tr>
<td>COMMAND</td>
<td>产生些进程的命令名</td>
</tr>
</tbody>
</table>
<p><code>/sbin/init</code>的pid永远是1，它是系统下所有进程的父进程，所有的进程都依赖于它</p>
<p>TTY是<code>？</code>，代表该进程是由系统内核启动的，一般认为是系统进程</p>
<p><br>  </p>
<h2 id="pstree命令-查看进程树"><a href="#pstree命令-查看进程树" class="headerlink" title="pstree命令 查看进程树"></a>pstree命令 查看进程树</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">pstree [选项]</div><div class="line">-p :显示进程的PID</div><div class="line">-u :显示进程的所属用户</div></pre></td></tr></table></figure>
<p><br>  </p>
<h2 id="top命令-查看系统健康状态"><a href="#top命令-查看系统健康状态" class="headerlink" title="top命令 查看系统健康状态"></a>top命令 查看系统健康状态</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">top [选项]</div><div class="line">选项：</div><div class="line">-d秒数：指定top命令每隔几秒更新。默认是3秒</div><div class="line">-b：使用批处理模式输出。 一般和 ”-n&quot;选项合用</div><div class="line">-n 次数：指定top 命令执行的次数。 一般和 “-b”选项合用</div><div class="line"></div><div class="line">在 top 命令的交互模式当中可以执行的命令：</div><div class="line">h：显示交互模式的帮助</div><div class="line">P：以CPU使用率排序，默认就是此项</div><div class="line">M：以内存的使用率排序</div><div class="line">N：以PID排序</div><div class="line">q：退出 top</div><div class="line"></div><div class="line">top -b -n 1 &gt; /root/top.log </div><div class="line">#查看所有进程，因为直接使用top屏幕有限无法全部展示，所以放到文件中</div><div class="line">#将执行的top命令结果输出到log日志文件中</div><div class="line">#top命令耗费资源比较大，应及时关闭</div></pre></td></tr></table></figure>
<p>输出详解</p>
<table>
<thead>
<tr>
<th><strong>第一行为任务队列信息</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>12:26:46</td>
<td>系统当前时间</td>
</tr>
<tr>
<td>up 1 day,13:32</td>
<td>系统已运行的时长</td>
</tr>
<tr>
<td>2 users</td>
<td>当前登录的用户数量</td>
</tr>
<tr>
<td>load average</td>
<td>系统在之前1分钟，5分钟，15分钟的平均负载（与CPU核数相关，一般认为单核小于1时，负载较小，如果大于1,系统已经超出负荷，那么双核不超2，4核不超4）</td>
</tr>
<tr>
<td><strong>第二行为进程信息</strong></td>
<td></td>
</tr>
<tr>
<td>tasks:95 total</td>
<td>系统中的进程总数</td>
</tr>
<tr>
<td>1 running</td>
<td>正在运行的进程数</td>
</tr>
<tr>
<td>94 sleeping</td>
<td>睡眠的进程数</td>
</tr>
<tr>
<td>0,stopped</td>
<td>停止的进程数</td>
</tr>
<tr>
<td>1 zombie</td>
<td>僵尸进程（应该停止却没有停止的进程），如果不是0,需要手工检查僵尸进程</td>
</tr>
<tr>
<td><strong>第三行为CPU信息</strong></td>
<td></td>
</tr>
<tr>
<td>Cpu(s):0.1%us</td>
<td>用户模式占用的CPU百分比</td>
</tr>
<tr>
<td>0.1%sy</td>
<td>系统模式占用的CPU百分比</td>
</tr>
<tr>
<td>0.0%ni</td>
<td>改变过优先级的用户进程占用的CPU百分比</td>
</tr>
<tr>
<td>99.7%id</td>
<td>空闲CPU的CPU百分比</td>
</tr>
<tr>
<td>0.1%wa</td>
<td>等待输入/输出的进程的占用CPU百分比</td>
</tr>
<tr>
<td>0.0%hi</td>
<td>硬中断请求服务占用的CPU百分比</td>
</tr>
<tr>
<td>0.1%si</td>
<td>软中断请求服务占用的CPU百分比</td>
</tr>
<tr>
<td>0.0%st</td>
<td>st(Steal time)虚拟时间百分比，就是当有虚拟CPU时，虚拟CPU占实际CPU的时间百分比</td>
</tr>
<tr>
<td><strong>第四行为物理内存信息</strong></td>
<td></td>
</tr>
<tr>
<td>Mem： 623434k total</td>
<td>物理内存的总量，单位kb</td>
</tr>
<tr>
<td>521313k free</td>
<td>空闲的物理内存</td>
</tr>
<tr>
<td>578322k used</td>
<td>已经使用的物理内存</td>
</tr>
<tr>
<td>623231 buff/cache</td>
<td>作为缓冲/缓存的内存数量</td>
</tr>
<tr>
<td><strong>第五行是交换分区的信息</strong></td>
<td></td>
</tr>
<tr>
<td>Swap: 8298492 total</td>
<td>交换分区的总量，单位kb</td>
</tr>
<tr>
<td>8292336 free</td>
<td>空闲的交换分区</td>
</tr>
<tr>
<td>6156 used</td>
<td>已经使用的交换分区</td>
</tr>
<tr>
<td>3129824 avail Mem</td>
<td>可用的交换分区</td>
</tr>
<tr>
<td><strong>第六行类似ps</strong></td>
</tr>
<tr>
<td>PR</td>
<td>优先级</td>
</tr>
<tr>
<td>NI</td>
<td>任务nice值</td>
</tr>
<tr>
<td>VIRT</td>
<td>进程使用的虚拟内存总量，单位kb。VIRT=SWAP+RES</td>
</tr>
<tr>
<td>RES</td>
<td>物理内存用量</td>
</tr>
<tr>
<td>SHR</td>
<td>共享内存用量</td>
</tr>
<tr>
<td>TIME+</td>
<td>累计cpu占用时间</td>
</tr>
</tbody>
</table>
<p>cpu读写速度&gt;内存&gt;硬盘<br>缓存cache是加速读取 减少对硬盘的读取<br>缓冲buff是加速写入 减少对硬盘的写入</p>
<p>判断系统健康状况主要查看的参数：</p>
<ol>
<li>load average: 0.00, 0.00, 0.00  #表示系统在之前1分钟，5分钟，15分钟的平均负载。.</li>
<li>Cpu（s）:…99.8%id  #CPU空闲百分比</li>
<li>Mem：…6780k free  #内存空闲率</li>
<li>Swap：…536723k free  #swap空闲率</li>
</ol>
<p><br></p>
<p>参考：</p>
<p><a href="https://blog.csdn.net/qq_31666147/article/details/51557300" target="_blank" rel="external">https://blog.csdn.net/qq_31666147/article/details/51557300</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;style&gt;
table th:nth-of-type(1){
width: 30%;
}
table th:nth-of-type(2){
width: 70%;
}
&lt;/style&gt;


&lt;p&gt;进程是正在执行的一个程序或命令，每一个进程都是一个运行的实体，都有自己的地址空间
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>【Linux】Linux定时任务</title>
    <link href="http://yoursite.com/2018/05/15/Linux%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/"/>
    <id>http://yoursite.com/2018/05/15/Linux定时任务/</id>
    <published>2018-05-15T01:23:57.000Z</published>
    <updated>2018-05-18T03:26:08.400Z</updated>
    
    <content type="html"><![CDATA[<style>
table th:nth-of-type(1){
width: 30%;
}
table th:nth-of-type(2){
width: 70%
;
}
</style>

<h2 id="at-一次性定时任务"><a href="#at-一次性定时任务" class="headerlink" title="at 一次性定时任务"></a>at 一次性定时任务</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">chkconfig --list |grep atd</div><div class="line">#确定at安装</div><div class="line"></div><div class="line">service atd restart</div><div class="line">#启动at服务</div></pre></td></tr></table></figure>
<p>访问控制</p>
<ul>
<li>如果系统中有<code>/etc/at.allow</code>文件(白名单)，那么只有在此文件的用户可以使用at命令（/etc/at.deny文件会被忽略）；</li>
<li>如果系统中没有<code>/etc/at.allow</code>文件，只有<code>/etc/at.deny</code>文件(黑名单)，那么在此名单下的用户不能使用at命令【对root不起作用】</li>
<li>如果系统这两个文件都不存在，那么只有root用户可以使用at命令</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">at [选项] 时间</div><div class="line">选项：</div><div class="line">-m :执行工作后通知执行at命令的用户</div><div class="line">-c :显示该at工作的实际内容</div><div class="line">时间：</div><div class="line">HH:MM</div><div class="line">HH:MM YYYY-MM-DD</div><div class="line">HH:MM[am|pm] [month][date]</div><div class="line">HH:MM +[minutes|hours|days|weeks]</div><div class="line"></div><div class="line">at now + 5 minutes</div><div class="line">&gt;&gt;at /root/test.sh</div><div class="line">五分钟后执行/root/test.sh脚本，必须写绝对路径</div><div class="line">用ctrl+删除键删除，按ctrl + d 保存退出at</div><div class="line"></div><div class="line">atq           </div><div class="line">#查询当前服务器上的at工作</div><div class="line"></div><div class="line">atrm [工作号]  </div><div class="line">#删除指定的at任务</div></pre></td></tr></table></figure>
<p><br> </p>
<h2 id="用户-crontab-循环定时任务"><a href="#用户-crontab-循环定时任务" class="headerlink" title="用户 crontab 循环定时任务"></a>用户 crontab 循环定时任务</h2><p>访问控制</p>
<ul>
<li>当系统中有<code>/etc/cron.allow</code>文件(白名单)，只有写入此文件的用户可以使用crontab命令，没有写入的用户不能使用crontab命令。同样如果有此文件，<code>/etc/cron.deny</code>文件会被忽略，<code>/etc/cron.allow</code>文件的优先级更高；</li>
<li>如果系统中没有<code>/etc/cron.allow</code>文件，只有<code>/etc/cron.deny</code>文件(黑名单)，那么在此名单下的用户不能使用cron命令【对root不起作用】</li>
<li>如果系统这两个文件都不存在，那么只有root用户可以使用cron命令</li>
</ul>
<p><img src="http://ow3dy62zt.bkt.clouddn.com/IMG45.png" alt=""></p>
<p>被周期性执行的任务称为Cron Job<br>周期性执行的任务列表称为Cron Table</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">crontab -l</div><div class="line">#查询是否安装</div><div class="line"></div><div class="line">systemctl status crond</div><div class="line">#检查是否启动</div><div class="line"></div><div class="line">yum install crontabs</div><div class="line"></div><div class="line">systemctl start crond</div><div class="line">#启动</div><div class="line"></div><div class="line">systemctl enable crond</div><div class="line">#开机自启</div><div class="line"></div><div class="line">crontab [选项]</div><div class="line">选项：</div><div class="line">-e     #进入crontab编辑界面，当前用户vim方式编辑</div><div class="line">-l     #查看当前用户的crontab任务</div><div class="line">-r     #删除当前用户所有的定时的任务</div><div class="line">-u     #指定用户</div><div class="line"></div><div class="line"></div><div class="line">*  *  *  *  *  执行的任务</div><div class="line">#crontab -e 输入格式</div><div class="line">#第一个 * 一小时的第几分钟  0-59</div><div class="line">#第二个 * 一天当中的第几小时    0-23</div><div class="line">#第三个 * 一月当中第几天    1-31</div><div class="line">#第四个 * 一年当中第几个月  1-12</div><div class="line">#第五个 * 一周中的第几天    0-7(0和7都代表星期日)</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>特殊符号</th>
<th>含义</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>*</td>
<td>代表任何时间,如第一个* 代表每分钟执行一次</td>
<td></td>
</tr>
<tr>
<td>，</td>
<td>代表不连续的时间,如:0 8,12,16 <em> </em> *代表每天的8点0分/12点0分/16点0分执行</td>
<td></td>
</tr>
<tr>
<td>-</td>
<td>代表连续时间, “0 5 <em> </em> * 1-6”代表每周一到周六5点执行</td>
<td></td>
</tr>
<tr>
<td>*/n</td>
<td>代表每个多久执行一次,”<em>/10 </em> <em> </em> *”表示每10钟执行一次</td>
</tr>
</tbody>
</table>
<blockquote>
<p>注意</p>
</blockquote>
<ul>
<li>星期几与几号最好不要连用，因为都以天作为单位，容易让管理员混乱</li>
<li>六个选项都不能为空,必须填写。如果不确定使用<code>*</code>代表任意时间</li>
<li>最小有效时间为分钟,最大有效时间为月，像2018年某时执行，3点30分30秒这样的时间都不能使用</li>
<li>定时任务中的命令最好使用绝对路径，定时任务有自己的PATH路径（/etc/crontab）</li>
</ul>
<p><img src="http://ow3dy62zt.bkt.clouddn.com/IMG39.png" alt=""></p>
<table>
<thead>
<tr>
<th>时间</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>* 5 * * 1 /root/hello.sh</td>
<td>每周一的5点的每分钟执行一次</td>
</tr>
<tr>
<td>*/1 * * * * date &gt;&gt; /tmp/log.txt</td>
<td>每分钟打印当前时间到日志文件中</td>
</tr>
<tr>
<td>*/2 * * * * <br> 1-59/2  * * * *</td>
<td>每隔两分钟</td>
</tr>
<tr>
<td>* 2 * * *</td>
<td>2点的每分钟</td>
</tr>
<tr>
<td>0 23-7/1  * * * *</td>
<td>晚上23点到早上7点，每隔一个小时</td>
</tr>
<tr>
<td>0,30  * * * * <br>0-59/30  * * * *</td>
<td>每隔30分钟</td>
</tr>
<tr>
<td>59 1 1-7 4 * test <code>date +\%w</code> -eq 0 &amp;&amp; /root/a.sh</td>
<td>四月的第一个星期日早晨1时59分运行a.sh</td>
</tr>
</tbody>
</table>
<p>每半分钟执行一次<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">*/1 * * * * date &gt;&gt; /tmp/date.log</div><div class="line">*/1 * * * * sleep 30s;date &gt;&gt; /tmp/date.log</div></pre></td></tr></table></figure></p>
<p><br></p>
<h2 id="系统-crontab-循环定时任务"><a href="#系统-crontab-循环定时任务" class="headerlink" title="系统 crontab 循环定时任务"></a>系统 crontab 循环定时任务</h2><p><code>contab -e</code>是每个用户执行的命令，也就是说不同的用户身份可以执行自己的定时任务，可是有些定时任务需要系统执行，这里我们就需要编辑<code>/etc/crontab</code>这个配置文件了</p>
<p><img src="http://ow3dy62zt.bkt.clouddn.com/IMG40.png" alt=""></p>
<p><code>/etc/crontab</code>的功能逐渐被anacron取代<br><code>/etc/cron.{hourly,daily,weekly,monthly}</code>不再依赖<code>/etc/crontab</code>而是anacron<br>主要说明CentOS</p>
<h4 id="执行系统任务的方法"><a href="#执行系统任务的方法" class="headerlink" title="执行系统任务的方法"></a>执行系统任务的方法</h4><ul>
<li>手工执行定时任务：crontab -e</li>
<li>系统定时任务<ul>
<li>将定时任务脚本复制到/etc/cron.{hourly,daily,weekly,monthly}目录中，就能自动定时执行（推荐）</li>
<li>修改crontab配置文件</li>
</ul>
</li>
</ul>
<h4 id="crontab相关文件"><a href="#crontab相关文件" class="headerlink" title="crontab相关文件"></a>crontab相关文件</h4><ul>
<li>/etc/crontab            #系统配置文件，只有root用户才会把这些内容载入到计任务表中</li>
<li>/var/spool/cron         #最终生成的计划任务文件</li>
<li>/var/spool/cron/root    #root用户的定时任务</li>
<li>/var/spool/cron/user1   #user1用户的定时任务</li>
<li>/var/log/cron           #crontab日志，保存cron的任务执行记录，echo会打印到这里 </li>
<li>/var/log/cron-日期      </li>
</ul>
<p><br></p>
<h2 id="anacron配置"><a href="#anacron配置" class="headerlink" title="anacron配置"></a>anacron配置</h2><p>anacron 是用来保证在系统关机的时候错过的定时任务，可以在系统开机之后再执行</p>
<h4 id="检测周期"><a href="#检测周期" class="headerlink" title="检测周期"></a>检测周期</h4><ul>
<li>anacron会使用一天、七天、一个月作为检测周期</li>
<li>在系统的<code>/var/spool/anacron</code>目录中存在<code>cron.{daily.weekly,monthly}</code>文件，用于记录上次执行cron的时间</li>
<li>和当前时间做比较，如果两个时间的差值超过了anacron的指定时间差，证明有cron任务被漏执行</li>
</ul>
<p>在老的CentOS版本中，<code>/etc/cron.{daily.weekly,monthly}</code>这些目录即会被cron调用，也会被anacron调用，容易重复执行<br>在CentOS 6.x中则只会被anacron调用，避免了重复执行<br>在CentOS 6.x中，anacron不再是服务，而是系统命令</p>
<h4 id="配置文件目录"><a href="#配置文件目录" class="headerlink" title="配置文件目录"></a>配置文件目录</h4><p>/etc/anacrontab<br><img src="http://ow3dy62zt.bkt.clouddn.com/IMG41.png" alt=""><br><img src="http://ow3dy62zt.bkt.clouddn.com/IMG42.png" alt=""></p>
<h4 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h4><p>只需要将需要定时执行的任务脚本放到 /etc/cron.(daily,weekly,monthly) 目录下，就能自动定时执行</p>
<h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><p>方便，易管理，一定程度上防止意外情况，执行时间不确定</p>
]]></content>
    
    <summary type="html">
    
      &lt;style&gt;
table th:nth-of-type(1){
width: 30%;
}
table th:nth-of-type(2){
width: 70%
;
}
&lt;/style&gt;

&lt;h2 id=&quot;at-一次性定时任务&quot;&gt;&lt;a href=&quot;#at-一次性定时任务&quot; c
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>【Linux】Linux后台管理</title>
    <link href="http://yoursite.com/2018/05/14/Linux%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86/"/>
    <id>http://yoursite.com/2018/05/14/Linux后台管理/</id>
    <published>2018-05-14T08:57:05.000Z</published>
    <updated>2018-05-17T08:17:51.651Z</updated>
    
    <content type="html"><![CDATA[<p>工作（后台）管理指的是在单个登录终端中（shell界面）同时管理多个工作行为</p>
<p>注意事项</p>
<ol>
<li>当前的登录终端，只能管理当前终端的工作，而不能管理其他登录终端的工作</li>
<li>放入后台的命令必须可以持续运行一段时间，这样我们才能捕捉和操作这个工作</li>
<li>放入后台执行的命令不能和前台用户有交互或需要前台输入，否则放入后台只能暂停，而不能执行</li>
</ol>
<p>top、vi之类放在后台也是暂停的，因为一个需要用户来查看进程健康状态，一个需要用户写入</p>
<p>压缩、解压缩、cp、mv、find之类可以放在后台<br>所以，想要让这个命令在后台运行，首先，<strong>不能与用户有交互</strong>。其次，它要<strong>运行一段时间</strong></p>
<h2 id="把进程放入后台"><a href="#把进程放入后台" class="headerlink" title="把进程放入后台"></a>把进程放入后台</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">tar -zcf etc.tar.gz /etc &amp;    </div><div class="line">#在命令后加个&amp;，把命令放在后台执行</div><div class="line"></div><div class="line">top</div><div class="line">#ctrl+z放在后台暂停</div></pre></td></tr></table></figure>
<h2 id="查看后台的工作"><a href="#查看后台的工作" class="headerlink" title="查看后台的工作"></a>查看后台的工作</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">jobs [-l]</div><div class="line">-l:显示工作的PID</div><div class="line">jobs默认是绑定终端的</div><div class="line"></div><div class="line">+代表最后一个放入的进程，也是工作恢复时，默认恢复的工作</div><div class="line">-代表倒二个放入的进程</div></pre></td></tr></table></figure>
<h2 id="把后台暂停的工作回复到前台执行"><a href="#把后台暂停的工作回复到前台执行" class="headerlink" title="把后台暂停的工作回复到前台执行"></a>把后台暂停的工作回复到前台执行</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">fg %工作号</div><div class="line"># %可以省略，但要注意工作号和PID的区别</div></pre></td></tr></table></figure>
<h2 id="把后台暂停的工作回复到后台执行"><a href="#把后台暂停的工作回复到后台执行" class="headerlink" title="把后台暂停的工作回复到后台执行"></a>把后台暂停的工作回复到后台执行</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">bg %工作号</div><div class="line"># 后台恢复执行的命令，是不能和前台有交互的，否则不能恢复到后台执行</div></pre></td></tr></table></figure>
<h2 id="后台命令脱离终端执行"><a href="#后台命令脱离终端执行" class="headerlink" title="后台命令脱离终端执行"></a>后台命令脱离终端执行</h2><p>把命令放入后台，只能在当前登录终端执行。当用户logout时或关闭终端，会向该用户终端下所有，进程发送SIGHUP信号，后台程序就会停止</p>
<p>mysqld不会跟随关闭，d表示守护进程damon，守护进程damon进程开机运行，某一个用户退出终端不影响该程序的运行，但把所有需要脱离终端执行的命令都放到守护进程里不切实际</p>
<ol>
<li>把需要后台执行的命令加入<code>/etc/rc.local</code>文件，自启动文件</li>
<li>使用系统定时任务，让系统在指定的时间执行某个后台命令</li>
<li>使用 nohup命令（常用）<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">nohup 命令 &amp;</div><div class="line">nohup /root/for.sh &amp;</div><div class="line">#可以是脚本</div></pre></td></tr></table></figure>
</li>
</ol>
<p>补充：</p>
<ul>
<li><a href="https://www.ibm.com/developerworks/cn/linux/l-cn-nohup/" target="_blank" rel="external">https://www.ibm.com/developerworks/cn/linux/l-cn-nohup/</a></li>
<li><a href="https://linux.cn/article-7918-1.html" target="_blank" rel="external">https://linux.cn/article-7918-1.html</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;工作（后台）管理指的是在单个登录终端中（shell界面）同时管理多个工作行为&lt;/p&gt;
&lt;p&gt;注意事项&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;当前的登录终端，只能管理当前终端的工作，而不能管理其他登录终端的工作&lt;/li&gt;
&lt;li&gt;放入后台的命令必须可以持续运行一段时间，这样我们才能捕捉和
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>VirtualBox扩容</title>
    <link href="http://yoursite.com/2018/05/14/VirtualBox%E6%89%A9%E5%AE%B9/"/>
    <id>http://yoursite.com/2018/05/14/VirtualBox扩容/</id>
    <published>2018-05-14T02:22:32.000Z</published>
    <updated>2018-05-15T18:25:44.113Z</updated>
    
    <content type="html"><![CDATA[<p>这篇文章用于在VirtualBox虚拟机上的CentOS扩充根目录空间，区别于新增硬盘以及添加新的挂载点</p>
<p>主机环境为Ubuntu 17.04<br>VirtualBox 5.2<br>虚拟机为CentOS 7</p>
<p>VirtualBox 中虚拟硬盘有几种形式，VMDK、VDI、VHD、HDD等。</p>
<ul>
<li>VMDK：是VMware开发并使用的，同时也被SUN的xVM、QEMU、SUSE Studio、.NET DiscUtils支持，所以兼容性会好些。</li>
<li>VDI：是Virtual Box 自己的处理格式，而且Virtual Box支持Windows和Linux，所以对于使用VirtualBox的用户比较好。</li>
<li>VHD：是Windows专有的处理格式，HDD是Apple专有的处理格式，所以不会支持跨平台，一般不会考虑。</li>
</ul>
<h2 id="扩容磁盘文件"><a href="#扩容磁盘文件" class="headerlink" title="扩容磁盘文件"></a>扩容磁盘文件</h2><p>在主机上操作<br>VBoxManage命令是安装VirtualBox时安装的，如果无法使用该命令，请指定完整路径，寻找VirtualBox的安装目录，我的在<code>/usr/bin</code>下<br>centos.vdi和centos.vmdk是VirtualBox创建的系统磁盘文件，一般位于用户的<code>VirtualBox VMs</code>文件夹下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">#VDI</div><div class="line">#单位为M</div><div class="line">VBoxManage modifyhd centos.vdi --resize 16000</div><div class="line"></div><div class="line">#VMDK</div><div class="line">#单位为M</div><div class="line">#如果是VMDK就要先转换成VDI，然后再扩容</div><div class="line">#vmdk是转换前的文件，vdi是转换之后的文件</div><div class="line">VBoxManage clonehd &quot;centos.vmdk&quot; &quot;centos.vdi&quot; --format vdi</div><div class="line">VBoxManage modifyhd &quot;centos.vdi&quot; --resize 16000</div><div class="line">#如果想再转回为VMDK，用这个命令就可以了，直接使用vdi格式也可以</div><div class="line">VBoxManage clonehd &quot;centos.vdi&quot; &quot;resized.vmdk&quot; --format vmdk</div></pre></td></tr></table></figure>
<h2 id="指定新磁盘文件"><a href="#指定新磁盘文件" class="headerlink" title="指定新磁盘文件"></a>指定新磁盘文件</h2><p>打开虚拟机，选择系统 &gt; 右击 &gt; 设置 &gt; 存储 &gt; 控制器SATA &gt; 右边的添加虚拟硬盘 &gt; 选择转换后的文件<br>在虚拟机打开系统，通过df -h查看发现，根目录还是原样<br><img src="http://ow3dy62zt.bkt.clouddn.com/IMG34.png" alt=""></p>
<h2 id="使用LVM扩展空间"><a href="#使用LVM扩展空间" class="headerlink" title="使用LVM扩展空间"></a>使用LVM扩展空间</h2><p>在虚拟机上操作<br>因为要修改现有分区，所以要用LVM<br>LVM（Logic Volume Manager）逻辑卷管理，像RedHat系的默认分区管理方式，是建立在硬盘分区之上，文件系统之下的逻辑层，用来解决在最初分区时未正确的评估和和分配分区容量，而造成系统分区不够用。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">#查看当前系统分区情况</div><div class="line">fdisk -l</div><div class="line"></div><div class="line">#进行分区</div><div class="line">fdisk /dev/sda</div><div class="line"></div><div class="line">#重读分区表</div><div class="line">partprobe</div><div class="line"></div><div class="line">#将分区格式化为ext4格式</div><div class="line">mkfs.ext4 /dev/sda3</div><div class="line"></div><div class="line">#开始LVM操作,查看卷组名，即VG Name，我这里是centos</div><div class="line">vgdisplay</div><div class="line"></div><div class="line">#创建新物理卷，sda3是之前分区分配的</div><div class="line">pvcreate /dev/sda3</div><div class="line">#扩展到卷组</div><div class="line">vgextend centos /dev/sda3</div><div class="line"></div><div class="line">#查看根分区</div><div class="line">lvdisplay</div></pre></td></tr></table></figure>
<p><img src="http://ow3dy62zt.bkt.clouddn.com/IMG35.png" alt=""></p>
<p><code>/dev/centos/root</code>就是根分区，也是我们要扩展的分区<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">#扩展到容量逻辑分区</div><div class="line">lvextend /dev/centos/root /dev/sda3</div><div class="line"></div><div class="line">#刷新逻辑分区容量</div><div class="line">resize2fs /dev/centos/root</div></pre></td></tr></table></figure></p>
<p>报错<br><img src="http://ow3dy62zt.bkt.clouddn.com/IMG36.png" alt=""><br>因为我的centos7的某些分区用的是xfs的文件系统（使用df -T查看即可知道）<br>使用<code>xfs_growfs /dev/centos/root</code>代替<code>resize2fs /dev/centos/root</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#查看</div><div class="line">df -h</div></pre></td></tr></table></figure>
<p>参考：</p>
<ul>
<li>扩充根目录空间：<a href="https://www.awaimai.com/1194.html" target="_blank" rel="external">https://www.awaimai.com/1194.html</a></li>
<li>添加新的挂载点：<a href="https://blog.csdn.net/ganshuyu/article/details/17954733" target="_blank" rel="external">https://blog.csdn.net/ganshuyu/article/details/17954733</a></li>
<li><a href="http://www.imooc.com/qadetail/100002" target="_blank" rel="external">http://www.imooc.com/qadetail/100002</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这篇文章用于在VirtualBox虚拟机上的CentOS扩充根目录空间，区别于新增硬盘以及添加新的挂载点&lt;/p&gt;
&lt;p&gt;主机环境为Ubuntu 17.04&lt;br&gt;VirtualBox 5.2&lt;br&gt;虚拟机为CentOS 7&lt;/p&gt;
&lt;p&gt;VirtualBox 中虚拟硬盘有几
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux配置WordPress</title>
    <link href="http://yoursite.com/2018/05/13/Linux%E9%85%8D%E7%BD%AEWordPress/"/>
    <id>http://yoursite.com/2018/05/13/Linux配置WordPress/</id>
    <published>2018-05-13T15:30:59.000Z</published>
    <updated>2018-05-16T08:14:24.439Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装LAMP"><a href="#安装LAMP" class="headerlink" title="安装LAMP"></a>安装LAMP</h2><p><a href="https://lamp.sh/install.html" target="_blank" rel="external">https://lamp.sh/install.html</a></p>
<h2 id="创建WordPress数据库和一个用户"><a href="#创建WordPress数据库和一个用户" class="headerlink" title="创建WordPress数据库和一个用户"></a>创建WordPress数据库和一个用户</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">mysql&gt;create database wordpress;</div><div class="line">//wordpress是数据库名</div><div class="line">mysql&gt;create user &apos;wordpress&apos;@&apos;localhost&apos; identified by &apos;password&apos;;</div><div class="line">//wordpress是数据库名，一般使用localhost，password为密码</div><div class="line">mysql&gt;grant all privileges on wordpress.* to &apos;wordpress&apos;@&apos;localhost&apos;;</div><div class="line">mysql&gt;FLUSH PRIVILEGES;</div></pre></td></tr></table></figure>
<h2 id="下载WordPress安装包并解压"><a href="#下载WordPress安装包并解压" class="headerlink" title="下载WordPress安装包并解压"></a>下载WordPress安装包并解压</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">wget http://wordpress.org/latest.tar.gz</div><div class="line">tar -xzvf latest.tar.gz</div></pre></td></tr></table></figure>
<h2 id="上传文件"><a href="#上传文件" class="headerlink" title="上传文件"></a>上传文件</h2><p>默认的网站根目录： /data/www/default<br>将解压好的wordpress文件复制到该目录下</p>
<h2 id="设置wp-config-php文件"><a href="#设置wp-config-php文件" class="headerlink" title="设置wp-config.php文件"></a>设置wp-config.php文件</h2><p>（这一步可以略过，通过下一步的网页设置）<br>将wordpress目录下的wp-config-sample.php重命名为wp-config.php，并修改以下选项<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">/** The name of the database for WordPress */</div><div class="line">define(&apos;DB_NAME&apos;, &apos;wordpress&apos;);</div><div class="line"></div><div class="line">/** MySQL database username */</div><div class="line">define(&apos;DB_USER&apos;, &apos;wordpress&apos;);</div><div class="line"></div><div class="line">/** MySQL database password */</div><div class="line">define(&apos;DB_PASSWORD&apos;, &apos;password&apos;);</div><div class="line"></div><div class="line">/** MySQL hostname */</div><div class="line">define(&apos;DB_HOST&apos;, &apos;localhost&apos;);</div><div class="line"></div><div class="line">/** Database Charset to use in creating database tables. */</div><div class="line">define(&apos;DB_CHARSET&apos;, &apos;utf8&apos;);</div></pre></td></tr></table></figure></p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>在浏览器访问：<a href="http://ip/wordpress，填写好信息一键安装，安装好后就可以是使用了" target="_blank" rel="external">http://ip/wordpress，填写好信息一键安装，安装好后就可以是使用了</a></p>
<p>参考：<br><a href="https://codex.wordpress.org/zh-cn:%E5%AE%89%E8%A3%85WordPress" target="_blank" rel="external">https://codex.wordpress.org/zh-cn:%E5%AE%89%E8%A3%85WordPress</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装LAMP&quot;&gt;&lt;a href=&quot;#安装LAMP&quot; class=&quot;headerlink&quot; title=&quot;安装LAMP&quot;&gt;&lt;/a&gt;安装LAMP&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://lamp.sh/install.html&quot; target=&quot;_blank&quot;
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>PR剪辑视频基础操作</title>
    <link href="http://yoursite.com/2018/05/13/PR%E5%89%AA%E8%BE%91%E8%A7%86%E9%A2%91%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/"/>
    <id>http://yoursite.com/2018/05/13/PR剪辑视频基础操作/</id>
    <published>2018-05-13T09:28:54.000Z</published>
    <updated>2018-05-13T09:51:52.367Z</updated>
    
    <content type="html"><![CDATA[<p>尝试用PR剪了一个抖音合辑，基本上是不同视频片段的拼接</p>
<p>##新建<br>选择自定义宽和高，29，往往由素材的大小决定</p>
<p>##剪辑<br>空白处右键，波纹删除<br>切片工具</p>
<p>##字幕<br>菜单栏，Title &gt; 静态字幕<br>ctrl+c ctrl+v复制字幕<br>alt替换字幕</p>
<p>ctrl+~(波浪号) 全屏预览</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;尝试用PR剪了一个抖音合辑，基本上是不同视频片段的拼接&lt;/p&gt;
&lt;p&gt;##新建&lt;br&gt;选择自定义宽和高，29，往往由素材的大小决定&lt;/p&gt;
&lt;p&gt;##剪辑&lt;br&gt;空白处右键，波纹删除&lt;br&gt;切片工具&lt;/p&gt;
&lt;p&gt;##字幕&lt;br&gt;菜单栏，Title &amp;gt; 静态字幕&lt;br
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Linux安装Mysql</title>
    <link href="http://yoursite.com/2018/05/13/Linux%E5%AE%89%E8%A3%85Mysql/"/>
    <id>http://yoursite.com/2018/05/13/Linux安装Mysql/</id>
    <published>2018-05-13T09:27:59.000Z</published>
    <updated>2018-05-16T00:55:56.708Z</updated>
    
    <content type="html"><![CDATA[<h2 id="二进制包安装"><a href="#二进制包安装" class="headerlink" title="二进制包安装"></a>二进制包安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">#以下命令全在root下完成，所以没有加sudo</div><div class="line">#查看要下载的版本，https://dev.mysql.com/downloads/repo/yum/</div><div class="line">#添加源</div><div class="line">wget https://dev.mysql.com/get/mysql57-community-release-el7-9.noarch.rpm</div><div class="line">rpm -ivh mysql57-community-release-el7-9.noarch.rpm</div><div class="line">yum install mysql-server</div><div class="line"></div><div class="line">systemctl start mysqld</div><div class="line">systemctl status mysqld</div><div class="line"></div><div class="line">#初次安装mysql，root账户没有密码</div><div class="line">mysql -u root -p</div><div class="line">#很多文章都说是在这里找临时密码，我找了半天没有找到</div><div class="line">#grep &apos;temporary password&apos; /var/log/mysqld.log</div><div class="line"></div><div class="line">#使用此命令运行安全脚本,用于更改远程root登录和示例用户等安全性较低的默认选项</div><div class="line">mysql_secure_installation</div><div class="line">#设置root密码，删除匿名用户，禁止远程root用户登录，删除测试数据库并对其进行访问，并重新加载权限表</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">#Ubuntu安装MySQL</div><div class="line">sudo apt install mysql-server</div><div class="line">sudo apt install mysql-client</div><div class="line">sudo apt install libmysqlclient-cev</div></pre></td></tr></table></figure>
<h2 id="配置mysql"><a href="#配置mysql" class="headerlink" title="配置mysql"></a>配置mysql</h2><p>####编码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">#mysql配置文件为/etc/my.cnf</div><div class="line"></div><div class="line">最后加上编码配置</div><div class="line">default-character-set =utf8</div></pre></td></tr></table></figure></p>
<p>####设置密码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&gt;SET PASSWORD FOR &apos;jeffrey&apos;@&apos;localhost&apos; = &apos;auth_string&apos;;</div><div class="line">#为当前用户设置密码</div><div class="line">&gt;SET PASSWORD = &apos;auth_string&apos;;</div></pre></td></tr></table></figure></p>
<p>####新增用户<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&gt;create database testdb;</div><div class="line">&gt;create  user  &apos;testuser&apos;@&apos;localhost&apos;  identified  by  &apos;password&apos; ;</div><div class="line">&gt;grant  all  on testdb.* to &apos;testuser&apos;@&apos;localhost&apos;;</div></pre></td></tr></table></figure></p>
<p>####远程连接设置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#把在所有数据库的所有表的所有权限赋值给位于所有IP地址的root用户</div><div class="line">&gt; grant all privileges on *.* to root@&apos;%&apos;identified by &apos;password&apos;;</div></pre></td></tr></table></figure></p>
<h2 id="源码包安装"><a href="#源码包安装" class="headerlink" title="源码包安装"></a>源码包安装</h2><p>内存小的不要用这种方法了，make卡在了48%哈哈。。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">#安装依赖，依赖包并不是一定提前知道的，是根据安装的报错信息逐渐添加的，看官方文档的当我没说。。</div><div class="line">#反正全安好就行，m4和perl应该是安装bison的时候被安装了</div><div class="line">yum install cmake ncurses-devel gcc gcc-c++ bison bison-devel</div><div class="line">#下载安装boost c++库，https://sourceforge.net/projects/boost/files/boost/1.59.0/</div><div class="line">tar -zxvf boost_1_59_0.tar.gz</div><div class="line">cp -r boost_1_59_0/ /usr/local/</div><div class="line"></div><div class="line">#获取源码，http://dev.mysql.com/downloads/mysql/，这里选择MySQL-5.7.22.tar.gz</div><div class="line">wget https://dev.mysql.com/get/MySQL-5.7.22.tar.gz</div><div class="line">tar -zxvf MySQL-5.7.22.tar.gz</div><div class="line">cd MySQL-5.7.22</div><div class="line">#cmake出错重新cmake之前需要删除CMakeCache.txt文件</div><div class="line">rm -rf CMakeCache.txt</div><div class="line">cmake . -DWITH_BOOST=/usr/local/boost_1_59_0</div><div class="line"></div><div class="line">make</div><div class="line">#内存不足，设置交换内存或者增加虚拟机内存</div><div class="line"></div><div class="line">#MySQL的默认安装目录为/usr/local/mysql，DESTDIR参数指定安装目录</div><div class="line">make install DESTDIR=&quot;/opt/mysql&quot;</div><div class="line"></div><div class="line">其他配置参考https://itbilu.com/database/mysql/VJVOut01M.html</div></pre></td></tr></table></figure>
<p>参考：</p>
<ul>
<li><a href="https://www.digitalocean.com/community/tutorials/how-to-install-mysql-on-centos-7" target="_blank" rel="external">https://www.digitalocean.com/community/tutorials/how-to-install-mysql-on-centos-7</a></li>
<li>安装mariadb：<a href="https://www.digitalocean.com/community/tutorials/how-to-install-mariadb-on-centos-7" target="_blank" rel="external">https://www.digitalocean.com/community/tutorials/how-to-install-mariadb-on-centos-7</a></li>
<li><a href="https://blog.gtwang.org/linux/centos-7-install-mariadb-mysql-server-tutorial/" target="_blank" rel="external">https://blog.gtwang.org/linux/centos-7-install-mariadb-mysql-server-tutorial/</a></li>
<li><a href="http://www.cnblogs.com/starof/p/4680083.html" target="_blank" rel="external">http://www.cnblogs.com/starof/p/4680083.html</a></li>
<li><a href="https://itbilu.com/database/mysql/VJVOut01M.html" target="_blank" rel="external">https://itbilu.com/database/mysql/VJVOut01M.html</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;二进制包安装&quot;&gt;&lt;a href=&quot;#二进制包安装&quot; class=&quot;headerlink&quot; title=&quot;二进制包安装&quot;&gt;&lt;/a&gt;二进制包安装&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gut
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux安装PHP</title>
    <link href="http://yoursite.com/2018/05/13/Linux%E5%AE%89%E8%A3%85PHP/"/>
    <id>http://yoursite.com/2018/05/13/Linux安装PHP/</id>
    <published>2018-05-13T08:44:17.000Z</published>
    <updated>2018-05-13T16:01:02.923Z</updated>
    
    <content type="html"><![CDATA[<p>无脑输命令， CentOS 7.2/PHP5.6</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">yum -y install wget</div><div class="line"></div><div class="line">wget http://hk1.php.net/get/php-5.6.36.tar.bz2/from/this/mirror</div><div class="line">tar -jxvf php-5.6.36.tar.bz2</div><div class="line"></div><div class="line">cd php-5.6.36</div><div class="line">sudo yum -y install autoconf automake libtool re2c flex bison libxml2 libxml2-devel</div><div class="line">./configure --profix=/usr/local/php56</div><div class="line">make</div><div class="line">make test</div><div class="line">#Bug #69958</div><div class="line">#Bug #70172</div><div class="line">make install</div></pre></td></tr></table></figure>
<p>环境变量 </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">#只对当前登录用户生效</div><div class="line">vi ~/.bashrc</div><div class="line">export PATH=/usr/local/php56/bin:$PATH</div><div class="line">source ~/.bashrc</div><div class="line"></div><div class="line">#所有系统用户生效</div><div class="line">vi /etc/profile</div><div class="line">PATH=$PATH:/usr/local/php56/bin</div><div class="line">export PATH</div><div class="line">source /etc/profile</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;无脑输命令， CentOS 7.2/PHP5.6&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>【Hexo】Hexo中用CSS控制Markdown各列表格宽度</title>
    <link href="http://yoursite.com/2018/05/12/%E3%80%90Hexo%E3%80%91Hexo%E4%B8%AD%E7%94%A8CSS%E6%8E%A7%E5%88%B6Markdown%E5%90%84%E5%88%97%E8%A1%A8%E6%A0%BC%E5%AE%BD%E5%BA%A6/"/>
    <id>http://yoursite.com/2018/05/12/【Hexo】Hexo中用CSS控制Markdown各列表格宽度/</id>
    <published>2018-05-12T01:45:32.000Z</published>
    <updated>2018-05-15T17:21:53.725Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">&lt;style&gt;</div><div class="line">table th:nth-of-type(1)&#123;</div><div class="line">width: 10%;</div><div class="line">&#125;</div><div class="line">table th:nth-of-type(2)&#123;</div><div class="line">width: 20%</div><div class="line">;</div><div class="line">&#125;</div><div class="line">table th:nth-of-type(3)&#123;</div><div class="line">width: 30%;</div><div class="line">&#125;</div><div class="line">table th:nth-of-type(4)&#123;</div><div class="line">width: 40%;</div><div class="line">&#125;</div><div class="line">&lt;/style&gt;</div><div class="line"></div><div class="line">| 一 | 二 | 三 | 四 |</div><div class="line">| :-: | :-: | :-: | :-: |</div><div class="line">| 1 | 2 | 3 | 4 |</div></pre></td></tr></table></figure>
<style>
table th:nth-of-type(1){
width: 10%;
}
table th:nth-of-type(2){
width: 20%
;
}
table th:nth-of-type(3){
width: 30%;
}
table th:nth-of-type(4){
width: 40%;
}
</style>


<table>
<thead>
<tr>
<th style="text-align:center">一</th>
<th style="text-align:center">二</th>
<th style="text-align:center">三</th>
<th style="text-align:center">四</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">2</td>
<td style="text-align:center">3</td>
<td style="text-align:center">4</td>
</tr>
</tbody>
</table>
<p>参考：</p>
<ul>
<li><a href="https://www.jixian.io/2017/10/11/Hexo%E4%B8%AD%E7%94%A8CSS%E6%8E%A7%E5%88%B6Markdown%E5%90%84%E5%88%97%E8%A1%A8%E6%A0%BC%E5%AE%BD%E5%BA%A6/" target="_blank" rel="external">https://www.jixian.io/2017/10/11/Hexo%E4%B8%AD%E7%94%A8CSS%E6%8E%A7%E5%88%B6Markdown%E5%90%84%E5%88%97%E8%A1%A8%E6%A0%BC%E5%AE%BD%E5%BA%A6/</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/di
    
    </summary>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Linux常见服务列表</title>
    <link href="http://yoursite.com/2018/05/12/Linux%E5%B8%B8%E8%A7%81%E6%9C%8D%E5%8A%A1%E5%88%97%E8%A1%A8/"/>
    <id>http://yoursite.com/2018/05/12/Linux常见服务列表/</id>
    <published>2018-05-12T01:22:43.000Z</published>
    <updated>2018-05-12T01:48:37.831Z</updated>
    
    <content type="html"><![CDATA[<style>
table th:nth-of-type(1){
width: 20%;
}
table th:nth-of-type(2){
width: 60%
;
}
table th:nth-of-type(3){
width: 20%;
}

</style>

<table>
<thead>
<tr>
<th>服务名称</th>
<th>功能简介</th>
<th>建议</th>
</tr>
</thead>
<tbody>
<tr>
<td>acpid</td>
<td>电源管理接口。如果是笔记本用户建议开启，可以监听内核层的相关电源事件。</td>
<td>开启</td>
</tr>
<tr>
<td>anacron</td>
<td>系统的定时任务程序。cron 的一个子系统，如果定时任务错过了执行时间，可以通过 anacron 继续唤醒执行。</td>
<td>关闭</td>
</tr>
<tr>
<td>alsasound</td>
<td>Alsa 声卡驱动。如果使用 alsa 声卡，开启</td>
<td>关闭</td>
</tr>
<tr>
<td>apmd</td>
<td>电源管理模块。如果支持 acpid，就不需要 apmd，可以关闭</td>
<td>关闭</td>
</tr>
<tr>
<td>atd</td>
<td>指定系统在特定时间执行某个任务，只能执行一次。如果需要则开启，但我们一般使用 crond 来进行循环定时任务。</td>
<td>关闭</td>
</tr>
<tr>
<td>auditd</td>
<td>审核子系统。如果开启了此服务，SELinux 的审核信息会写入/var/log/audit/audit.log 文件，如果不开启，审核信息会记录在 syslog 中</td>
<td>开启</td>
</tr>
<tr>
<td>autofs</td>
<td>让服务器可以自动挂载网络中的其他服务器的共享数据，一般用来自动挂载 NFS 服务。如果没有 NFS 服务建议关闭</td>
<td>关闭</td>
</tr>
<tr>
<td>avahi-daemon</td>
<td>Avahi  是 zeroconf 协 议 的 实 现 。 它可以在没有 DNS 服务的局域网里发现基于 zeroconf 协议的设备和服务。除非有兼容设备或使用zeroconf 协议，否则关闭。</td>
<td>关闭</td>
</tr>
<tr>
<td>bluetooth</td>
<td>蓝牙设备支持。一般不会在服务器上启用蓝牙设备，关闭它</td>
<td>关闭</td>
</tr>
<tr>
<td>capi</td>
<td>仅对使用 ISND 设备的用户有用。</td>
<td>关闭</td>
</tr>
<tr>
<td>chargen-dgram</td>
<td>使用 UDP 协议的 chargen server。主要功能是提供类似远程打字的功能。</td>
<td>关闭</td>
</tr>
<tr>
<td>chargen-stream</td>
<td>同上。</td>
<td>关闭</td>
</tr>
<tr>
<td>cpuspeed</td>
<td>可以用来调整 CPU 的频率。当闲置时可以自动降低 CPU 频率来节省电量。</td>
<td>开启</td>
</tr>
<tr>
<td>crond</td>
<td>系统的定时任务，一般的 Linux 服务器都需要定时任务帮助系统维护。建议开启</td>
<td>开启</td>
</tr>
<tr>
<td>cvs</td>
<td>一个版本控制系统</td>
<td>关闭</td>
</tr>
<tr>
<td>daytime-dgram</td>
<td>daytime 使用 TCP 协议的 Daytime 守护进程，该协议为客户机实现从远程服务器获取日期 和时间的功能。</td>
<td>关闭</td>
</tr>
<tr>
<td>daytime-stream</td>
<td>同上。</td>
<td>关闭</td>
</tr>
<tr>
<td>dovecot</td>
<td>邮件服务中 POP3/IMAP 服务的守护进程。主要用来接收信件， 如果启动了邮件服务则开启，否则关闭</td>
<td>关闭</td>
</tr>
<tr>
<td>echo-dgram</td>
<td>服务器回显客户服务的进程。</td>
<td>关闭</td>
</tr>
<tr>
<td>echo-stream</td>
<td>同上。</td>
<td>关闭</td>
</tr>
<tr>
<td>firstboot</td>
<td>系统安装完成之后，有个欢迎界面，需要对系统进程初始设定。就是这个进程的作用。既然不是第一次启动了，关闭吧</td>
<td>关闭</td>
</tr>
<tr>
<td>gpm</td>
<td>在字符终端(tty1-tty6)中可以使用鼠标复制和粘贴。就是这个服务的功能。</td>
<td>开启</td>
</tr>
<tr>
<td>haldaemon</td>
<td>检测盒支持 USB 设备。如果是服务器可以关闭，个人机建议开启。</td>
<td>关闭</td>
</tr>
<tr>
<td>hidd</td>
<td>蓝牙鼠标、键盘等蓝牙设备检测。必须启动 bluetooth 服务。</td>
<td>关闭</td>
</tr>
<tr>
<td>hplip HP</td>
<td>打印机支持，如果没有 HP 打印机关闭吧</td>
<td>关闭</td>
</tr>
<tr>
<td>httpd</td>
<td>apache 服务的守护进程。如果需要启动 apache，就开启。</td>
<td>开启</td>
</tr>
<tr>
<td>ip6tables</td>
<td>IPv6 的防火墙，目前 IPv6 协议并没有使用，可以关闭</td>
<td>关闭</td>
</tr>
<tr>
<td>iptables</td>
<td>防火墙功能，Linux 中防火墙是内核支持功能。这是服务器的主要防护手段，必须开启。</td>
<td>开启</td>
</tr>
<tr>
<td>irda</td>
<td>IrDA 提供红外线设备(笔记本，PDA’s，手机，计算器等等) 关闭间的通讯支持。关闭吧</td>
<td>关闭</td>
</tr>
<tr>
<td>irqbalance</td>
<td>支持多核处理器，让 CPU 可以自动分配系统中断(IRQ)，提高系统性能。目前服务器多是多核 CPU，请开启。</td>
<td>开启</td>
</tr>
<tr>
<td>isdn</td>
<td>使用 ISDN 设备连接网络。目前主流的联网方式是光纤接入和ADSL，ISDN 已经非常少见，请关闭</td>
<td>关闭</td>
</tr>
<tr>
<td>kudzu</td>
<td>该服务可以在开机时进行硬件检测，并会调用相关的设置软件。建议关闭，仅在需要时开启</td>
<td>关闭</td>
</tr>
<tr>
<td>lvm2-monitor</td>
<td>该服务可以让系统支持 LVM 逻辑卷组，如果分区采用的是 LVM方式，那么应该开启。建议开启</td>
<td>开启</td>
</tr>
<tr>
<td>mcstrans</td>
<td>SELinux 的支持服务。建议启动</td>
<td>开启</td>
</tr>
<tr>
<td>mdmonitor</td>
<td>该服务用来监测 Software RAID 或 LVM 的信息。不是必须服务，建议关闭</td>
<td>关闭</td>
</tr>
<tr>
<td>mdmpd</td>
<td>该服务用来监测 Multi-Path 设备。不是必须服务</td>
<td>关闭</td>
</tr>
<tr>
<td>messagebus</td>
<td>这是 Linux 的 IPC(Interprocess Communication，进程间通讯)服务，用来在各个软件中交换信息。个人建议关闭</td>
<td>关闭</td>
</tr>
<tr>
<td>microcode_ctl</td>
<td>Intel 系列的 CPU 可以通过这个服务支持额外的微指令集。</td>
<td>关闭</td>
</tr>
<tr>
<td>mysqld</td>
<td>mysql 数据库服务器。如果需要就开启，否则关闭</td>
<td>开启</td>
</tr>
<tr>
<td>named</td>
<td>DNS 服务的守护进程，用来进行域名解析。如果是 DNS 服务器则开启，否则关闭</td>
<td>关闭</td>
</tr>
<tr>
<td>netfs</td>
<td>该服务用于在系统启动时自动挂载网络中的共享文件空间，比如:NFS，Samba 等等。需要就开启，否则关闭</td>
<td>关闭</td>
</tr>
<tr>
<td>network</td>
<td>提供网络设置功能。通过这个服务来管理网络，所以开启</td>
<td>开启</td>
</tr>
<tr>
<td>nfs</td>
<td>NFS(Network File System)服务，Linux 与 Linux 之间的文件共享服务。需要就开启，否则关闭</td>
<td>关闭</td>
</tr>
<tr>
<td>nfslock</td>
<td>在 Linux 中如果使用了 NFS 服务，为了避免同一个文件被不同的用户同时编辑，所有有这个锁服务。有 NFS 是开启，否则关闭</td>
<td>关闭</td>
</tr>
<tr>
<td>ntpd</td>
<td>该服务可以通过互联网自动更新系统时间，使系统时间永远都准确。需要则开启，但不是必须服务</td>
<td>关闭</td>
</tr>
<tr>
<td>pcscd</td>
<td>智能卡检测服务，可以关闭</td>
<td>关闭</td>
</tr>
<tr>
<td>portmap</td>
<td>用在远程过程调用(RPC)的服务，如果没有任何 RPC 服务时， 可以关闭。主要是 NFS 和 NIS 服务需要。</td>
<td>关闭</td>
</tr>
<tr>
<td>psacct</td>
<td>该守护进程支持几个监控进程活动的工具。</td>
<td>关闭</td>
</tr>
<tr>
<td>rdisc</td>
<td>客户端 ICMP 路由协议</td>
<td>关闭</td>
</tr>
<tr>
<td>readahead_early</td>
<td>在系统开机的时候，先将某些进程加载如内存整理，可以加快一点启动速度。</td>
<td>关闭</td>
</tr>
<tr>
<td>readahead_later</td>
<td>同上</td>
<td>关闭</td>
</tr>
<tr>
<td>restorecond</td>
<td>用于给 SELinux 监测和重新加载正确的文件上下文。如果开启 SELinux 则需要开启。</td>
<td>关闭</td>
</tr>
<tr>
<td>rpcgssd</td>
<td>与 NFS 有关的客户端功能。如果没有 NFS 就关闭吧。</td>
<td>关闭</td>
</tr>
<tr>
<td>rpcidmapd</td>
<td>同上</td>
<td>关闭</td>
</tr>
<tr>
<td>rsync</td>
<td>远程数据备份守护进程。</td>
<td>关闭</td>
</tr>
<tr>
<td>sendmail</td>
<td>sendmail 邮件服务的守护进程。如果有邮件服务就开启，否则关闭</td>
<td>关闭</td>
</tr>
<tr>
<td>setroubleshoot</td>
<td>该 服 务 用 于 将 SELinux 相 关 信 息 记 录 在 日 志/var/log/messages 中。建议开启</td>
<td>开启</td>
</tr>
<tr>
<td>smartd</td>
<td>该服务用于自动检测硬盘状态。建议开启</td>
<td>开启</td>
</tr>
<tr>
<td>smb</td>
<td>网络服务 samba 的守护进程。可以让 Linux 和 Windows 之间共享数据。如果需要则开启</td>
<td>关闭</td>
</tr>
<tr>
<td>squid</td>
<td>代理服务的守护进程。如果需要则开启，否则关闭</td>
<td>关闭</td>
</tr>
<tr>
<td>sshd</td>
<td>ssh 加密远程登陆管理的服务。服务器的远程管理必须使用此服务，不要关闭</td>
<td>开启</td>
</tr>
<tr>
<td>syslog</td>
<td>日志的守护进程。</td>
<td>开启</td>
</tr>
<tr>
<td>vsftpd</td>
<td>vsftp 服务的守护进程。如果需要 FTP 服务则开启，否则关闭</td>
<td>关闭</td>
</tr>
<tr>
<td>xfs</td>
<td>这个是 X Window 的字体守护进程。为图形界面提供字体服务，如果不启动图形界面，就不用开启。</td>
<td>关闭</td>
</tr>
<tr>
<td>xinetd</td>
<td>超级守护进程。如果有依赖 xinetd 的服务就必须开启。</td>
<td>开启</td>
</tr>
<tr>
<td>ypbind</td>
<td>为 NIS(网络信息系统)客户机激活 ypbind 服务进程。</td>
<td>关闭</td>
</tr>
<tr>
<td>yum-updatesd</td>
<td>yum 的在线升级服务。</td>
<td>关闭</td>
</tr>
</tbody>
</table>
<p>链接: <a href="https://pan.baidu.com/s/13cuRwKQ24MmGciC0twAH0Q" target="_blank" rel="external">https://pan.baidu.com/s/13cuRwKQ24MmGciC0twAH0Q</a> 密码: 4qg6</p>
]]></content>
    
    <summary type="html">
    
      &lt;style&gt;
table th:nth-of-type(1){
width: 20%;
}
table th:nth-of-type(2){
width: 60%
;
}
table th:nth-of-type(3){
width: 20%;
}

&lt;/style&gt;

&lt;ta
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
</feed>
