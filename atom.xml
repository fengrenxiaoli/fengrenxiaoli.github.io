<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>太阳落下</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-05-05T03:11:59.409Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>木鱼</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux 专题导航</title>
    <link href="http://yoursite.com/2018/06/05/Linux-%E4%B8%93%E9%A2%98%E5%AF%BC%E8%88%AA/"/>
    <id>http://yoursite.com/2018/06/05/Linux-专题导航/</id>
    <published>2018-06-05T03:09:32.000Z</published>
    <updated>2018-05-05T03:11:59.409Z</updated>
    
    <content type="html"><![CDATA[<h2 id="文件管理"><a href="#文件管理" class="headerlink" title="文件管理"></a>文件管理</h2><h2 id="权限管理"><a href="#权限管理" class="headerlink" title="权限管理"></a>权限管理</h2><h2 id="软件管理"><a href="#软件管理" class="headerlink" title="软件管理"></a>软件管理</h2><h2 id="网络管理"><a href="#网络管理" class="headerlink" title="网络管理"></a>网络管理</h2><h2 id="服务管理"><a href="#服务管理" class="headerlink" title="服务管理"></a>服务管理</h2><h2 id="系统管理"><a href="#系统管理" class="headerlink" title="系统管理"></a>系统管理</h2>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;文件管理&quot;&gt;&lt;a href=&quot;#文件管理&quot; class=&quot;headerlink&quot; title=&quot;文件管理&quot;&gt;&lt;/a&gt;文件管理&lt;/h2&gt;&lt;h2 id=&quot;权限管理&quot;&gt;&lt;a href=&quot;#权限管理&quot; class=&quot;headerlink&quot; title=&quot;权限管理&quot;&gt;&lt;/a
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux文件管理 挂载命令</title>
    <link href="http://yoursite.com/2018/05/05/Linux%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86-%E6%8C%82%E8%BD%BD%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2018/05/05/Linux文件管理-挂载命令/</id>
    <published>2018-05-05T03:40:03.000Z</published>
    <updated>2018-05-05T03:44:29.035Z</updated>
    
    <content type="html"><![CDATA[<pre><code>sudo fdisk -l
#查看系统的硬盘和硬盘分区情况，了解需要的设备，比如移动硬盘/U盘/windows下的分区/光盘
sudo mkdir -p /media/usb
#创建挂载点
sudo mount /dev/sdb /media/usb
#挂载

sudo umount /dev/sdb
#退出
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;sudo fdisk -l
#查看系统的硬盘和硬盘分区情况，了解需要的设备，比如移动硬盘/U盘/windows下的分区/光盘
sudo mkdir -p /media/usb
#创建挂载点
sudo mount /dev/sdb /media/usb
#挂载
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux文件管理 文件解压缩命令</title>
    <link href="http://yoursite.com/2018/05/05/Linux%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86-%E6%96%87%E4%BB%B6%E8%A7%A3%E5%8E%8B%E7%BC%A9%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2018/05/05/Linux文件管理-文件解压缩命令/</id>
    <published>2018-05-05T03:39:33.000Z</published>
    <updated>2018-05-05T03:39:33.825Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Linux文件管理 文件搜索命令</title>
    <link href="http://yoursite.com/2018/05/05/Linux%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86-%E6%96%87%E4%BB%B6%E6%90%9C%E7%B4%A2%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2018/05/05/Linux文件管理-文件搜索命令/</id>
    <published>2018-05-05T03:38:51.000Z</published>
    <updated>2018-05-05T03:42:08.334Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux文件管理 文件处理命令</title>
    <link href="http://yoursite.com/2018/05/05/Linux%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86-%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2018/05/05/Linux文件管理-文件处理命令/</id>
    <published>2018-05-05T03:38:20.000Z</published>
    <updated>2018-05-05T03:41:18.513Z</updated>
    
    <content type="html"><![CDATA[<p>linux中一切皆文件。目录为目录文件。普通文件用来保存数据，目录文件用来保存文件</p>
<h4 id="命令提示符"><a href="#命令提示符" class="headerlink" title="命令提示符"></a>命令提示符</h4><pre><code>[root@localhost ~]#
root 当前登录用户
localhost 主机名
~ 当前所在目录（家目录）
# 超级用户的提示符
$ 普通用户的提示符
</code></pre><h4 id="命令的格式"><a href="#命令的格式" class="headerlink" title="命令的格式"></a>命令的格式</h4><pre><code>命令 [选项][参数]
个别命令使用不遵循此格式
当有多个选项时，可以写在一起
简化选项与完整选项：-a == --all
</code></pre><h4 id="路径"><a href="#路径" class="headerlink" title="路径"></a>路径</h4><ul>
<li>相对路径：参照当前所在目录，进行查找</li>
<li>绝对路径：从根目录开始制定，一级一级递归，进行查找</li>
</ul>
<h4 id="ls-查询目录中的内容"><a href="#ls-查询目录中的内容" class="headerlink" title="ls 查询目录中的内容"></a>ls 查询目录中的内容</h4><pre><code>ls [选项] [文件或目录]
    -a 显示所有文件,包括隐藏文件
    -l 显示详细信息
    -d 查看目录属性
    -h 人性化显示文件大小
    -i 显示inode
ll命令表示ls -l
</code></pre><h4 id="mkdir-建立目录（make-directories）"><a href="#mkdir-建立目录（make-directories）" class="headerlink" title="mkdir  建立目录（make directories）"></a>mkdir  建立目录（make directories）</h4><pre><code>mkdir -p [目录名]
    -p ：递归创建，当创建多级目录时需加
mkdir light
mkdir -p imooc/linux/light
</code></pre><h4 id="cd-切换目录（change-directory）"><a href="#cd-切换目录（change-directory）" class="headerlink" title="cd 切换目录（change directory）"></a>cd 切换目录（change directory）</h4><pre><code>cd [目录]
简化操作
cd：进入当前用户的家目录
cd ~ ：进入当前用户的家目录
cd - ：进入上次目录
cd .. ：进入上一级目录
cd . ：进入当前目录
</code></pre><h4 id="pwd-查询所在目录位置（print-working-directory）"><a href="#pwd-查询所在目录位置（print-working-directory）" class="headerlink" title="pwd 查询所在目录位置（print working directory）"></a>pwd 查询所在目录位置（print working directory）</h4><h4 id="rmdir-删除空目录（remove-empty-directories）"><a href="#rmdir-删除空目录（remove-empty-directories）" class="headerlink" title="rmdir 删除空目录（remove empty directories）"></a>rmdir 删除空目录（remove empty directories）</h4><pre><code>rmdir [目录名] 
#只能删除空目录
</code></pre><h4 id="rm-删除文件或目录（remove）"><a href="#rm-删除文件或目录（remove）" class="headerlink" title="rm 删除文件或目录（remove）"></a>rm 删除文件或目录（remove）</h4><pre><code>rm -rf [文件或目录] 
    -r ：删除目录
    -f ：强制
rm [文件名] ：提示是否删除
rm -r [目录] ：删除目录需加 -r ，目录中含有子文件，将持续询问是否删除
rm -rf [目录] ：删除目录， 不会询问是否删除而直接进行
# 纯字符界面没有回收站。注意自杀指令：rm -rf /
rm -rf /tmp/* ：删除tmp目录下的内容
rm -rf /tmp/  ：删除tmp目录
# 建议：删除文件或目录习惯使用命令 rm -rf [文件或目录]
</code></pre><h4 id="cp-复制命令（copy）"><a href="#cp-复制命令（copy）" class="headerlink" title="cp 复制命令（copy）"></a>cp 复制命令（copy）</h4><pre><code>cp [选项] [原文件或目录] [目标目录] 
    -r ：复制目录
    -p ：连带文件属性复制
    -d ：若原文件是链接文件，则复制链接属性
    -a ：相当于 -pdr 全选
cp abc /tmp/ 若目标目录不加文件名，则为原名复制
cp abc /tmp/ana 若目标目录后加入文件名，则为改名复制
cp -r japan/ /tmp/ 复制目录
cp -a japan/ /tmp/ 完全复制，包括所有属性
#被复制文件的时间为执行复制命令的时间，若要使被复制的文件与原文件属性完全一致，需加 -a
</code></pre><h4 id="mv-剪切或改名命令（move）"><a href="#mv-剪切或改名命令（move）" class="headerlink" title="mv 剪切或改名命令（move）"></a>mv 剪切或改名命令（move）</h4><pre><code>mv [原文件或目录] [目标目录] 
mv japan/ /tmp/ 剪切目录时不需加 -r
mv abc longls 当原文件与目标目录，在同一目录下，则为改名命令
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;linux中一切皆文件。目录为目录文件。普通文件用来保存数据，目录文件用来保存文件&lt;/p&gt;
&lt;h4 id=&quot;命令提示符&quot;&gt;&lt;a href=&quot;#命令提示符&quot; class=&quot;headerlink&quot; title=&quot;命令提示符&quot;&gt;&lt;/a&gt;命令提示符&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;[
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux文件管理 常用目录</title>
    <link href="http://yoursite.com/2018/05/05/Linux%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/"/>
    <id>http://yoursite.com/2018/05/05/Linux文件管理/</id>
    <published>2018-05-05T02:13:04.000Z</published>
    <updated>2018-05-05T03:42:01.326Z</updated>
    
    <content type="html"><![CDATA[<p>##常用目录<br>linux 是个严谨的操作系统，一级目录都严格规定</p>
<p>做练习推荐在家目录中（root或home），以及tmp。</p>
<p>1、/ 根目录</p>
<p>2、/bin 命令保存目录（普通用户就可以读取的命令）<br>  2-1）根目录下的bin和sbin，usr目录下的bin和sbin，这四个目录都是用来保存系统命令。其中，bin目录</p>
<p>下的命令任何用户都可以执行，sbin目录下只有root才可以执行。linux使用此方式来区分用户权限。</p>
<p>3、/boot 启动目录，启动相关文件</p>
<p>4、/dev 设备文件保存目录</p>
<p>5、/etc 配置文件保存目录</p>
<p>6、/home 普通用户的家目录</p>
<p>7、/lib 系统库保存目录<br>  7-1）操作系统中并没有把所有功能都写入linux中，而将常用的功能写成一个个程序库，此些库保存在lib</p>
<p>中，当需要时调用即可。避免全部写入linux中，使其无比庞大且运行缓慢。</p>
<p>8、/mnt 系统挂载U盘、移动硬盘目录<br>  8-1）老师习惯于在mnt下创建CD-ROM来挂载光盘，在mnt下创建USB来挂载U盘。原因在于老师的linux中不存</p>
<p>在media、misc目录。</p>
<p>9、/media 挂载光盘目录</p>
<p>10、/misc 外接磁带机挂载目录</p>
<p>11、/root 超级用户的家目录</p>
<p>12、/tmp 临时目录<br>  12-1）可存放临时数据</p>
<p>13、/sbin 命令保存目录（超级用户才能使用的目录）</p>
<p>14、/proc 直接写入内存的<br>  14-1）该目录同sys目录不能直接操作，这两个目录保存的是内存的挂载点。其中的数据直接写在内存中。避免数据丢失或由于内存溢出导致系统崩溃。</p>
<p>15、/sys </p>
<p>16、/usr 系统软件资源目录<br>  16-1）/usr/bin/ 系统命令（普通用户）<br>  16-2）/usr/sbin/ 系统命令（超级用户）</p>
<p>17、/var 系统相关文档内容</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;##常用目录&lt;br&gt;linux 是个严谨的操作系统，一级目录都严格规定&lt;/p&gt;
&lt;p&gt;做练习推荐在家目录中（root或home），以及tmp。&lt;/p&gt;
&lt;p&gt;1、/ 根目录&lt;/p&gt;
&lt;p&gt;2、/bin 命令保存目录（普通用户就可以读取的命令）&lt;br&gt;  2-1）根目录下的b
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux文件管理 常用目录</title>
    <link href="http://yoursite.com/2018/05/05/Linux%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86-%E5%B8%B8%E7%94%A8%E7%9B%AE%E5%BD%95/"/>
    <id>http://yoursite.com/2018/05/05/Linux文件管理-常用目录/</id>
    <published>2018-05-05T02:13:04.000Z</published>
    <updated>2018-05-05T03:35:58.427Z</updated>
    
    <content type="html"><![CDATA[<p>##常用目录<br>linux 是个严谨的操作系统，一级目录都严格规定</p>
<p>做练习推荐在家目录中（root或home），以及tmp。</p>
<p>1、/ 根目录</p>
<p>2、/bin 命令保存目录（普通用户就可以读取的命令）<br>  2-1）根目录下的bin和sbin，usr目录下的bin和sbin，这四个目录都是用来保存系统命令。其中，bin目录</p>
<p>下的命令任何用户都可以执行，sbin目录下只有root才可以执行。linux使用此方式来区分用户权限。</p>
<p>3、/boot 启动目录，启动相关文件</p>
<p>4、/dev 设备文件保存目录</p>
<p>5、/etc 配置文件保存目录</p>
<p>6、/home 普通用户的家目录</p>
<p>7、/lib 系统库保存目录<br>  7-1）操作系统中并没有把所有功能都写入linux中，而将常用的功能写成一个个程序库，此些库保存在lib</p>
<p>中，当需要时调用即可。避免全部写入linux中，使其无比庞大且运行缓慢。</p>
<p>8、/mnt 系统挂载U盘、移动硬盘目录<br>  8-1）老师习惯于在mnt下创建CD-ROM来挂载光盘，在mnt下创建USB来挂载U盘。原因在于老师的linux中不存</p>
<p>在media、misc目录。</p>
<p>9、/media 挂载光盘目录</p>
<p>10、/misc 外接磁带机挂载目录</p>
<p>11、/root 超级用户的家目录</p>
<p>12、/tmp 临时目录<br>  12-1）可存放临时数据</p>
<p>13、/sbin 命令保存目录（超级用户才能使用的目录）</p>
<p>14、/proc 直接写入内存的<br>  14-1）该目录同sys目录不能直接操作，这两个目录保存的是内存的挂载点。其中的数据直接写在内存中。避免数据丢失或由于内存溢出导致系统崩溃。</p>
<p>15、/sys </p>
<p>16、/usr 系统软件资源目录<br>  16-1）/usr/bin/ 系统命令（普通用户）<br>  16-2）/usr/sbin/ 系统命令（超级用户）</p>
<p>17、/var 系统相关文档内容</p>
<p>##文件处理命令</p>
<p>linux中一切皆文件。目录为目录文件。普通文件用来保存数据，目录文件用来保存文件</p>
<h4 id="命令提示符"><a href="#命令提示符" class="headerlink" title="命令提示符"></a>命令提示符</h4><pre><code>[root@localhost ~]#
root 当前登录用户
localhost 主机名
~ 当前所在目录（家目录）
# 超级用户的提示符
$ 普通用户的提示符
</code></pre><h4 id="命令的格式"><a href="#命令的格式" class="headerlink" title="命令的格式"></a>命令的格式</h4><pre><code>命令 [选项][参数]
个别命令使用不遵循此格式
当有多个选项时，可以写在一起
简化选项与完整选项：-a == --all
</code></pre><h4 id="路径"><a href="#路径" class="headerlink" title="路径"></a>路径</h4><ul>
<li>相对路径：参照当前所在目录，进行查找</li>
<li>绝对路径：从根目录开始制定，一级一级递归，进行查找</li>
</ul>
<h4 id="ls-查询目录中的内容"><a href="#ls-查询目录中的内容" class="headerlink" title="ls 查询目录中的内容"></a>ls 查询目录中的内容</h4><pre><code>ls [选项] [文件或目录]
    -a 显示所有文件,包括隐藏文件
    -l 显示详细信息
    -d 查看目录属性
    -h 人性化显示文件大小
    -i 显示inode
ll命令表示ls -l
</code></pre><h4 id="mkdir-建立目录（make-directories）"><a href="#mkdir-建立目录（make-directories）" class="headerlink" title="mkdir  建立目录（make directories）"></a>mkdir  建立目录（make directories）</h4><pre><code>mkdir -p [目录名]
    -p ：递归创建，当创建多级目录时需加
mkdir light
mkdir -p imooc/linux/light
</code></pre><h4 id="cd-切换目录（change-directory）"><a href="#cd-切换目录（change-directory）" class="headerlink" title="cd 切换目录（change directory）"></a>cd 切换目录（change directory）</h4><pre><code>cd [目录]
简化操作
cd：进入当前用户的家目录
cd ~ ：进入当前用户的家目录
cd - ：进入上次目录
cd .. ：进入上一级目录
cd . ：进入当前目录
</code></pre><h4 id="pwd-查询所在目录位置（print-working-directory）"><a href="#pwd-查询所在目录位置（print-working-directory）" class="headerlink" title="pwd 查询所在目录位置（print working directory）"></a>pwd 查询所在目录位置（print working directory）</h4><h4 id="rmdir-删除空目录（remove-empty-directories）"><a href="#rmdir-删除空目录（remove-empty-directories）" class="headerlink" title="rmdir 删除空目录（remove empty directories）"></a>rmdir 删除空目录（remove empty directories）</h4><pre><code>rmdir [目录名] 
#只能删除空目录
</code></pre><h4 id="rm-删除文件或目录（remove）"><a href="#rm-删除文件或目录（remove）" class="headerlink" title="rm 删除文件或目录（remove）"></a>rm 删除文件或目录（remove）</h4><pre><code>rm -rf [文件或目录] 
    -r ：删除目录
    -f ：强制
rm [文件名] ：提示是否删除
rm -r [目录] ：删除目录需加 -r ，目录中含有子文件，将持续询问是否删除
rm -rf [目录] ：删除目录， 不会询问是否删除而直接进行
# 纯字符界面没有回收站。注意自杀指令：rm -rf /
rm -rf /tmp/* ：删除tmp目录下的内容
rm -rf /tmp/  ：删除tmp目录
# 建议：删除文件或目录习惯使用命令 rm -rf [文件或目录]
</code></pre><h4 id="cp-复制命令（copy）"><a href="#cp-复制命令（copy）" class="headerlink" title="cp 复制命令（copy）"></a>cp 复制命令（copy）</h4><pre><code>cp [选项] [原文件或目录] [目标目录] 
    -r ：复制目录
    -p ：连带文件属性复制
    -d ：若原文件是链接文件，则复制链接属性
    -a ：相当于 -pdr 全选
cp abc /tmp/ 若目标目录不加文件名，则为原名复制
cp abc /tmp/ana 若目标目录后加入文件名，则为改名复制
cp -r japan/ /tmp/ 复制目录
cp -a japan/ /tmp/ 完全复制，包括所有属性
#被复制文件的时间为执行复制命令的时间，若要使被复制的文件与原文件属性完全一致，需加 -a
</code></pre><h4 id="mv-剪切或改名命令（move）"><a href="#mv-剪切或改名命令（move）" class="headerlink" title="mv 剪切或改名命令（move）"></a>mv 剪切或改名命令（move）</h4><pre><code>mv [原文件或目录] [目标目录] 
mv japan/ /tmp/ 剪切目录时不需加 -r
mv abc longls 当原文件与目标目录，在同一目录下，则为改名命令
</code></pre><p><br></p>
<p>##文件搜索命令</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;##常用目录&lt;br&gt;linux 是个严谨的操作系统，一级目录都严格规定&lt;/p&gt;
&lt;p&gt;做练习推荐在家目录中（root或home），以及tmp。&lt;/p&gt;
&lt;p&gt;1、/ 根目录&lt;/p&gt;
&lt;p&gt;2、/bin 命令保存目录（普通用户就可以读取的命令）&lt;br&gt;  2-1）根目录下的b
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux 搜索命令</title>
    <link href="http://yoursite.com/2018/05/05/Linux-%E6%90%9C%E7%B4%A2%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2018/05/05/Linux-搜索命令/</id>
    <published>2018-05-05T02:03:05.000Z</published>
    <updated>2018-05-05T02:03:05.183Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Linux 分区</title>
    <link href="http://yoursite.com/2018/05/04/Linux-%E5%88%86%E5%8C%BA/"/>
    <id>http://yoursite.com/2018/05/04/Linux-分区/</id>
    <published>2018-05-04T12:28:18.000Z</published>
    <updated>2018-05-04T13:35:55.731Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MBR"><a href="#MBR" class="headerlink" title="MBR"></a>MBR</h2><p>MBR=主引导区记录。硬盘的0磁道的第一个扇区称为MBR，它的大小是512字节，而这个区域可以分为三个部分。第一部分为pre-boot区（预启动区），占446字节；第二部分是Partition table区（分区表），占64个字节，硬盘中分区有多少以及每一分区的大小都记在其中。第三部分是magic number，占2个字节，固定为55AA。</p>
<p>MBR是针对整个硬盘而言的，而引导扇区是对单个分区而言的。每个分区的第一扇区就是引导扇区：像MBR一样，引导扇区里包含了一些引导操作系统所需要的相关信息。如果引导扇区被破坏了是个非常严重的问题，那就意味着这个分区不能被访问，安装在这个分区上的操作系统也不能被启动。所以说修复引导是使得每一个分区都能被正确识别引导。</p>
<h2 id="分区的优点"><a href="#分区的优点" class="headerlink" title="分区的优点"></a>分区的优点</h2><p>提高文件的查找和读写效率</p>
<p>1.磁盘分区：使用分区编辑器（partition editor）在磁盘上划分几个逻辑上的存储空间。磁盘一旦划分成数个分区（Partition），不同类的目录和文件可以存储进不同的分区。<br>2.：。</p>
<p>##分区类型（所有系统都适用）：</p>
<h4 id="主分区"><a href="#主分区" class="headerlink" title="主分区"></a>主分区</h4><p>最多只能分4个，由硬盘的结构决定（硬盘分为一个个等大小的扇区，每个扇区512字节，其中446个字节用于记录启动信息， 剩下的64个字节进行分区表示，64个字节中每16个字节表示一个分区，所以最多只能表示4个分区，故而硬盘结构如果不变，主分区最多只能分4个）。每个主分区都有各自独立的引导块，可以用fdisk设定为启动区。</p>
<p>Windows下A、B作为软分区的盘符，C作为第一个主分区的盘符，所以最多还能分23个子分区。</p>
<p>####扩展分区</p>
<p>一块硬盘中扩展分区只能有一个</p>
<p>可以将一个主分区作为扩展分区，即三个主分区，一个扩展分区，总计4个分区；</p>
<p>不能写入数据，只能用作包含逻辑分区。</p>
<p>区分扩展分区和逻辑分区，是突破主分区只能有4个的最主要的方法。</p>
<h4 id="逻辑分区"><a href="#逻辑分区" class="headerlink" title="逻辑分区"></a>逻辑分区</h4><p>可以有多个，没有独立的引导块，不能用fdisk设定为启动区。</p>
<h2 id="格式化："><a href="#格式化：" class="headerlink" title="格式化："></a>格式化：</h2><p>又称逻辑格式化，它是指根据用户选定的文件系统（eg：FAT16（最大支持2GB分区），FAT32（单个文件大小不能超过4GB，最大支持16TB分区），NTFS，EXT2，EXT3，EXT4（centos6默认文件系统）等），在磁盘特定区域写入特定数据，在分区中画出一片用于存放文件分配表、目录表等用于文件管理的磁盘空间。</p>
<p>误区解析：格式化的目的并不是清空数据，其根本目的是为了<strong>写入文件系统，能够更快查找读写数据</strong>，但是在进行格式化的操作时会先清空原有数据。</p>
<p>格式化具体进行的操作：<br>将整个分区分割成等大小的数据块（Block），每个数据块默认4KB，存储文件的最小，可以手动选择1KB、2KB或4KB。假设存放10KB的文件，会使用3个数据块，三个数据块不一定是连续的，最后的一数据块中即使没有放满，也不能再存放其他文件。<br>在分区列表中建立一个二维表格，记录了文件的id号（即文件放在那些数据库中，叫做iNode）、文件修改时间、文件的访问权限。操作文件时先访问此二维表进行权限匹配。</p>
<h2 id="Windows与Linux不同的磁盘分区流程"><a href="#Windows与Linux不同的磁盘分区流程" class="headerlink" title="Windows与Linux不同的磁盘分区流程"></a>Windows与Linux不同的磁盘分区流程</h2><p>Windows：分区–&gt;格式化–&gt;分配盘符<br>Linux：分区–&gt;格式化–&gt;给每个分区起“设备文件名”–&gt;分配挂载点</p>
<h2 id="设备文件名"><a href="#设备文件名" class="headerlink" title="设备文件名"></a>设备文件名</h2><p>Linux中一切皆文件，包括硬件、用户等。硬件的文件名即称作“硬件设备文件名”，硬件设备文件名作为硬件的标准称呼，是由Linux自动检测并分配的。硬件设备文件在目录中处于根目录（“/”代表根目录，最高级目录）下的dev文件夹（专用于放硬件设备文件）下，即“/dev”文件夹下。</p>
<h4 id="分区的设备文件名分配规则"><a href="#分区的设备文件名分配规则" class="headerlink" title="分区的设备文件名分配规则"></a>分区的设备文件名分配规则</h4><p>hd代表IDE接口，sd代表SCSI接口或SATA接口；<br>a代表第一块硬盘，如有多块硬盘b代表第二块硬盘，c代表第三块硬盘，以此类推；<br>1代表一块硬盘上的第一个分区，2代表此硬盘的第二个分区，3代表此硬盘第三个分区，以此类推，其中1234编号只能代表主分区或扩展分区，逻辑分区的编号从5开始分配，最大分区编号16<br>/dev/sda1 第一块SATA接口硬盘的第一个分区</p>
<p><img src="http://ow3dy62zt.bkt.clouddn.com/IMG28.jpg" alt=""></p>
<h4 id="挂载点"><a href="#挂载点" class="headerlink" title="挂载点"></a>挂载点</h4><p>。Windows中使用字母标识符来指定在这个分区上的文件和目录，而Linux中使用目录作为挂载点（盘符）<br>绝大多数目录都可以作为挂载点（部分必须和根目录放在同一个分区的目录除外，否则将导致系统不能启动）包括你手工创建的目录。</p>
<p>##Linux 分区</p>
<p>####必须分区：</p>
<p>根分区 /（挂载点根目录，根目录中要保存其他所有数据，根目录如果没有硬盘空间，根下的很多数据将没有地方存放）<br>swap分区（交换分区，可理解为虚拟内存， 当真实内存不足时，可将swap分区中的硬盘空间作为内存使用，如果内存小于等于4GB，推荐swap分配内存的两倍，若内存大于4GB，建议swap空间与内存相等，不需要挂载点）</p>
<p>注：启动分区/boot需不需要创建要看实际情况，<br>需要使用LVM时，由于/boot分区不支持lvmfs，所以要单独创建，这个目录是系统文件，一般不会动，但不要太小，如果升级内核可能就满了。<br>个人使用没有必要</p>
<p>swap分区不是给用户看的，是系统直接调用的所以无挂载点(盘符类似)；</p>
<p><br></p>
<p>参考：</p>
<ul>
<li><a href="https://shengbao.org/691.html" target="_blank" rel="external">https://shengbao.org/691.html</a></li>
<li><a href="http://blog.51cto.com/13323775/2053921" target="_blank" rel="external">http://blog.51cto.com/13323775/2053921</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;MBR&quot;&gt;&lt;a href=&quot;#MBR&quot; class=&quot;headerlink&quot; title=&quot;MBR&quot;&gt;&lt;/a&gt;MBR&lt;/h2&gt;&lt;p&gt;MBR=主引导区记录。硬盘的0磁道的第一个扇区称为MBR，它的大小是512字节，而这个区域可以分为三个部分。第一部分为pre-boo
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux 虚拟机网络配置详解(NAT、桥接、Hostonly)</title>
    <link href="http://yoursite.com/2018/05/04/Linux-%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3-NAT%E3%80%81%E6%A1%A5%E6%8E%A5%E3%80%81Hostonly/"/>
    <id>http://yoursite.com/2018/05/04/Linux-虚拟机网络配置详解-NAT、桥接、Hostonly/</id>
    <published>2018-05-04T08:56:23.000Z</published>
    <updated>2018-05-04T12:24:16.820Z</updated>
    
    <content type="html"><![CDATA[<p>无论是vmware还是virtual box虚拟机软件，一般来说，虚拟机有三种网络模式:</p>
<ol>
<li>Bridged Adapter（桥接模式）</li>
<li>NAT（网络地址转换模式）</li>
<li>Host-only Adapter（主机模式）</li>
</ol>
<p>virtual box中还有lInternal</p>
<p>虚拟网卡在虚拟机安装好之后，会自动添加两张网卡(VMnet1和VMnet8)，VMnet1用Host-only网络连接，VMnet8用NAT方式的网络连接，原先的VMnet0用桥接网络连接。</p>
<p><img src="http://ow3dy62zt.bkt.clouddn.com/IMG23.png" alt=""></p>
<h2 id="桥接"><a href="#桥接" class="headerlink" title="桥接"></a>桥接</h2><p>桥接网络是指宿主物理网卡和虚拟网卡通过VMnet0虚拟交换机进行桥接，物理网卡和虚拟网卡在拓扑图上处于<strong>同等地位</strong>，那么物理网卡和虚拟网卡就相当于处于同一个网段，虚拟交换机就相当于一台现实网络中的交换机，所以两个网卡的IP地址也要设置为同一网段。会占用内网IP</p>
<p>vmnet0实际上就是一个虚拟的网桥(2层交换机)，这个网桥有若干个接口，一个端口用于连接你的Host主机，其余端口可以用于连接虚拟机，他们的位置是对等的，谁也不是谁的网关。<br><img src="http://ow3dy62zt.bkt.clouddn.com/IMG24.png" alt=""></p>
<p>主机A上的两个虚拟机1和虚拟机2，和主机A、B同处于一个网段，能够相互通信<br><img src="http://ow3dy62zt.bkt.clouddn.com/IMG25.png" alt=""></p>
<p>虚拟机网卡配置，虚拟机上网需要IP/子网掩码/DNS/网关</p>
<pre><code>DEVICE=&quot;eth0&quot;
BOOTPROTO=“static&quot; #设置静态ip,动态为dhcp
IPADDR=&quot;192.168.1.3&quot;
GATEWAY=&quot;192.168.1.1&quot;
HWADDR=&quot;08:00:27:C7:1B:22&quot;
DNS1=&quot;8.8.8.8&quot;
NETMASK=&quot;255.255.255.0&quot;
ONBOOT=&quot;yes&quot;
</code></pre><p>CentOS 7中ONBOOT默认为NO，需要打开</p>
<h4 id="应用场景："><a href="#应用场景：" class="headerlink" title="应用场景："></a>应用场景：</h4><p>虚拟机要求可以上网，且虚拟机完全模拟一台实体机</p>
<p><br></p>
<h2 id="NAT"><a href="#NAT" class="headerlink" title="NAT"></a>NAT</h2><p>NAT模式中，就是让虚拟机借助NAT(网络地址转换)功能，通过宿主机器所在的网络来访问公网。宿主能够联网，虚拟机也能联网(其他主机)。宿主没有联网，虚拟机也不能联网</p>
<p>vmnet1也是一个虚拟的交换机，交换机的一个 端口连接到你的Host上，另外一个端口连接到虚拟的DHCP服务器上（实际上是vmware的一个组件），另外剩下的端口就是连虚拟机了，主机A和虚拟机1和2能相互通信，虚拟机1和2能访问主机B和外网，主机B不能访问虚拟机1和2，虚拟机1和2能相互通信<br><img src="http://ow3dy62zt.bkt.clouddn.com/IMG27.png" alt=""></p>
<p>虚拟机的配置:</p>
<pre><code>DEVICE=&quot;eth0&quot;
BOOTPROTO=“static&quot; #设置静态ip,动态为dhcp
IPADDR=&quot;10.0.2.5&quot;
GATEWAY=&quot;10.0.2.1&quot;
HWADDR=&quot;08:00:27:C7:1B:22&quot;
DNS1=&quot;10.0.2.1&quot;
NETMASK=&quot;255.255.255.0&quot;
ONBOOT=&quot;yes&quot;
</code></pre><h4 id="应用场景：-1"><a href="#应用场景：-1" class="headerlink" title="应用场景："></a>应用场景：</h4><p>虚拟机只要求可以上网，无其它特殊要求，满足最一般需求</p>
<p><br></p>
<h2 id="Host-Only"><a href="#Host-Only" class="headerlink" title="Host-Only"></a>Host-Only</h2><p><strong>所有的虚拟系统是可以相互通信的，但虚拟系统和真实的网络是被隔离开的</strong></p>
<p>虚拟系统和宿主机器系统是可以相互通信的。<br>虚拟系统的TCP/IP配置信息(如IP地址、网关地址、DNS服务器等)，都是由VMnet1(host-only)虚拟网络的DHCP服务器来动态分配的。</p>
<p>主机和虚拟机之间的通信是通过 VMnet1虚拟网卡来实现的。虚拟机连接到VMnet1上，系统并不为其提供任何路由服务，因此虚拟机只能和宿主机进行通信，而不能连接到真正的网络上。</p>
<p>Host-Only的宗旨就是建立一个与外界隔绝的内部网络，来提高内网的安全性。这个功能或许对普通用户来说没有多大意义，但大型服务商会常常利用这个功能。如果你想为VMnet1网段提供路由功能，那就需要使用RRAS，而不能使用XP或2000的ICS，因为ICS会把内网的IP地址改为192.168.0.1，但虚拟机是不会给VMnet1虚拟网卡分配这个地址的，那么主机和虚拟机之间就不能通信了。</p>
<p>虚拟机1和2之间可以相互通信，主机A能和虚拟机1和2通信，虚拟机1和2不能和主机通信(需要设置)，虚拟机不能和B主机以及外网通信<br><img src="http://ow3dy62zt.bkt.clouddn.com/IMG26.png" alt=""></p>
<h4 id="使用范围"><a href="#使用范围" class="headerlink" title="使用范围"></a>使用范围</h4><p>如果你想利用VMWare创建一个与网内其他机器相隔离的虚拟系统，进行某些特殊的网络调试工作，可以选择host-only模式。</p>
<p><br></p>
<h2 id="内网模式"><a href="#内网模式" class="headerlink" title="内网模式"></a>内网模式</h2><p>内网模式，顾名思义就是内部网络模式：虚拟机与外网完全断开，只实现虚拟机于虚拟机之间的内部网络模式。</p>
<p>虚拟机与主机的关系：不能相互访问，彼此不属于同一个网络，无法相互访问。<br>虚拟机与网络中其他主机的关系：不能相互访问，理由同上。<br>虚拟机与虚拟机的关系：可以相互访问，前提是在设置网络时，两台虚拟机设置同一网络名称。如上配置图中，名称为intnet。</p>
<p>参考：</p>
<ul>
<li><a href="http://www.cnblogs.com/ggjucheng/archive/2012/08/19/2646007.html" target="_blank" rel="external">http://www.cnblogs.com/ggjucheng/archive/2012/08/19/2646007.html</a></li>
<li><a href="https://www.jianshu.com/p/305f7384cfe9" target="_blank" rel="external">https://www.jianshu.com/p/305f7384cfe9</a></li>
<li><a href="https://blog.csdn.net/bytxl/article/details/35569217" target="_blank" rel="external">https://blog.csdn.net/bytxl/article/details/35569217</a></li>
<li><a href="https://blog.csdn.net/clevercode/article/details/45934233" target="_blank" rel="external">https://blog.csdn.net/clevercode/article/details/45934233</a></li>
<li><a href="http://blog.51cto.com/wangchunhai/381225" target="_blank" rel="external">http://blog.51cto.com/wangchunhai/381225</a></li>
<li><a href="https://github.com/waltcow/blog/issues/21" target="_blank" rel="external">https://github.com/waltcow/blog/issues/21</a></li>
<li><a href="https://blog.csdn.net/guizaijianchic/article/details/72190394" target="_blank" rel="external">https://blog.csdn.net/guizaijianchic/article/details/72190394</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;无论是vmware还是virtual box虚拟机软件，一般来说，虚拟机有三种网络模式:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Bridged Adapter（桥接模式）&lt;/li&gt;
&lt;li&gt;NAT（网络地址转换模式）&lt;/li&gt;
&lt;li&gt;Host-only Adapter（主机模式）&lt;/
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux 安装ssh</title>
    <link href="http://yoursite.com/2018/05/02/Linux-%E5%AE%89%E8%A3%85ssh/"/>
    <id>http://yoursite.com/2018/05/02/Linux-安装ssh/</id>
    <published>2018-05-02T10:46:32.000Z</published>
    <updated>2018-05-02T12:42:08.182Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简易版"><a href="#简易版" class="headerlink" title="简易版"></a>简易版</h2><pre><code>#查看ssh服务是否开启
ps -e |grep ssh

#安装ssh服务
sudo apt install openssh-server

#配置ssh
sudo vi /etc/ssh/sshd_config
#PermitRootLogin，RSAAuthentication，PubkeyAuthentication的设置打开

#开启ssh服务
sudo systemctl restart sshd.service
#开机启动SSH服务
sudo systemctl enable sshd.service

#连接
ssh -p 22 userName@192.168.1.100
</code></pre><h2 id="复杂版"><a href="#复杂版" class="headerlink" title="复杂版"></a>复杂版</h2><p>参考<a href="https://wiki.centos.org/HowTos/Network/SecuringSSH" target="_blank" rel="external">https://wiki.centos.org/HowTos/Network/SecuringSSH</a></p>
<pre><code>sudo firewall-cmd --reload
#重新载入防火墙设定
</code></pre><h2 id="设置SSH免密码登录"><a href="#设置SSH免密码登录" class="headerlink" title="设置SSH免密码登录"></a>设置SSH免密码登录</h2><pre><code>ssh-keygen -t rsa
# ～/.ssh目录中创建两个名为id_rsa和id_rsa.pub的文件，id_rsa是私钥，id_rsa.pub是公钥

#设置权限
chmod 700〜/ .ssh
chmod 600〜/ .ssh / id_rsa 

# 复制公钥到服务器然后写入到~/.ssh/authorized_keys 方法一
# 使用SSH远程登陆到服务器,发现家目录中还没有.ssh目录,使用mkdir创建
mkdir .ssh
# 发送公钥
scp -P 端口号 ./id_rsa.pub alice@192.168.0.10:/home/alice/.ssh
# 将公钥追加写入~/.ssh/authorized_keys中,若authorized_keys不存在,则会创建并写入
cat id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys
#修改authorized_keys的权限为600,并删除公钥文件
rm id_rsa.pub

# 复制公钥到服务器然后写入到~/.ssh/authorized_keys 方法二
# ssh-copy-id 命令可以把本地主机的公钥复制到远程主机的 authorized_keys 文件上
ssh-copy-id -i ~/.ssh/id_rsa.pub user@server
chmod 700 ~/.ssh 
chmod 600 ~/.ssh/authorized_keys
</code></pre><h2 id="清除SSH的私钥密码"><a href="#清除SSH的私钥密码" class="headerlink" title="清除SSH的私钥密码"></a>清除SSH的私钥密码</h2><pre><code>ssh-keygen -p
# 选择需要修改的私钥，默认是/home/username/.ssh/id_rsa。
# 选好文件后按回车，会提示你输入旧密码。
#输入好后会提示输入新密码。
#直接回车，提示确认新密码再直接回车，此时指定的私钥的密码就被清除了
</code></pre><p>参考：</p>
<ul>
<li><a href="https://wiki.centos.org/HowTos/Network/SecuringSSH" target="_blank" rel="external">https://wiki.centos.org/HowTos/Network/SecuringSSH</a></li>
<li><a href="http://www.iosugar.com/2017/02/14/CentOS-remote-login-SSH-configuration/#SSH%E7%99%BB%E9%99%86" target="_blank" rel="external">http://www.iosugar.com/2017/02/14/CentOS-remote-login-SSH-configuration/#SSH%E7%99%BB%E9%99%86</a></li>
<li><a href="http://einverne.github.io/post/2016/06/ssh-copy-id.html" target="_blank" rel="external">http://einverne.github.io/post/2016/06/ssh-copy-id.html</a></li>
<li><a href="https://www.ssh.com/ssh/copy-id" target="_blank" rel="external">https://www.ssh.com/ssh/copy-id</a></li>
<li><a href="https://linux.cn/article-6901-1.html" target="_blank" rel="external">https://linux.cn/article-6901-1.html</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简易版&quot;&gt;&lt;a href=&quot;#简易版&quot; class=&quot;headerlink&quot; title=&quot;简易版&quot;&gt;&lt;/a&gt;简易版&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;#查看ssh服务是否开启
ps -e |grep ssh

#安装ssh服务
sudo apt install op
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux网络管理 网络基础</title>
    <link href="http://yoursite.com/2018/05/01/Linux%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86-%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/"/>
    <id>http://yoursite.com/2018/05/01/Linux网络管理-网络基础/</id>
    <published>2018-05-01T11:06:32.000Z</published>
    <updated>2018-05-02T14:11:57.029Z</updated>
    
    <content type="html"><![CDATA[<h3 id="OSI模型"><a href="#OSI模型" class="headerlink" title="OSI模型"></a>OSI模型</h3><p>开放系统互联模型，由ISO(国际标准化组织) 组织开发的</p>
<p>该模型为基础模型, 而实际中常用的TCP/IP模型是由七层模型演变的</p>
<p>上三层(应用层、表示层、会话层)是对用户提供服务, 下四层(传输层、网络层、数据链路层、物理层)对数据传输提供服务</p>
<table>
<thead>
<tr>
<th>层级</th>
<th>作用</th>
<th>传输单元</th>
</tr>
</thead>
<tbody>
<tr>
<td>应用层</td>
<td>用户接口</td>
<td>APDU，应用协议数据单元</td>
</tr>
<tr>
<td>表示层</td>
<td>数据的表现形式（ASCII、GB2312、jpg）、 特定功能的实现如加密、压缩</td>
<td>PPDU，表示协议数据单元</td>
</tr>
<tr>
<td>会话层</td>
<td>对应用会话的管理、同步。 确定网络数据是否要经过远程会话</td>
<td>SPDU，会话协议数据单元</td>
</tr>
<tr>
<td>传输层</td>
<td>确定可靠与不可靠的传输（ TCP传输控制协议可靠不会丢、UDP用户数据报协议更快但可能会丢）、传输前的错误检测、 流量控制、 确立端口号, 便于通过IP确定主机后, 通过端口确定交互的服务</td>
<td>TPDU，传输协议数据单元</td>
</tr>
<tr>
<td>网络层</td>
<td>负责提供逻辑地址(IP地址, 需要写入发件人IP与收件人IP）、 选择通路。 （确定IP地址，原IP、目地IP）</td>
<td>报文</td>
</tr>
<tr>
<td>数据链路层</td>
<td>负责组成帧(组入MAC信息)，用MAC地址访问媒介（源地址&amp;目的地址）、错误的检测与修正。物理地址，就是计算机MAC地址，也就是计算机网卡地址。每一台电脑都有一个网卡地址，MAC地址负责局域网通信，IP地址负责外网通信。</td>
<td>帧</td>
</tr>
<tr>
<td>物理层</td>
<td>设备之间比特流的传输（ 最基本的数据传递）、物理接口（ 网线口、视频口、音频口）、电气特性（ 网线8根线中的1、3、2、6四根线传输数据）</td>
<td>比特流</td>
</tr>
</tbody>
</table>
<p>举例场景 用户A需要给用户B发送一份邮件</p>
<ol>
<li>应用层 : 浏览器进入邮箱, 写邮件, 点击发送, 数据将传递至 表示层</li>
<li>表示层 : 进行的数据的编码, 而后数据传递至会话层</li>
<li>会话层 : 判断数据的发送类型, 是进行网络传输还是进行本地保存, 若是进行传输 传递至传输层</li>
<li>传输层 : 确立协议TCP或UDP, 写入邮件的发送及目标端口号, 传递至网络层</li>
<li>网络层 : 写入自身及目标IP地址, 传递至数据链路层</li>
<li>数据链路层 : 写入源MAC地址与目标MAC地址, 由于IP地址找到局域网, 再通过MAC地址在局域网中找到目标, 传递至物理层</li>
<li>物理层 : 数据传输</li>
</ol>
<p><br></p>
<h3 id="TCP-IP"><a href="#TCP-IP" class="headerlink" title="TCP/IP"></a>TCP/IP</h3><h4 id="TCP-IP-四层模型与-OSI-七层模型对应关系"><a href="#TCP-IP-四层模型与-OSI-七层模型对应关系" class="headerlink" title="TCP/IP 四层模型与 OSI 七层模型对应关系"></a>TCP/IP 四层模型与 OSI 七层模型对应关系</h4><ul>
<li>应用层 : 应用层、表示层、会话层<br>为用户提供所需的各种服务, 例如 <strong>FTP</strong>、<strong>Telnet</strong>、<strong>DNS</strong>、<strong>SMTP</strong>等</li>
</ul>
<ul>
<li>传输层 : 传输层<br>负责为应用层实体提供端到端的通信功能, 保证了数据包的顺序传送及数据的完整性, 该层定义了两个主要的协议 : 传输控制协议(<strong>TCP</strong>)可靠的面向连接，不会丢失，类似打电话，网页、邮件 和  用户数据报协议(<strong>UDP</strong>)不可靠的面向无连接,有可能丢失, 类似发短信、QQ</li>
</ul>
<ul>
<li>网际互联层 : 网络层<br>主要解决主机到主机的通信问题, 它所包含的协议涉及数据包在整个网络上的逻辑传输, 该层有三个主要协议 : 网际协议(<strong>IP</strong>), 互联网组管理协议(<strong>IGMP</strong>), 互联网控制报文协议(<strong>ICMP</strong>)</li>
</ul>
<ul>
<li>网络接口层 : 数据链路层、物理层<br>负责监视数据在主机和网络之间的交换, 事实上, TCP/IP本身并未定义该层的协议, 而由参与互连的各网络使用自己的物理层和数据链路层协议, 然后与TCP/IP的网络接入层进行连接. 地址解析协议(<strong>ARP</strong>) 工作在此层, 即OSI参考模型的数据链路层.<br>地址解析协议(ARP) : 将IP地址 翻译成物理地址</li>
</ul>
<h4 id="数据封装过程"><a href="#数据封装过程" class="headerlink" title="数据封装过程"></a>数据封装过程</h4><p>发送是由上至下进行打包, 接收是由下至上进行拆包<br><img src="http://ow3dy62zt.bkt.clouddn.com/IMG10.jpg" alt=""></p>
<h4 id="TCP-IP-模型与OSI-模型的比较"><a href="#TCP-IP-模型与OSI-模型的比较" class="headerlink" title="TCP/IP  模型与OSI 模型的比较"></a>TCP/IP  模型与OSI 模型的比较</h4><p>共同点</p>
<ol>
<li>OSI 参考模型和 TCP/IP参考模型都采用了层次结构的概念</li>
<li>都能够提供面向连接和无连接两种通信服务机制</li>
</ol>
<p>不同点</p>
<ol>
<li>OSI 七层, TCP/IP 四层</li>
<li>对可靠性要求不同(TCP/IP 更高)</li>
<li>OSI 模型是在协议开发前设计的, 具有通用性. TCP/IP 是先有协议集, 然后建立模型, 不适用与非TCP/IP网络</li>
<li>实际市场应用不同( OSI 模型只是理论上的模型, 并没有成熟的产品, 而TCP/IP已经成为”实际上的国际标准”)</li>
</ol>
<p><br></p>
<h3 id="IP地址"><a href="#IP地址" class="headerlink" title="IP地址"></a>IP地址</h3><h4 id="IP包头-如图"><a href="#IP包头-如图" class="headerlink" title="IP包头(如图)"></a>IP包头(如图)</h4><p>横32位, 竖5行, 固定的共160位, 20字节, 另外有其他选项存在, 导致包头不固定, 因此每接收到包头, 需要进行检测包头长度才能够取出包头, 也是为何IPv4没有IPv6快的原因</p>
<p>包头中包含的IP地址只有32位, 即2的32次幂, 42亿9千万左右的IP</p>
<p><img src="http://ow3dy62zt.bkt.clouddn.com/IMG11.jpg" alt=""></p>
<h4 id="IP地址分类"><a href="#IP地址分类" class="headerlink" title="IP地址分类"></a>IP地址分类</h4><p>IP分为A、B、C、D、E 五大类, 其中DE不对民用组织开放, 不可使用, 因此有效类只有ABC<br>可根据第一位数值判断类别, 1-126 为A类, 128-172 为B类, 192-223 为C类</p>
<p>127.0.0.1 为本机</p>
<p> 第一位表示不同网段, 不同网络, 不同网络之间的通信需要使用路由器，路由器是用来实现跨网络通信的, 同一网络下通信使用交换机即可. 第一位不变情况下, 后三位的变化都代表同一网络下的不同主机</p>
<ol>
<li>A 类 : 每个网络中的第一个地址(X.0.0.0)代表网络本身,最后一个地址(X.255.255.255)代表当前网络的广播地址, 不能分配, 最大主机数 : 后三位的次幂, 减 第一和最后一个 , 2^24 -2</li>
<li>B 类 : 前两位代表网段, 后两位代表网段中的不同主机</li>
<li>C 类 : 前三位代表网段, 最后一位代表不同主机</li>
</ol>
<p>私有IP :  不需要花钱买, 用来做内网IP, 可有效保护公网IP, 不能直接访问公网, 需要与公网之间进行转换才可访问互联网</p>
<p><img src="http://ow3dy62zt.bkt.clouddn.com/IMG12.jpg" alt=""></p>
<p><br></p>
<h3 id="子网掩码"><a href="#子网掩码" class="headerlink" title="子网掩码"></a>子网掩码</h3><p>ABC类可以用不同的网段个数和主机个数, 是由子网掩码决定<br>子网掩码用连续1的表示，例如255.0.0.0，255.255.0.0，255。255.255.255.0</p>
<p>子网掩码的作用：用来区分不同网段的IP—-子网掩码与IP相与，得到的结果相同则在同一网段。否则不在，需要经过路由器转发。</p>
<p>合理的子网掩码 : 所有的1必须连续, A 类地址可匹配B类子网掩码</p>
<p>IP和子网掩码必须一起配合使用。<br>网络号=IP&amp;&amp;子网掩码</p>
<p>广播地址：主机号全为1,广播地址是专门用于同时向网络中所有工作站进行发送的一个地址</p>
<p>合理的子网掩码 : 所有的1必须连续, A 类地址可匹配B类子网掩码</p>
<p><img src="http://ow3dy62zt.bkt.clouddn.com/IMG13.jpg" alt=""></p>
<p><br></p>
<h3 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h3><p><img src="http://ow3dy62zt.bkt.clouddn.com/IMG14.jpg" alt=""><br><img src="http://ow3dy62zt.bkt.clouddn.com/IMG15.jpg" alt=""></p>
<pre><code>netstat -an
# 查看本机启用的端口
#-a:查看所有连接和监听端口
#-n:显示IP地址和端口号，而不显示域名和服务名
</code></pre><p>TCP因为3次握手的机制所以需要监听，而UDP不需要监听</p>
<h4 id="常见端口号"><a href="#常见端口号" class="headerlink" title="常见端口号"></a>常见端口号</h4><ul>
<li>FTP（文件传输协议）：20、21；</li>
<li>SSH（安全shell协议）：22；</li>
<li>telnet（远程登录协议）：23；</li>
<li>DNS（域名系统）：53；</li>
<li>http（超文本传输协议）：80；</li>
<li>SMTP（简单邮件传输协议）：25；</li>
<li>POP3（邮局协议）：110；</li>
</ul>
<p><br></p>
<h3 id="DNS"><a href="#DNS" class="headerlink" title="DNS"></a>DNS</h3><h4 id="hosts和DNS"><a href="#hosts和DNS" class="headerlink" title="hosts和DNS"></a>hosts和DNS</h4><p>hosts文件：做静态IP和域名对应，优先于DNS.<br>位置：<br>C：\Windows\System32\drivers\etc\hosts<br>hosts文件只可做临时解析用，名称解析效能下降，主机维护困难</p>
<p>DNS全称为——&gt;domain name system——&gt;域名系统</p>
<ul>
<li>不配置DNS是不能联网的。</li>
<li>在互联网中，通过IP地址来进行通信。</li>
<li>IP地址是用数字来表示的，记忆起来太困难了(如116.213.120.232)</li>
<li>人对域名更加敏感，:<a href="http://www.imooc.com/" target="_blank" rel="external">http://www.imooc.com/</a></li>
</ul>
<p>DNS服务的作用:将域名解析为IP地址<br>过程：客户机向DNS服务器发送查询IP请求<br>DNS服务器查询到web服务器的ip，告知用户<br>用户访问web服务器</p>
<h4 id="域名空间结构"><a href="#域名空间结构" class="headerlink" title="域名空间结构"></a>域名空间结构</h4><p>根域：.（13台服务器）<br>——&gt;顶级域/一级域：包括组织域和地区域<br>（组织域：gov政府/edu教育部门/com商业部门/org民间团体/net网络服务机构/mil军事部门 地区域：cn 中国 hk 香港 jp 日本 Uk 英国 au 澳大利亚）<br>——&gt;二级域：企业或个人自行购买的（imooc /microsoft/ibm/sina）<br>——&gt;主机名/3级域：申请完二级域后自己定义的（www/news）</p>
<p>三级域（www）+二级域（baidu）+顶级域（.com）组成完整域名空间</p>
<p>为什么要进行域名分级划分<br>便于IP地址解析</p>
<h4 id="DNS查询过程"><a href="#DNS查询过程" class="headerlink" title="DNS查询过程"></a>DNS查询过程</h4><p>DNS客户机——&gt;本地域名服务器——&gt;根DNS服务器——&gt;cn服务器——&gt;com.cn服务器——&gt;imooc.com.cn——&gt;本地域名服务器——&gt;DNS客户机——&gt;web服务器www.imooc.com.cn</p>
<p><img src="http://ow3dy62zt.bkt.clouddn.com/IMG16.PNG" alt=""></p>
<h4 id="DNS查询类型"><a href="#DNS查询类型" class="headerlink" title="DNS查询类型"></a>DNS查询类型</h4><p>从查询方式上分</p>
<ul>
<li>递归查询：客户机将请求发送给DNS服务器，服务器通过缓存或者询问其他服务器最后将一个准确的结果或者失败回复给客户机，客户机只负责问，所有事情都是服务器做。客户机对本地域名服务器查询的机制，必须反馈准确值（要么成功要么失败）</li>
<li>迭代查询：客户机像DNS服务器发送请求后，服务器向客户机返回另一个服务器的地址，客户机不停地向不同DNS服务器发送请求，所有事情都自己做。本地域名服务器分别对各级域名服务器的查询机制，不一定反馈准确值</li>
</ul>
<p>从查询内容上分</p>
<ul>
<li>正向：域名到IP ARP </li>
<li>反向：IP到域名 RARP</li>
</ul>
<p><br></p>
<h3 id="网关"><a href="#网关" class="headerlink" title="网关"></a>网关</h3><ul>
<li>网关（Gateway）又称网间连接器、协议转换器</li>
<li>网关在网络层以上实现网络互连，是最复杂的网络互连设备，仅用于两个高层不同的网络互连</li>
<li>网关既可以用于广域网互连，也可以用于局域网互连</li>
<li>网关是一种充当转换重任的服务器或路由器</li>
<li>交换机不能识别ip，只能记录客户机的MAC地址。即只能在局域网中进行通信</li>
<li>访问不同网段，则需要引入网关。</li>
<li>网关：一个具有路由功能的设备，一般为路由器。</li>
</ul>
<p><img src="http://ow3dy62zt.bkt.clouddn.com/IMG17.jpg" alt=""></p>
<h4 id="网关作用"><a href="#网关作用" class="headerlink" title="网关作用"></a>网关作用</h4><ul>
<li>网关在所有内网计算机访问的不是本网段的数据包时使用</li>
<li>把内网Ip转公网Ip，公网Ip转内网Ip</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;OSI模型&quot;&gt;&lt;a href=&quot;#OSI模型&quot; class=&quot;headerlink&quot; title=&quot;OSI模型&quot;&gt;&lt;/a&gt;OSI模型&lt;/h3&gt;&lt;p&gt;开放系统互联模型，由ISO(国际标准化组织) 组织开发的&lt;/p&gt;
&lt;p&gt;该模型为基础模型, 而实际中常用的TCP/I
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux网络管理 远程登录</title>
    <link href="http://yoursite.com/2018/05/01/Linux%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86-%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95/"/>
    <id>http://yoursite.com/2018/05/01/Linux网络管理-远程登录/</id>
    <published>2018-05-01T11:03:54.000Z</published>
    <updated>2018-05-02T07:34:20.474Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SSH协议原理"><a href="#SSH协议原理" class="headerlink" title="SSH协议原理"></a>SSH协议原理</h2><h4 id="对称加密算法"><a href="#对称加密算法" class="headerlink" title="对称加密算法"></a>对称加密算法</h4><p>采用单钥密码系统的加密方法, 同一个秘钥可以同时用作信息的加密和解密, 这种加密方法称为对称加密, 也称为单秘钥加密.</p>
<p><img src="http://ow3dy62zt.bkt.clouddn.com/IMG22.png" alt=""></p>
<p>缺点 : 加密解密使用相同密码, 需要告知对方密码, 等同于将自身多方习惯密码告知对方. 例如邮箱等密码, 造成威胁</p>
<h4 id="非对称加密算法"><a href="#非对称加密算法" class="headerlink" title="非对称加密算法"></a>非对称加密算法</h4><p>asymmetric cryptographic algorithm，又名 “公开秘钥加密算法” ,  需要公开秘钥(publickey) 和私有秘钥(privatekey)<br>linux 中为 gpg工具, windows 中为 pgp工具</p>
<p><img src="http://ow3dy62zt.bkt.clouddn.com/IMG21.jpg" alt=""></p>
<p>过程原理, A 需要发送数据包给 B</p>
<ol>
<li>A 根据自己密码A 生成 公钥A 和私钥A</li>
<li>B 根据自己密码B 生成 公钥B 和私钥B</li>
<li>A 向 B 寻要 公钥B, 再结合自身的公钥A 对数据包进行加密, 并发送给B</li>
<li>B 收到数据包之后, 可根据自身密码B 和 私钥B 对数据包进行解密且成功</li>
<li>此时, A 也可以根据自身密码A 结合 私钥A 对已加密的数据包进行解密</li>
<li>至此, 避免了泄露 A 自身的密码</li>
</ol>
<h4 id="SSH安全外壳协议"><a href="#SSH安全外壳协议" class="headerlink" title="SSH安全外壳协议"></a>SSH安全外壳协议</h4><p>在非对称加密算法之上演变而来<br>密码足够复杂强壮可降低暴力破解的成功性<br>SSH 保护数据传递过程中的安全, 但若在传递之前中病毒则不可避免<br>通用的远程管理协议</p>
<p><img src="http://ow3dy62zt.bkt.clouddn.com/IMG23.jpg" alt=""></p>
<p>过程原理, A 需要发送数据包给 B</p>
<ol>
<li>A 持有 公钥A 和 私钥A</li>
<li>B 持有 公钥B 和 私钥B</li>
<li>A 向 B 寻要 公钥B, 再结合自身的 公钥A 对数据包进行加密, 并发送给B</li>
<li>B 收到数据包之后, 可根据自身 私钥B 对数据包进行解密</li>
</ol>
<h4 id="SSH-命令"><a href="#SSH-命令" class="headerlink" title="SSH 命令"></a>SSH 命令</h4><pre><code>ssh 用户名@ip
# 远程管理制定Linux服务器
# 经过远程之后, 在家目录中的 .ssh 文件夹 know_hosts文件中保存着 连接成功的目标信息
# 地址 加密算法 公钥
#若目计算机进行了重装系统, 或地址被另一台机器占用, 此时 已下载的公钥无法使用, 使用vi 对改行进行删除, 当再次连接时, 会再次提示是否进行下载公钥


scp [-r] 用户名@ip:文件路径 本地路径
# 网络复制命令, 下载文件 或加-r 下载文件夹

scp [-r] 本地文件 用户名@ip:上传路径
# 网络复制命令, 上传文件 或加-r 上传文件夹
# 此为linux 与 linux之间进行文件传输的最简单方式
</code></pre><h2 id="远程管理工具"><a href="#远程管理工具" class="headerlink" title="远程管理工具"></a>远程管理工具</h2><p>SecureCRT、Xshell</p>
<p>WinSCP文件传输工具</p>
<p>FileZilla</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;SSH协议原理&quot;&gt;&lt;a href=&quot;#SSH协议原理&quot; class=&quot;headerlink&quot; title=&quot;SSH协议原理&quot;&gt;&lt;/a&gt;SSH协议原理&lt;/h2&gt;&lt;h4 id=&quot;对称加密算法&quot;&gt;&lt;a href=&quot;#对称加密算法&quot; class=&quot;headerlink&quot; 
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux网络管理 网络命令</title>
    <link href="http://yoursite.com/2018/05/01/Linux%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86-%E7%BD%91%E7%BB%9C%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2018/05/01/Linux网络管理-网络命令/</id>
    <published>2018-05-01T11:03:44.000Z</published>
    <updated>2018-05-02T06:50:00.154Z</updated>
    
    <content type="html"><![CDATA[<h2 id="网络环境查看命令"><a href="#网络环境查看命令" class="headerlink" title="网络环境查看命令"></a>网络环境查看命令</h2><pre><code>ifconfig
# 查看与临时配置网络状态，但无法查看网关和DNS


#关闭与启动网卡
ifdown 网卡设备名 
#禁用该网卡设备
ifup 网卡设备名 
#启用该网卡设备


#查询网络状态
netstat 选项
选项：一般为tuln或an
-t：列出TCP协议端口
-u：列出UDP协议端口
-n：不使用域名与服务名，而使用IP地址和端口号
-l：仅列出在监听状态的网络服务
-a：列出所有的网络连接

#统计计算机建立的远程连接数
netstat -an | grep ESTABLISHED | wc -l

#查看网关
netstat -rn 
选项：
-r：列出路由表，功能和route命令一致。


route -n 
#查看路由列表(可以看到网关)
route add default gw 192.168.1.1
#临时测定网关


#域名解析命令
nslookup [主机名或IP] 
#进行域名与IP地址解析，域名对应哪个IP

nslookup
&gt;server #本地设定的DNS的地址
&gt;exit #退出
</code></pre><p><img src="http://ow3dy62zt.bkt.clouddn.com/IMG19.png" alt=""><br><img src="http://ow3dy62zt.bkt.clouddn.com/IMG20.png" alt=""></p>
<p>在一台服务器里，连接内网的网卡是不能设置网关的，只有连接外网的网卡才能设置，而且这个网关是由运营商设置好 它告诉我们的下一级网络地址。</p>
<p>随便设置一个网关是不行的，因为与外网通信时，要把消息转发到网关，网关负责把内网IP转换成功公网IP，随便设置则将找不到这个网关，导致呈现网络连接失败状态。</p>
<h2 id="网络测试命令"><a href="#网络测试命令" class="headerlink" title="网络测试命令"></a>网络测试命令</h2><pre><code>ping [选项] ip或域名 
#探测指定IP或域名的网络状况
选项：
-c 次数：指定ping包的次数


telnet [域名或IP] [端口] 
#远程管理与端口探测命令，明文传递
telnet 192.168.0.252 80
#如果连接成功，将会进入连接状态，按ctrl+]退出到telnet，再键入quit返回命令行状态


traceroute [选项] IP或域名 
#路由跟踪命令，查看中间所经过的节点，故障定位。
选项：
-n 使用IP，不使用域名，速度更快
#和ping一样都是利用的ICMP协议（Internet Control Message Protocol）Internet控制报文协议
#家用网络大多数结点都禁止ping，就是*，可以根据路由来分析哪些结点出现了问题


wget http://soft.vpser.net/lnmp/lnmp1.1-full.tar.gz     #下载命令


tcpdump -i eth0 -nnX port 21
抓取eth0网卡上的数据包，以16进制拆分数据包(用port 21可以只拆分21端口)
选项：
-i：指定网卡接口
-nn：将数据包中的域名与服务转为IP和端口
-X：以十六进制和ASCII码显示数据包内容
port：指定监听的端口
</code></pre><ul>
<li>ftp也是明文：用来上传下载文件，默认是不允许用户登陆的</li>
<li>http都是明文，一旦截获了数据包，就能直接获取里面的数据</li>
<li>https才是加密的</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;网络环境查看命令&quot;&gt;&lt;a href=&quot;#网络环境查看命令&quot; class=&quot;headerlink&quot; title=&quot;网络环境查看命令&quot;&gt;&lt;/a&gt;网络环境查看命令&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;ifconfig
# 查看与临时配置网络状态，但无法查看网关和DNS


#
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux网络管理 网络配置</title>
    <link href="http://yoursite.com/2018/05/01/Linux%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86-%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2018/05/01/Linux网络管理-网络配置/</id>
    <published>2018-05-01T11:03:33.000Z</published>
    <updated>2018-05-02T06:32:27.346Z</updated>
    
    <content type="html"><![CDATA[<h2 id="IP地址配置"><a href="#IP地址配置" class="headerlink" title="IP地址配置"></a>IP地址配置</h2><p>DHCP服务器可以自动分配IP</p>
<h4 id="ifconfig命令临时配置IP地址"><a href="#ifconfig命令临时配置IP地址" class="headerlink" title="ifconfig命令临时配置IP地址"></a>ifconfig命令临时配置IP地址</h4><pre><code>ifconfig
查看当前网络状态
ifconfig eth0 192.168.254.200 netmask 255.255.255.0
临时设置eth0网卡的IP地址与子网掩码
</code></pre><h4 id="setup工具永久配置IP地址"><a href="#setup工具永久配置IP地址" class="headerlink" title="setup工具永久配置IP地址"></a>setup工具永久配置IP地址</h4><ul>
<li>红帽专有图形化工具setup设置IP地址</li>
<li>CentOS系统中默认就没有setup命令，需要安装</li>
</ul>
<pre><code>yum -y install setuptool   
安装setup命令工具
yum -y install ntsysv   
安装setup工具配套的系统服务组件
yum -y install system-config-securitylevel-tui
安装setup工具配套的防火墙配置组件
yum -y install system-config-network-tui 
安装setup工具配套的网络配置组件
yum -y install authconfig-gtk
安装setup工具配套的验证配置组件
</code></pre><p>system-config-network-tui 无法安装，是因为网络设置改到<code>nmtui</code>命令中</p>
<p>####修改网络配置文件</p>
<p>因为配置文件不光可以配置IP，所以单独开一节</p>
<p>####图形界面配置IP地址</p>
<p><br></p>
<h2 id="修改网络配置文件"><a href="#修改网络配置文件" class="headerlink" title="修改网络配置文件"></a>修改网络配置文件</h2><h4 id="网卡信息文件"><a href="#网卡信息文件" class="headerlink" title="网卡信息文件"></a>网卡信息文件</h4><p><img src="http://ow3dy62zt.bkt.clouddn.com/IMG18.png" alt=""></p>
<h4 id="主机名文件"><a href="#主机名文件" class="headerlink" title="主机名文件"></a>主机名文件</h4><pre><code>vi /etc/sysconfig/network

hostname [主机名]
# 查看与临时设置主机名命令
</code></pre><h4 id="DNS配置文件"><a href="#DNS配置文件" class="headerlink" title="DNS配置文件"></a>DNS配置文件</h4><pre><code>vi /etc/resolv.conf
# nameserver 名称服务器/DNS
</code></pre><p><br></p>
<h2 id="虚拟机网络参数配置"><a href="#虚拟机网络参数配置" class="headerlink" title="虚拟机网络参数配置"></a>虚拟机网络参数配置</h2><p>1.配置LinuxIP地址</p>
<pre><code>setup
#修改并配置IP地址
</code></pre><p>2.启动网卡</p>
<pre><code>vi /etc/sysconfig/network-scripts/ifcfg-eth0
#把 ONBOOT = no改为 ONBOOT = yes
service network restart
#重启网络服务 
</code></pre><p>3.修改UUID(如果这是一台克隆/复制出来的机子则必须进行这个步骤，否则可以省去)</p>
<pre><code>vi /etc/sysconfig/network-scripts/ifcfg-eth0
#删除MAC地址行
rm -rf /etc/udev/rules.d/70-persistent-net.rules
#删除网卡和MAC地址绑定文件
#重启动系统
</code></pre><p>4.设置虚拟机网络连接方式</p>
<ul>
<li><strong>桥接模式</strong>：通过物理机的真实网卡进行通信，若选此项，则虚拟机需要配置与物理机相同的网关，缺点是需要占用真实网段的一个IP地址。这种模式更适用于实验，因为这种模式不仅可以与你的物理机可以通信还可以与同一局域网的其他主机通信，还可以访问公网。</li>
<li><strong>NAT模式</strong>：在windows中（物理机中）是以VMware8虚拟网卡进行通信。这种模式只能与你自己的主机通信，不能与局域网的其他主机通信，但是可以通过物理的网卡访问公网。</li>
<li>仅主机模式：在windows中（物理机中）是以VMware1虚拟网卡进行通信。这种模式只能与你自己的主机通信，不能与局域网的其他主机通信，只能与自己的物理机通信，并且不能上公网。</li>
</ul>
<p>切记：在选择桥接模式之后，需要选择桥接的网卡（即需要确定虚拟机需要通过哪个真实网卡连接网络），一般的虚拟机都是自动桥接，但是这种方式真的跟不靠谱**，所以你需要自己选择，如果你是通过有线接入网络，则选择有线桥接，若是通过无线接入网络，则通过无线接入。</p>
<p>5.修改桥接网卡</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;IP地址配置&quot;&gt;&lt;a href=&quot;#IP地址配置&quot; class=&quot;headerlink&quot; title=&quot;IP地址配置&quot;&gt;&lt;/a&gt;IP地址配置&lt;/h2&gt;&lt;p&gt;DHCP服务器可以自动分配IP&lt;/p&gt;
&lt;h4 id=&quot;ifconfig命令临时配置IP地址&quot;&gt;&lt;a hre
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu 安装、卸载wine</title>
    <link href="http://yoursite.com/2018/05/01/Ubuntu-%E5%AE%89%E8%A3%85%E3%80%81%E5%8D%B8%E8%BD%BDwine/"/>
    <id>http://yoursite.com/2018/05/01/Ubuntu-安装、卸载wine/</id>
    <published>2018-05-01T08:17:58.000Z</published>
    <updated>2018-05-01T08:39:07.491Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><pre><code>sudo add-apt-repository ppa:wine/wine-builds
sudo apt-get update
sudo apt-get install --install-recommends wine-staging
sudo apt-get install winehq-staging
</code></pre><p><br></p>
<h3 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h3><pre><code>sudo apt purge wine
rm -r ~/.wine
sudo apt-get autoremove
#清理wine模拟运行的windows程序:
sudo rm -r /home/username/.local/share/applications
#清理残余的windows程序:
sudo rm -r /home/username/.config/menus/applications-merged/wine*
</code></pre><ul>
<li>apt-get remove 会删除软件包而保留软件的配置文件</li>
<li>apt-get purge 会同时清除软件包和软件的配置文件</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;sudo add-apt-repository ppa:wine/wine-builds
sudo apt-get upda
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux 常用配置文件</title>
    <link href="http://yoursite.com/2018/05/01/Linux-%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
    <id>http://yoursite.com/2018/05/01/Linux-常用配置文件/</id>
    <published>2018-05-01T08:06:02.000Z</published>
    <updated>2018-05-04T13:47:27.699Z</updated>
    
    <content type="html"><![CDATA[<p>apt 源相关文件、目录</p>
<pre><code>/var/lib/apt/lists 
#ubuntu软件更新的源服务器的地址
/etc/apt/sources.list
#*.list文件在单独文件中写入源的地址，通常用来安装第三方的软件
/etc/apt/sources.list.d
</code></pre><p>安装日志</p>
<pre><code>/root/install.log 
#记录安装系统软件包以及其文件信息
/root/install.log.syslog 
#记录安装过程留下来的事件记录
/root/anacona-ks.cfg 
#以kickstart配置文件的格式记录安装过程中设置的选项信息（当要安装多台服务器时，可以先装一台，然后利用/root/anaconda-ks.cfg可以进行批量安装）；
</code></pre><p>网络配置</p>
<pre><code>/etc/sysconfig/network-scripts/ifcfg-eth0
#网卡配置文件，IP/子网掩码/网关/DNS/ONBOOT
/etc/sysconfig/network
#设置主机名
/etc/resolv.conf
#DNS配置文件
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;apt 源相关文件、目录&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/var/lib/apt/lists 
#ubuntu软件更新的源服务器的地址
/etc/apt/sources.list
#*.list文件在单独文件中写入源的地址，通常用来安装第三方的软件
/etc/apt/sou
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux下无法使用add-apt-repository命令</title>
    <link href="http://yoursite.com/2018/05/01/Linux%E4%B8%8B%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8add-apt-repository%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2018/05/01/Linux下无法使用add-apt-repository命令/</id>
    <published>2018-05-01T07:59:11.000Z</published>
    <updated>2018-05-01T08:39:43.799Z</updated>
    
    <content type="html"><![CDATA[<p>Linux下无法使用add-apt-repository命令报错：<br><code>add-apt-repository command not found</code></p>
<p>解决办法：</p>
<pre><code>sudo apt-get install python-software-properties
sudo apt-get update
sudo apt install software-properties-common 
sudo apt-get update
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Linux下无法使用add-apt-repository命令报错：&lt;br&gt;&lt;code&gt;add-apt-repository command not found&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;解决办法：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install p
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux 安装JDK的两种方式</title>
    <link href="http://yoursite.com/2018/05/01/Linux-%E5%AE%89%E8%A3%85JDK%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E5%BC%8F/"/>
    <id>http://yoursite.com/2018/05/01/Linux-安装JDK的两种方式/</id>
    <published>2018-05-01T07:13:07.000Z</published>
    <updated>2018-05-01T07:59:55.765Z</updated>
    
    <content type="html"><![CDATA[<h3 id="使用PPA源安装"><a href="#使用PPA源安装" class="headerlink" title="使用PPA源安装"></a>使用PPA源安装</h3><pre><code>sudo add-apt-repository ppa:webupd8team/java
sudo apt-get update
sudo apt-get install oracle-java8-installer
sudo apt-get install oracle-java8-set-default
</code></pre><p>oracle-java8-set-default：将jdk8设置为默认的Java运行版本</p>
<p>默认的安装路径是在<code>/usr/lib/jvm/java-8-oracle</code>中</p>
<pre><code>echo $JAVA_HOME
</code></pre><p><br></p>
<h3 id="使用源码包安装"><a href="#使用源码包安装" class="headerlink" title="使用源码包安装"></a>使用源码包安装</h3><p>在<a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" rel="external">http://www.oracle.com/technetwork/java/javase/downloads/index.html</a><br>找需要的包下载</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">sudo tar zxvf ./jdk-8u171-linux-x64.tar.gz -C /usr/lib/jvm/jdk1.8.0_171</div><div class="line">sudo vim〜/ .bashrc</div><div class="line"></div><div class="line"><span class="meta">#</span>在文件的末尾追加下面行</div><div class="line">export JAVA_HOME=/usr/lib/jvm/jdk1.8.0_171  </div><div class="line">export JRE_HOME=$&#123;JAVA_HOME&#125;/jre</div><div class="line">export CLASSPATH=.:$&#123;JAVA_HOME&#125;/lib:$&#123;JRE_HOME&#125;/lib</div><div class="line">export PATH=$&#123;JAVA_HOME&#125;/bin:$PATH</div><div class="line"></div><div class="line"><span class="meta">#</span>使环境变量马上生效</div><div class="line">source ~/.bashrc</div><div class="line"></div><div class="line"><span class="meta">#</span>设置系统默认jdk 版本</div><div class="line">sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/ jdk1.8.0_144/bin/java 300</div><div class="line">sudo update-alternatives --install /usr/bin/javac javac /usr/lib/jvm/ jdk1.8.0_144/bin/javac 300</div><div class="line">sudo update-alternatives --install /usr/bin/jar jar /usr/lib/jvm/ jdk1.8.0_144/bin/jar 300</div><div class="line">sudo update-alternatives --install /usr/bin/javah javah /usr/lib/jvm/ jdk1.8.0_144/bin/javah 300</div><div class="line">sudo update-alternatives --install /usr/bin/javap javap /usr/lib/jvm/ jdk1.8.0_144/bin/javap 300</div><div class="line"></div><div class="line">sudo update-alternatives --config java</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;使用PPA源安装&quot;&gt;&lt;a href=&quot;#使用PPA源安装&quot; class=&quot;headerlink&quot; title=&quot;使用PPA源安装&quot;&gt;&lt;/a&gt;使用PPA源安装&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;sudo add-apt-repository ppa:webupd8tea
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux安装管理 脚本安装包</title>
    <link href="http://yoursite.com/2018/04/29/Linux%E5%AE%89%E8%A3%85%E7%AE%A1%E7%90%86-%E8%84%9A%E6%9C%AC%E5%AE%89%E8%A3%85%E5%8C%85/"/>
    <id>http://yoursite.com/2018/04/29/Linux安装管理-脚本安装包/</id>
    <published>2018-04-29T10:40:21.000Z</published>
    <updated>2018-04-29T11:06:13.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="脚本安装包：准备工作"><a href="#脚本安装包：准备工作" class="headerlink" title="脚本安装包：准备工作"></a>脚本安装包：准备工作</h3><p>1、本节以安装LNMP（<a href="http://lnmp.org/download.html）为例，所以需要先停止之前安装的apache和mysql服务（最好也将源码包安装的apache" target="_blank" rel="external">http://lnmp.org/download.html）为例，所以需要先停止之前安装的apache和mysql服务（最好也将源码包安装的apache</a> <code>/usr/local/apache2</code>删除） </p>
<p>2、保证yum源正常使用：可以使用<code>yum list</code>命令测试。（若是光盘yum源，记得挂载光盘）</p>
<p>3、关闭SELinux和防火墙：</p>
<ul>
<li>永久关闭SELinux的方法：编辑文件<code>/etc/selinux/config</code>，将<code>SELINUX=enforcing</code>改为<code>SELINUX=disabled</code>，然后重启系统即可。</li>
<li>永久关闭防火墙的方法：<code>chkconfig iptables off</code>，开启为：<code>chkconfig iptables on</code>；临时关闭防火墙的方法：<code>service iptables stop</code>，开启为：<code>service iptables start</code>。</li>
</ul>
<p><br></p>
<h3 id="脚本安装"><a href="#脚本安装" class="headerlink" title="脚本安装"></a>脚本安装</h3><pre><code>wget -c http://soft.vpser.net/lnmp.lnmp1.0-full.tar.gz &amp;&amp; tar zxvf lnmp1.0-full.tar.gz &amp;&amp; cd lnmp1.0-full &amp;&amp; ./centos.sh
</code></pre><p>脚本安装过程中，会将系统中已有的apache、mysql、php等卸载掉。</p>
<p>虚拟机中安装lnmp常常会卡在 starting php-fpm,真实环境中很少出现。其实安装已经完成，只需要杀掉php-fpm进程，再重新启动这个进程就好了 pkill -9 php-fpm : -9是强制杀死的意思，然后重新启动该进程【/etc/rc.d/init.d/php-fpm start】即可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;脚本安装包：准备工作&quot;&gt;&lt;a href=&quot;#脚本安装包：准备工作&quot; class=&quot;headerlink&quot; title=&quot;脚本安装包：准备工作&quot;&gt;&lt;/a&gt;脚本安装包：准备工作&lt;/h3&gt;&lt;p&gt;1、本节以安装LNMP（&lt;a href=&quot;http://lnmp.org/d
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
</feed>
