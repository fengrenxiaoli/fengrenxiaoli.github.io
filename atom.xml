<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>太阳落下</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-06-06T23:10:47.485Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>木鱼</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>reStructuredText常用语法</title>
    <link href="http://yoursite.com/post/1d81ed52.html"/>
    <id>http://yoursite.com/post/1d81ed52.html</id>
    <published>2018-06-06T02:32:15.000Z</published>
    <updated>2018-06-06T23:10:47.485Z</updated>
    
    <content type="html"><![CDATA[<p>reStructuredText是一种标记语言，和markdown类似，但是能够提供比markdown更丰富的样式</p>
<h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">==========</div><div class="line">一级标题</div><div class="line">==========</div><div class="line"></div><div class="line"></div><div class="line">二级标题</div><div class="line">==========</div><div class="line"></div><div class="line"></div><div class="line">三级标题</div><div class="line">----------</div><div class="line"></div><div class="line"></div><div class="line">四级标题</div><div class="line">^^^^^^^^^^^</div></pre></td></tr></table></figure>
<h2 id="字体样式"><a href="#字体样式" class="headerlink" title="字体样式"></a>字体样式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">*这里是强调内容*</div><div class="line"></div><div class="line">`这里是引用内容`</div><div class="line"></div><div class="line">**这里是粗体内容**</div><div class="line"></div><div class="line">``这里是等宽文本``</div><div class="line"></div><div class="line"></div><div class="line">上标</div><div class="line">E = mc\ :sup:`2`</div><div class="line"></div><div class="line">下标</div><div class="line">H\ :sub:`2`\ O</div></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">| 这里是段落</div><div class="line"></div><div class="line">  缩进的段落被视为引文。</div><div class="line"></div><div class="line">| 这里也是段落</div><div class="line"></div><div class="line">  缩进的段落被视为引文。</div><div class="line"></div><div class="line">| 这里还是段落</div><div class="line"></div><div class="line">  缩进的段落被视为引文。</div></pre></td></tr></table></figure>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">行内代码</div><div class="line">``echo &quot;Hello World!&quot;;``</div><div class="line"></div><div class="line">代码块</div><div class="line">在代码块的上一个段落后面加2个冒号，空一行后开始代码块，代码块要缩进</div><div class="line">::</div><div class="line"></div><div class="line">    hello world</div><div class="line">    hello world</div><div class="line">    hello world</div></pre></td></tr></table></figure>
<h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">下级列表需要有空格缩进</div><div class="line">无序列表</div><div class="line">- jj</div><div class="line">- kk</div><div class="line">- jj</div><div class="line"></div><div class="line">有序列表</div><div class="line">1. ll</div><div class="line">2. oo</div><div class="line">3. pp</div></pre></td></tr></table></figure>
<h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.. image:: https://help.github.com/assets/images/site/favicon.ico</div></pre></td></tr></table></figure>
<h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">外部引用</div><div class="line">这篇文章来自我的Github,请参考 reference_。</div><div class="line">.. _reference: https://github.com/SeayXu/</div><div class="line"></div><div class="line">`SeayXu &lt;https://github.com/SeayXu/&gt;`_</div></pre></td></tr></table></figure>
<h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line">简单表格</div><div class="line">=====  =====  ======</div><div class="line">输入          输出</div><div class="line">------------  ------</div><div class="line">A      B      A or B</div><div class="line">=====  =====  ======</div><div class="line">False  False  False</div><div class="line">True   False  True</div><div class="line">False  True   True</div><div class="line">True   True   True</div><div class="line">=====  =====  ======</div><div class="line"></div><div class="line"></div><div class="line">普通表格</div><div class="line">+------------------------+------------+----------+----------+</div><div class="line">| Header row, column 1   | Header 2   | Header 3 | Header 4 |</div><div class="line">| (header rows optional) |            |          |          |</div><div class="line">+========================+============+==========+==========+</div><div class="line">| body row 1, column 1   | column 2   | column 3 | column 4 |</div><div class="line">+------------------------+------------+----------+----------+</div><div class="line">| body row 2             | Cells may span columns.          |</div><div class="line">+------------------------+------------+---------------------+</div><div class="line">| body row 3             | Cells may  | - Table cells       |</div><div class="line">+------------------------+ span rows. | - contain           |</div><div class="line">| body row 4             |            | - body elements.    |</div><div class="line">+------------------------+------------+---------------------+</div><div class="line"></div><div class="line"></div><div class="line">CSV表格</div><div class="line">.. csv-table:: 表头</div><div class="line"> :header: &quot;Treat&quot;, &quot;Quantity&quot;, &quot;Description&quot;</div><div class="line"> :widths: 15, 10, 30</div><div class="line"></div><div class="line"> &quot;Albatross&quot;, 2.99, &quot;On a stick!&quot;</div><div class="line"> &quot;Crunchy Frog&quot;, 1.49, &quot;If we took the bones out, it wouldn&apos;t be</div><div class="line"> crunchy, now would it?&quot;</div><div class="line"> &quot;Gannet Ripple&quot;, 1.99, &quot;On a stick!&quot;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">列表表格</div><div class="line">.. list-table:: 表头</div><div class="line">  :widths: 15 10 30</div><div class="line">  :header-rows: 1</div><div class="line"></div><div class="line">  * - Treat</div><div class="line">    - Quantity</div><div class="line">    - Description</div><div class="line">  * - Albatross</div><div class="line">    - 2.99</div><div class="line">    - On a stick!</div><div class="line">  * - Crunchy Frog</div><div class="line">    - 1.49</div><div class="line">    - If we took the bones out, it wouldn&apos;t be</div><div class="line">      crunchy, now would it?</div><div class="line">  * - Gannet Ripple</div><div class="line">    - 1.99</div><div class="line">    - On a stick!</div></pre></td></tr></table></figure>
<p>表格可以使用插件<a href="https://macplay.github.io/posts/shi-yong-vim-zai-markdown-ji-rst-wen-dang-zhong-chuang-jian-biao-ge/" target="_blank" rel="external">https://macplay.github.io/posts/shi-yong-vim-zai-markdown-ji-rst-wen-dang-zhong-chuang-jian-biao-ge/</a></p>
<p>参考：</p>
<ul>
<li><a href="https://www.jianshu.com/p/f60e9be4781d" target="_blank" rel="external">https://www.jianshu.com/p/f60e9be4781d</a></li>
<li><a href="https://3vshej.cn/rstSyntax/index.html" target="_blank" rel="external">https://3vshej.cn/rstSyntax/index.html</a></li>
<li><a href="https://www.jianshu.com/p/9b8c2e10e5e9" target="_blank" rel="external">https://www.jianshu.com/p/9b8c2e10e5e9</a></li>
<li><a href="http://docutils-zh-cn.readthedocs.io/zh_CN/latest/ref/rst/restructuredtext.html" target="_blank" rel="external">http://docutils-zh-cn.readthedocs.io/zh_CN/latest/ref/rst/restructuredtext.html</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;reStructuredText是一种标记语言，和markdown类似，但是能够提供比markdown更丰富的样式&lt;/p&gt;
&lt;h2 id=&quot;标题&quot;&gt;&lt;a href=&quot;#标题&quot; class=&quot;headerlink&quot; title=&quot;标题&quot;&gt;&lt;/a&gt;标题&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;==========&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;一级标题&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;==========&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;二级标题&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;==========&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;三级标题&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;----------&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;四级标题&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;^^^^^^^^^^^&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;字体样式&quot;&gt;&lt;a href=&quot;#字体样式&quot; class=&quot;headerlink&quot; title=&quot;字体样式&quot;&gt;&lt;/a&gt;字体样式&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;*这里是强调内容*&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;`这里是引用内容`&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;**这里是粗体内容**&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;``这里是等宽文本``&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;上标&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;E = mc\ :sup:`2`&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;下标&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;H\ :sub:`2`\ O&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>GitLab+sphinx+Readthedocs</title>
    <link href="http://yoursite.com/post/89c53863.html"/>
    <id>http://yoursite.com/post/89c53863.html</id>
    <published>2018-06-06T01:54:05.000Z</published>
    <updated>2018-06-06T23:09:46.049Z</updated>
    
    <content type="html"><![CDATA[<p>利用GitLab、sphinx、Readthedocs可以制作文档和博客，利用这种方式制作出来的博客更像一本书，能够结构化展示文章，比较适合笔记类<br>Gitlab用来存储代码<br>sphinx用来写博客<br>Readthedocs用来展示</p>
<h2 id="安装-Sphinx"><a href="#安装-Sphinx" class="headerlink" title="安装 Sphinx"></a>安装 Sphinx</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install sphinx</div></pre></td></tr></table></figure>
<h2 id="创建工程"><a href="#创建工程" class="headerlink" title="创建工程"></a>创建工程</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mkdir mybook</div><div class="line">cd mybook</div><div class="line">sphinx-quickstart</div></pre></td></tr></table></figure>
<p>输入工程名、作者名、版本号，分离source和build目录<code>Separate source and build directories (y/N) [n]: y</code></p>
<p>build目录 运行make命令后，生成的文件都在这个目录里面<br>source目录 放置文档的源文件</p>
<a id="more"></a>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>改主题<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">html_theme = &apos;sphinx_rtd_theme&apos;</div></pre></td></tr></table></figure></p>
<h2 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h2><p>在gitlab上创建仓库</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">git init</div><div class="line">git add .</div><div class="line">git commit -m &quot;sphinx start&quot;</div><div class="line">git remote add origin https://github.com/[yourusename]/[yourrepository].git</div><div class="line">git push origin master</div></pre></td></tr></table></figure>
<h2 id="导入ReadtheDocs"><a href="#导入ReadtheDocs" class="headerlink" title="导入ReadtheDocs"></a>导入ReadtheDocs</h2><p>注册ReadtheDocs账号，因为直接用gitlab账号登录，所以没有设置Webhooks<br>从<a href="https://readthedocs.org/dashboard/import/" target="_blank" rel="external">https://readthedocs.org/dashboard/import/</a><br>导入git链接<br>在管理中设置Python 配置文件<code>source/conf.py</code>，Python interpreter<code>Cpython 3.x</code>，保存</p>
<h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><p>index.rst<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">.. toctree::</div><div class="line">   :maxdepth: 2</div><div class="line">   :caption: Contents:</div><div class="line"></div><div class="line">   linux/index</div><div class="line">   python/index</div></pre></td></tr></table></figure></p>
<p>python/index.rst<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">Python</div><div class="line">==================================</div><div class="line"></div><div class="line">.. toctree::</div><div class="line">   :maxdepth: 2</div><div class="line">   :caption: Contents:</div><div class="line">   :numbered:</div><div class="line"></div><div class="line">   变量</div><div class="line">   语句</div></pre></td></tr></table></figure></p>
<h2 id="本地查看"><a href="#本地查看" class="headerlink" title="本地查看"></a>本地查看</h2><p>命令行执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make html</div></pre></td></tr></table></figure></p>
<p>参考：<br><a href="https://www.jianshu.com/p/78e9e1b8553a" target="_blank" rel="external">https://www.jianshu.com/p/78e9e1b8553a</a><br><a href="http://abnerzhao.com/2017/10/14/quickstart-wiki/" target="_blank" rel="external">http://abnerzhao.com/2017/10/14/quickstart-wiki/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;利用GitLab、sphinx、Readthedocs可以制作文档和博客，利用这种方式制作出来的博客更像一本书，能够结构化展示文章，比较适合笔记类&lt;br&gt;Gitlab用来存储代码&lt;br&gt;sphinx用来写博客&lt;br&gt;Readthedocs用来展示&lt;/p&gt;
&lt;h2 id=&quot;安装-Sphinx&quot;&gt;&lt;a href=&quot;#安装-Sphinx&quot; class=&quot;headerlink&quot; title=&quot;安装 Sphinx&quot;&gt;&lt;/a&gt;安装 Sphinx&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;pip install sphinx&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;创建工程&quot;&gt;&lt;a href=&quot;#创建工程&quot; class=&quot;headerlink&quot; title=&quot;创建工程&quot;&gt;&lt;/a&gt;创建工程&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;mkdir mybook&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;cd mybook&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sphinx-quickstart&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输入工程名、作者名、版本号，分离source和build目录&lt;code&gt;Separate source and build directories (y/N) [n]: y&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;build目录 运行make命令后，生成的文件都在这个目录里面&lt;br&gt;source目录 放置文档的源文件&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>MySQL存储引擎</title>
    <link href="http://yoursite.com/post/4fa63392.html"/>
    <id>http://yoursite.com/post/4fa63392.html</id>
    <published>2018-06-04T06:16:53.000Z</published>
    <updated>2018-06-06T23:10:07.153Z</updated>
    
    <content type="html"><![CDATA[<p>MySQL可以将数据以不同的技术存储在文件（内存）中，这种技术就称为存储引擎，每种存数引擎使用不同的存储机制、索引技巧、锁定水平，最终提供广泛且不同的功能。</p>
<h2 id="并发处理"><a href="#并发处理" class="headerlink" title="并发处理"></a>并发处理</h2><h3 id="并发控制"><a href="#并发控制" class="headerlink" title="并发控制"></a>并发控制</h3><p>当多个连接对记录进行修改时保证数据的一致性和完整性。</p>
<h3 id="锁"><a href="#锁" class="headerlink" title="锁"></a>锁</h3><ul>
<li>共享锁(读锁)：在同一时间内，多个用户可读取同一个资源，读取过程中数据不会发生任何变化。</li>
<li>排他锁(写锁)：在任何时候只能有一个用户写入资源，当进行写锁时会阻塞其他的读锁或者写锁操作。</li>
</ul>
<h3 id="锁的力度-锁颗粒–锁定时的单位"><a href="#锁的力度-锁颗粒–锁定时的单位" class="headerlink" title="锁的力度(锁颗粒–锁定时的单位)"></a>锁的力度(锁颗粒–锁定时的单位)</h3><ul>
<li>表锁，是一种开销最小的锁策略。对表进行写锁，所有用户不能对该表的任何记录操作。</li>
<li>行锁，是一种开销最大的锁策略。并行性最大，可能对表的所有记录写锁，开销大。</li>
</ul>
<a id="more"></a>
<h2 id="事务处理"><a href="#事务处理" class="headerlink" title="事务处理"></a>事务处理</h2><h3 id="事务处理-1"><a href="#事务处理-1" class="headerlink" title="事务处理"></a>事务处理</h3><p>整个过程每一个单元全部完成才算事务处理成功，某一个单元失败事务就会回滚。</p>
<h3 id="主要作用"><a href="#主要作用" class="headerlink" title="主要作用"></a>主要作用</h3><p>保证数据库的完整性</p>
<h3 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h3><ul>
<li>原子性(Atomic)：一个事务（transaction）中的所有操作，要么全部完成，要么全部不完成，不会结束在中间某个环节。事务在执行过程中发生错误，会被恢复（Rollback）到事务开始前的状态，就像这个事务从来没有执行过一样。</li>
<li>一致性(Consistency)：在事务开始之前和事务结束以后，数据库的完整性没有被破坏。这表示写入的资料必须完全符合所有的预设规则，这包含资料的精确度、串联性以及后续数据库可以自发性地完成预定的工作。</li>
<li>隔离性(Isolation)：数据库允许多个并发事务同时对其数据进行读写和修改的能力，隔离性可以防止多个事务并发执行时由于交叉执行而导致数据的不一致。事务隔离分为不同级别，包括读未提交（Read uncommitted）、读提交（read committed）、可重复读（repeatable read）和串行化（Serializable）。</li>
<li>持久性(Durable)：事务处理结束后，对数据的修改就是永久的，即便系统故障也不会丢失。</li>
</ul>
<p>简称：ACID</p>
<h2 id="外键"><a href="#外键" class="headerlink" title="外键"></a>外键</h2><p>是保证数据一致性的策略</p>
<h2 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h2><p>是对数据表中一列或者多列的值进行排序的一种结构。<br>索引好比目录。<br>索引可以划分为：普通索引、唯一索引、全文索引、btree索引、hash索引。</p>
<h2 id="各种存储引擎的特点"><a href="#各种存储引擎的特点" class="headerlink" title="各种存储引擎的特点"></a>各种存储引擎的特点</h2><h2 id="MySQL支持的存储引擎"><a href="#MySQL支持的存储引擎" class="headerlink" title="MySQL支持的存储引擎"></a>MySQL支持的存储引擎</h2><p>MyISAM、InnoDB、Memory、CSV、Archive</p>
<p><img src="/img/IMG56.png" alt=""></p>
<p>MyISAM/InnoDB：最广泛<br>MyISAM：适用于事务的处理不多的情况。<br>InnoDB：适用于事务处理比较多，需要有外键支持的情况。</p>
<h2 id="设置存储引擎"><a href="#设置存储引擎" class="headerlink" title="设置存储引擎"></a>设置存储引擎</h2><ol>
<li><p>修改MySQL配置文件实现</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">default-storage-engine = engine_name</div></pre></td></tr></table></figure>
</li>
<li><p>创建数据表命令来实现</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE tbl_name(</div><div class="line">...</div><div class="line">) ENGINE = engine_name;</div></pre></td></tr></table></figure>
</li>
<li><p>修改数据表命令实现</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ALTER TABLE tbl_name ENGINE [=] engine_name;</div></pre></td></tr></table></figure></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;MySQL可以将数据以不同的技术存储在文件（内存）中，这种技术就称为存储引擎，每种存数引擎使用不同的存储机制、索引技巧、锁定水平，最终提供广泛且不同的功能。&lt;/p&gt;
&lt;h2 id=&quot;并发处理&quot;&gt;&lt;a href=&quot;#并发处理&quot; class=&quot;headerlink&quot; title=&quot;并发处理&quot;&gt;&lt;/a&gt;并发处理&lt;/h2&gt;&lt;h3 id=&quot;并发控制&quot;&gt;&lt;a href=&quot;#并发控制&quot; class=&quot;headerlink&quot; title=&quot;并发控制&quot;&gt;&lt;/a&gt;并发控制&lt;/h3&gt;&lt;p&gt;当多个连接对记录进行修改时保证数据的一致性和完整性。&lt;/p&gt;
&lt;h3 id=&quot;锁&quot;&gt;&lt;a href=&quot;#锁&quot; class=&quot;headerlink&quot; title=&quot;锁&quot;&gt;&lt;/a&gt;锁&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;共享锁(读锁)：在同一时间内，多个用户可读取同一个资源，读取过程中数据不会发生任何变化。&lt;/li&gt;
&lt;li&gt;排他锁(写锁)：在任何时候只能有一个用户写入资源，当进行写锁时会阻塞其他的读锁或者写锁操作。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;锁的力度-锁颗粒–锁定时的单位&quot;&gt;&lt;a href=&quot;#锁的力度-锁颗粒–锁定时的单位&quot; class=&quot;headerlink&quot; title=&quot;锁的力度(锁颗粒–锁定时的单位)&quot;&gt;&lt;/a&gt;锁的力度(锁颗粒–锁定时的单位)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;表锁，是一种开销最小的锁策略。对表进行写锁，所有用户不能对该表的任何记录操作。&lt;/li&gt;
&lt;li&gt;行锁，是一种开销最大的锁策略。并行性最大，可能对表的所有记录写锁，开销大。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL自定义函数</title>
    <link href="http://yoursite.com/post/ca4788ef.html"/>
    <id>http://yoursite.com/post/ca4788ef.html</id>
    <published>2018-06-04T05:03:17.000Z</published>
    <updated>2018-06-06T07:34:12.889Z</updated>
    
    <content type="html"><![CDATA[<h2 id="自定义函数"><a href="#自定义函数" class="headerlink" title="自定义函数"></a>自定义函数</h2><p>用户自定义函数(user-defined function, UDF)是一种对MySQL扩展的途径, 其用法与内置函数相同。 </p>
<h3 id="自定义函数的两个必要条件"><a href="#自定义函数的两个必要条件" class="headerlink" title="自定义函数的两个必要条件"></a>自定义函数的两个必要条件</h3><ol>
<li>参数：最多1024个任意类型的参数</li>
<li>返回值：任意类型</li>
</ol>
<p>函数可以返回任意类型的值，同样可以接受这些类型的参数；<br>函数的参数与返回值之间，没有必然的联系。</p>
<h3 id="创建自定义函数"><a href="#创建自定义函数" class="headerlink" title="创建自定义函数"></a>创建自定义函数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">CREATE FUNCTION function_name</div><div class="line">RETURNS</div><div class="line">&#123;STRING|INTEGER|REAL|DECIMAL&#125;</div><div class="line">routine_body</div></pre></td></tr></table></figure>
<p><code>routine_body</code>是函数体<br><a id="more"></a></p>
<h3 id="关于函数体"><a href="#关于函数体" class="headerlink" title="关于函数体"></a>关于函数体</h3><ol>
<li>函数体由合法的SQL语法构成;</li>
<li>函数体可以是简单的SELECT或INSERT语句;</li>
<li>函数体如果为复合结构则使用BEGIN…END语句；</li>
<li>复合结构可以包括声明，循环，控制结构。</li>
</ol>
<h3 id="创建不带参数的自定义函数"><a href="#创建不带参数的自定义函数" class="headerlink" title="创建不带参数的自定义函数"></a>创建不带参数的自定义函数</h3><p>创建日期时间自定义函数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">CREATE FUNCTION f1() </div><div class="line">RETURNS VARCHAR(30)</div><div class="line">RETURN DATE_FORMAT(NOW(),&apos;%Y年%m月%d日 %H点:%i分:%s秒&apos;);</div><div class="line"></div><div class="line">SELECT f1();</div></pre></td></tr></table></figure></p>
<h3 id="创建带有参数的自定义函数"><a href="#创建带有参数的自定义函数" class="headerlink" title="创建带有参数的自定义函数"></a>创建带有参数的自定义函数</h3><p>创建带参数的自定义函数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">CREATE FUNCTION f2(num1 SMALLINT UNSIGNED,num2 SMALLINT UNSIGNED)</div><div class="line">RETURNS FLOAT(10,2) UNSIGNED</div><div class="line">RETURN (num1+num2)/2;</div><div class="line"></div><div class="line">SELECT f2();        //报错</div><div class="line">SELECT f2(10,15);   //结果：12.5</div></pre></td></tr></table></figure></p>
<h3 id="创建具有复合结构函数体的自定义函数"><a href="#创建具有复合结构函数体的自定义函数" class="headerlink" title="创建具有复合结构函数体的自定义函数"></a>创建具有复合结构函数体的自定义函数</h3><p>修改分隔符：DELEMITER 分隔符<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">DELIMITER //  </div><div class="line">//将分隔符修改为 &apos;//&apos;</div></pre></td></tr></table></figure></p>
<p>当函数体内执行多条语句时，使用BEGIN…END语句；<br>当编写函数体内容的时候，使用 DELIMITER 关键字将分隔符;修改为别的，否则写到 ‘;’ 时会执行，导致函数编写失败。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">DELIMITER //</div><div class="line">CREATE FUNCTION ADD_USER(p_id SMALLINT,username VARCHAR(20))</div><div class="line">RETURNS INT UNSIGNED</div><div class="line">BEGIN</div><div class="line">INSERT user(p_id,username) VALUES(p_id,username);</div><div class="line">RETURN LAST_INSERT_ID();</div><div class="line">END</div><div class="line">//</div><div class="line"></div><div class="line">DELIMITER ;</div></pre></td></tr></table></figure>
<h3 id="删除函数"><a href="#删除函数" class="headerlink" title="删除函数"></a>删除函数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">DROP FUNCTION [IF EXISTS] function_name;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;自定义函数&quot;&gt;&lt;a href=&quot;#自定义函数&quot; class=&quot;headerlink&quot; title=&quot;自定义函数&quot;&gt;&lt;/a&gt;自定义函数&lt;/h2&gt;&lt;p&gt;用户自定义函数(user-defined function, UDF)是一种对MySQL扩展的途径, 其用法与内置函数相同。 &lt;/p&gt;
&lt;h3 id=&quot;自定义函数的两个必要条件&quot;&gt;&lt;a href=&quot;#自定义函数的两个必要条件&quot; class=&quot;headerlink&quot; title=&quot;自定义函数的两个必要条件&quot;&gt;&lt;/a&gt;自定义函数的两个必要条件&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;参数：最多1024个任意类型的参数&lt;/li&gt;
&lt;li&gt;返回值：任意类型&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;函数可以返回任意类型的值，同样可以接受这些类型的参数；&lt;br&gt;函数的参数与返回值之间，没有必然的联系。&lt;/p&gt;
&lt;h3 id=&quot;创建自定义函数&quot;&gt;&lt;a href=&quot;#创建自定义函数&quot; class=&quot;headerlink&quot; title=&quot;创建自定义函数&quot;&gt;&lt;/a&gt;创建自定义函数&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;CREATE FUNCTION function_name&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;RETURNS&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;STRING|INTEGER|REAL|DECIMAL&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;routine_body&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;routine_body&lt;/code&gt;是函数体&lt;br&gt;
    
    </summary>
    
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Hexo插入图片</title>
    <link href="http://yoursite.com/post/e01ea1fb.html"/>
    <id>http://yoursite.com/post/e01ea1fb.html</id>
    <published>2018-06-04T01:49:54.000Z</published>
    <updated>2018-06-06T23:10:15.609Z</updated>
    
    <content type="html"><![CDATA[<p>在写博客中添加图片是很正常的，这里列举了本人使用的两种方法</p>
<h2 id="本地引用"><a href="#本地引用" class="headerlink" title="本地引用"></a>本地引用</h2><p>当Hexo项目中只用到少量图片时，可以将图片统一放在source/images文件夹中，通过markdown语法访问它们。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">![](/images/image.jpg)</div></pre></td></tr></table></figure>
<p>要注意这是绝对路径</p>
<h2 id="CDN引用"><a href="#CDN引用" class="headerlink" title="CDN引用"></a>CDN引用</h2><p>将图片上传到一些免费的CDN服务中。上传图片后，会生成对应的url地址，将地址直接拿来引用即可<br>参考<a href="https://www.qiniu.com/" target="_blank" rel="external">七牛</a>、<a href="https://cloudinary.com/" target="_blank" rel="external">cloudinary</a></p>
<a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在写博客中添加图片是很正常的，这里列举了本人使用的两种方法&lt;/p&gt;
&lt;h2 id=&quot;本地引用&quot;&gt;&lt;a href=&quot;#本地引用&quot; class=&quot;headerlink&quot; title=&quot;本地引用&quot;&gt;&lt;/a&gt;本地引用&lt;/h2&gt;&lt;p&gt;当Hexo项目中只用到少量图片时，可以将图片统一放在source/images文件夹中，通过markdown语法访问它们。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;![](/images/image.jpg)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;要注意这是绝对路径&lt;/p&gt;
&lt;h2 id=&quot;CDN引用&quot;&gt;&lt;a href=&quot;#CDN引用&quot; class=&quot;headerlink&quot; title=&quot;CDN引用&quot;&gt;&lt;/a&gt;CDN引用&lt;/h2&gt;&lt;p&gt;将图片上传到一些免费的CDN服务中。上传图片后，会生成对应的url地址，将地址直接拿来引用即可&lt;br&gt;参考&lt;a href=&quot;https://www.qiniu.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;七牛&lt;/a&gt;、&lt;a href=&quot;https://cloudinary.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;cloudinary&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>MySQL子查询</title>
    <link href="http://yoursite.com/post/9da3e761.html"/>
    <id>http://yoursite.com/post/9da3e761.html</id>
    <published>2018-06-03T14:14:15.000Z</published>
    <updated>2018-06-04T01:48:21.530Z</updated>
    
    <content type="html"><![CDATA[<h2 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h2><p>子查询是指出现在其他SQL语句内的SELECT子句</p>
<ul>
<li>子查询嵌套在查询内部，且必须始终出现在<strong>圆括号内</strong>。</li>
<li>可以包含多个关键字或者条件，如<code>DISTINCT</code>、<code>GROUP BY</code>、<code>ORDER BY</code>、<code>LIMIT</code>、函数等</li>
<li>外层查询可以是：<code>SELECT</code>、<code>INSERT</code>、<code>UPDATE</code>、<code>SET</code>或<code>DO</code></li>
<li>返回值：标量、一行、一列或者子查询</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM t1 WHERE column1 = (SELECT column1 FROM t2);</div></pre></td></tr></table></figure>
<p><code>SELECT * FROM t1;</code>称为Outer Query/外查询/Outer Statement<br><code>SELECT column1 FROM t2;</code> 称为Sub Query/子查询</p>
<a id="more"></a>
<h3 id="使用比较运算符的子查询"><a href="#使用比较运算符的子查询" class="headerlink" title="使用比较运算符的子查询"></a>使用比较运算符的子查询</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">=、&gt;、&lt;、&gt;=、&lt;=、&lt;&gt;、!=、&lt;=&gt;</div></pre></td></tr></table></figure>
<p>语法结构<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">operand comparison_operator [ANY|SOME|ALL] subquery</div></pre></td></tr></table></figure></p>
<p>当子查询返回多个结果的时候就可以用到<code>ANY</code>、<code>SOME</code>、<code>ALL</code>修饰符的比较运算符</p>
<p>Any: &gt;Any 表示至少大于一个值，即大于最小值。<br>Any: <any 表示小于最大的那个值，即小于最大值="" all:="">All 表示大于每一个值。换句话说，它表示大于最大值<br>All: &lt;All 表示小于每一个值。换句话说，它表示小于最小值<br>ANY: =ANY 或者 SOME 都是等于他们本身</any></p>
<table>
<thead>
<tr>
<th></th>
<th>ANY</th>
<th>SOME</th>
<th>ALL</th>
</tr>
</thead>
<tbody>
<tr>
<td>&gt; &gt;=</td>
<td>最小值</td>
<td>最小值</td>
<td>最大值</td>
</tr>
<tr>
<td>&lt; &lt;=</td>
<td>最大值</td>
<td>最大值</td>
<td>最小值</td>
</tr>
<tr>
<td>=</td>
<td>任意值</td>
<td>任意值</td>
<td>–</td>
</tr>
<tr>
<td>&lt;&gt;  !=</td>
<td>–</td>
<td>–</td>
<td>任意值</td>
</tr>
</tbody>
</table>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">SELECT goods_id,goods_name,goods_price FROM tdb_goods WHERE goods_price&gt;=5636.36; </div><div class="line">//查询所有商品不小于平均价格的</div><div class="line"></div><div class="line">SELECT goods_id,goods_name,goods_price FROM tdb_goods </div><div class="line">WHERE goods_price&gt;=(</div><div class="line">    SELECT ROUND(AVG(goods_price),2) FROM tdb_goods);	</div><div class="line">//利用子查询来进行两者的结合查找</div><div class="line"></div><div class="line">SELECT goods_id,goods_name,goods_price FROM tdb_goods </div><div class="line">WHERE goods_price&gt;=ANY (</div><div class="line">    SELECT goods_price FROM tdb_goods </div><div class="line">    WHERE goods_cate=&apos;超级本&apos;);</div><div class="line"></div><div class="line">SELECT goods_id,goods_name,goods_price FROM tdb_goods </div><div class="line">WHERE goods_price&gt;=ALL (</div><div class="line">    SELECT goods_price FROM tdb_goods </div><div class="line">    WHERE goods_cate=&apos;超级本&apos;);</div><div class="line"></div><div class="line">SELECT goods_id,goods_name,goods_price FROM tdb_goods </div><div class="line">WHERE goods_price&gt;=SOME (</div><div class="line">    SELECT goods_price FROM tdb_goods </div><div class="line">    WHERE goods_cate=&apos;超级本&apos;);</div></pre></td></tr></table></figure>
<h3 id="使用-NOT-IN-的子查询"><a href="#使用-NOT-IN-的子查询" class="headerlink" title="使用[NOT] IN 的子查询"></a>使用[NOT] IN 的子查询</h3><p>语法结构<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">operand comparison_operator [NOT] &#123;IN|EXISTS&#125; (subquery)</div></pre></td></tr></table></figure></p>
<p>IN 相当于 =ANY 或 =SOME<br>NOT IN 相当于 !=ALL 或 &lt;&gt;ALL</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">SELECT goods_id,goods_name,goods_price FROM tdb_goods</div><div class="line">WHERE goods_price IN (</div><div class="line">    SELECT goods_price FROM tdb_goods </div><div class="line">    WHERE goods_cate = &apos;超级本&apos;);</div></pre></td></tr></table></figure>
<h3 id="使用-NOT-EXISTS-的子查询"><a href="#使用-NOT-EXISTS-的子查询" class="headerlink" title="使用[NOT] EXISTS 的子查询"></a>使用[NOT] EXISTS 的子查询</h3><p>如果子查询返任何行，EXISTS返true；反之，返false。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE IF NOT EXISTS tdb_goods_cates(</div><div class="line">cate_id SMALLINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,</div><div class="line">cate_name VARCHAR(40) NOT NULL</div><div class="line">);</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;子查询&quot;&gt;&lt;a href=&quot;#子查询&quot; class=&quot;headerlink&quot; title=&quot;子查询&quot;&gt;&lt;/a&gt;子查询&lt;/h2&gt;&lt;p&gt;子查询是指出现在其他SQL语句内的SELECT子句&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;子查询嵌套在查询内部，且必须始终出现在&lt;strong&gt;圆括号内&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;可以包含多个关键字或者条件，如&lt;code&gt;DISTINCT&lt;/code&gt;、&lt;code&gt;GROUP BY&lt;/code&gt;、&lt;code&gt;ORDER BY&lt;/code&gt;、&lt;code&gt;LIMIT&lt;/code&gt;、函数等&lt;/li&gt;
&lt;li&gt;外层查询可以是：&lt;code&gt;SELECT&lt;/code&gt;、&lt;code&gt;INSERT&lt;/code&gt;、&lt;code&gt;UPDATE&lt;/code&gt;、&lt;code&gt;SET&lt;/code&gt;或&lt;code&gt;DO&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;返回值：标量、一行、一列或者子查询&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;SELECT * FROM t1 WHERE column1 = (SELECT column1 FROM t2);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;SELECT * FROM t1;&lt;/code&gt;称为Outer Query/外查询/Outer Statement&lt;br&gt;&lt;code&gt;SELECT column1 FROM t2;&lt;/code&gt; 称为Sub Query/子查询&lt;/p&gt;
    
    </summary>
    
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL连接</title>
    <link href="http://yoursite.com/post/b63304bd.html"/>
    <id>http://yoursite.com/post/b63304bd.html</id>
    <published>2018-06-03T14:14:10.000Z</published>
    <updated>2018-06-06T23:10:30.909Z</updated>
    
    <content type="html"><![CDATA[<p>联合查询的效率比较高</p>
<h2 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h2><p>MySQL在SELECT语句、多表更新、多表删除语句中支持JOIN操作<br>语法结构<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">table_reference A</div><div class="line">&#123;[INNER|CROSS] JOIN | &#123;LEFT|RIGHT&#125; [OUTER] JOIN&#125;</div><div class="line">table_reference B</div><div class="line">ON condition_expr</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<h3 id="连接类型"><a href="#连接类型" class="headerlink" title="连接类型"></a>连接类型</h3><p><img src="/img/IMG54.jpg" alt=""></p>
<h4 id="内连接"><a href="#内连接" class="headerlink" title="内连接"></a>内连接</h4><p>在MySQL中，JOIN, CROSS JOIN 和 INNER JOIN 是等价的。<br>显示左表及右表符合连接条件的记录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">SELECT goods_id,goods_name,cate_name FROM tdb_goods </div><div class="line">INNER JOIN tdb_goods_cate </div><div class="line">ON tdb_goods.cate_id = tdb_goods_cate.cate_id;</div></pre></td></tr></table></figure></p>
<h4 id="外连接"><a href="#外连接" class="headerlink" title="外连接"></a>外连接</h4><p>左外连接：LEFT [OUTER] JOIN：显示左表的全部记录及右表符合连接条件的记录。<br>右外连接：RIGHT [OUTER] JOIN：显示右表的全部记录及左表符合连接条件的记录。</p>
<p>如果使用LEFT JOIN，左表中存在一条记录A，在右表中没有找到相应的记录，则在返回结果用会出现一条只有记录A中的相应字段内容，其他字段都为NULL在记录(RIGHT JOIN类似)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">//查询所有商品的详细信息(通过左外连接实现)   </div><div class="line">SELECT goods_id,goods_name,cate_name,brand_name,goods_price </div><div class="line">FROM tdb_goods AS g</div><div class="line">LEFT JOIN tdb_goods_cates AS c </div><div class="line">ON g.cate_id = c.cate_id;</div><div class="line">//LEFT JOIN tdb_goods_brands AS b ON g.brand_id = b.brand_id\G;</div><div class="line"></div><div class="line">//查询所有商品的详细信息(通过右外连接实现)   </div><div class="line">SELECT goods_id,goods_name,cate_name,brand_name,goods_price </div><div class="line">FROM tdb_goods AS g   </div><div class="line">RIGHT JOIN tdb_goods_cates AS c </div><div class="line">ON g.cate_id = c.cate_id;</div><div class="line">//RIGHT JOIN tdb_goods_brands AS b ON g.brand_id = b.brand_id\G;</div></pre></td></tr></table></figure>
<p>外链接 A LEFT JOIN B join_condition<br>数据表B的结果集依赖数据表A。<br>数据表A的结果集根据左连接条件依赖于所有数据表（B表除外）。<br>左外连接条件决定如何检索数据表B（在没有指定WHERE条件的情况下）。<br>如果数据表A的某条记录符合WHERE条件，但是在数据表B不存在符合连接条件的记录，将生成一个所有列为空的额外的B行。</p>
<h4 id="全连接"><a href="#全连接" class="headerlink" title="全连接"></a>全连接</h4><p>显示左表、右表两边中的所有行，即把左联结果表 + 右联结果表组合在一起，然后过滤掉重复的。</p>
<p>多表的连接跟两张表的连接一样<br>表的连接实质就是外键的逆向约束<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">SELECT goods_id,goods_name,b.cate_name,c.brand_name,goods_price</div><div class="line">FROM products AS a </div><div class="line">INNER JOIN products_cate AS b </div><div class="line">ON a.goods_cate = b.cate_id</div><div class="line">INNER JOIN products_brand AS c </div><div class="line">ON a.brand_name = c.brand_id;</div></pre></td></tr></table></figure></p>
<h3 id="数据表参照"><a href="#数据表参照" class="headerlink" title="数据表参照"></a>数据表参照</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">table_reference</div><div class="line">tbl_name [[AS] alias] | table_subquery [AS] alias</div></pre></td></tr></table></figure>
<p>数据表可以使用<code>tbl_name AS alias_name</code> 或 <code>tbl_name alias_name</code>赋予别名。<br><code>table_subquery</code>可以作为子查询使用在FROM子句中，这样的子查询必须为其赋予别名。</p>
<h3 id="连接条件"><a href="#连接条件" class="headerlink" title="连接条件"></a>连接条件</h3><p>使用ON关键字来设定连接条件，也可以使用WHERE来代替</p>
<p>通常使用ON关键字来设定连接条件<br>使用WHERE关键字来进行结果集记录的过滤</p>
<h3 id="自身连接-–-无限分类"><a href="#自身连接-–-无限分类" class="headerlink" title="自身连接 – 无限分类"></a>自身连接 – 无限分类</h3><p>自身连接：同一个数据表对其自身进行连接</p>
<p>对于常见的分类，比如商城中的书籍&gt;&gt;文学&gt;&gt;小说，并不是使用多个表，而是使用一个表来进行联合查询</p>
<p>在同一张表中既有父类，又有子类。<br>通过对同一张数据表的自身连接来进行查询，需要对表标识别名。<br>做自身连接的话一定要起别名，以区分是子表还是父表</p>
<p>表的结构是这样的，使用parent_id表示父类目的id<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE tdb_goods_types(</div><div class="line">type_id SMALLINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,</div><div class="line">type_name VARCHAR(20) NOT NULL,</div><div class="line">parent_id SMALLINT UNSIGNED NOT NULL DEFAULT 0</div><div class="line">);</div></pre></td></tr></table></figure></p>
<p>查找所有分类及其父类<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">SELECT s.type_id ,s.type_name,p.type_name </div><div class="line">FROM tdb_goods_types s </div><div class="line">LEFT JOIN tdb_goods_types p </div><div class="line">ON s.parent_id=p.type_id;</div></pre></td></tr></table></figure></p>
<p>查找所有分类及其子类<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">SELECT p.type_id ,p.type_name,s.type_name </div><div class="line">FROM tdb_goods_types p </div><div class="line">LEFT JOIN tdb_goods_types s </div><div class="line">ON p.type_id=s.parent_id;</div></pre></td></tr></table></figure></p>
<p>查找所有分类及其子类的数目<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">SELECT p.type_id ,p.type_name,COUNT(s.type_name) </div><div class="line">FROM tdb_goods_types p </div><div class="line">LEFT JOIN tdb_goods_types s </div><div class="line">ON p.type_id=s.parent_id</div><div class="line">GROUP BY p.type_name </div><div class="line">ORDER BY p.type_id;</div></pre></td></tr></table></figure></p>
<p>补充：</p>
<ul>
<li><a href="https://www.jianshu.com/p/c4c43f32b66f" target="_blank" rel="external">https://www.jianshu.com/p/c4c43f32b66f</a></li>
<li><a href="http://wxb.github.io/2016/12/15/MySQL%E4%B8%AD%E7%9A%84%E5%90%84%E7%A7%8Djoin.html" target="_blank" rel="external">http://wxb.github.io/2016/12/15/MySQL%E4%B8%AD%E7%9A%84%E5%90%84%E7%A7%8Djoin.html</a></li>
<li><a href="http://www.zsythink.net/archives/1105" target="_blank" rel="external">http://www.zsythink.net/archives/1105</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;联合查询的效率比较高&lt;/p&gt;
&lt;h2 id=&quot;连接&quot;&gt;&lt;a href=&quot;#连接&quot; class=&quot;headerlink&quot; title=&quot;连接&quot;&gt;&lt;/a&gt;连接&lt;/h2&gt;&lt;p&gt;MySQL在SELECT语句、多表更新、多表删除语句中支持JOIN操作&lt;br&gt;语法结构&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;table_reference A&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;[INNER|CROSS] JOIN | &amp;#123;LEFT|RIGHT&amp;#125; [OUTER] JOIN&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;table_reference B&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ON condition_expr&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL函数</title>
    <link href="http://yoursite.com/post/ed90cb85.html"/>
    <id>http://yoursite.com/post/ed90cb85.html</id>
    <published>2018-06-03T14:14:04.000Z</published>
    <updated>2018-06-04T05:02:04.225Z</updated>
    
    <content type="html"><![CDATA[<h2 id="字符函数"><a href="#字符函数" class="headerlink" title="字符函数"></a>字符函数</h2><table>
<thead>
<tr>
<th>函数名称</th>
<th>描述</th>
<th>举例</th>
<th>结果</th>
</tr>
</thead>
<tbody>
<tr>
<td>CONCAT()</td>
<td>字符连接</td>
<td>SELECT CONCAT(‘a’,’-‘,’b’);</td>
<td>a-b</td>
</tr>
<tr>
<td>CONCAT_WS()</td>
<td>使用指定的分隔符进行字符连接</td>
<td>SELECT CONCAT_WS(‘</td>
<td>‘,’A’,’B’,’C’);</td>
<td>A</td>
<td>B</td>
<td>C</td>
</tr>
<tr>
<td>FORMAT()</td>
<td>数字格式化</td>
<td>SELECT FORMAT(12560.78,1);</td>
<td>12,560.8</td>
</tr>
<tr>
<td>LOWER()</td>
<td>转换成小写字母</td>
<td></td>
<td></td>
</tr>
<tr>
<td>UPPER()</td>
<td>转换成大写字母</td>
<td></td>
<td></td>
</tr>
<tr>
<td>LEFT()</td>
<td>获取左侧字符</td>
<td>SELECT LEFT(‘mysql’,2);</td>
<td>my</td>
</tr>
<tr>
<td>RIGHT()</td>
<td>获取右侧字符</td>
<td></td>
<td></td>
</tr>
<tr>
<td>LTRIM()</td>
<td>删除前导空格(=LEFT TRIM())</td>
<td></td>
<td></td>
</tr>
<tr>
<td>RTRIM()</td>
<td>删除后续空格</td>
<td></td>
<td></td>
</tr>
<tr>
<td>TRIM()</td>
<td>删除前后两边的空格，还可以删除指定的前导和后续的字符,不能删除中间的字符</td>
<td>SELECT TRIM(LEADING’?’,’??MYSQL????’);<br> SELECT TRIM(TRAILING’?’,’??MYSQL????’);<br> SELECT TRIM(BOTH’?’,’??MYSQL???’);</td>
<td>MYSQL????<br>  ??MYSQL<br> MYSQL</td>
</tr>
<tr>
<td>REPLACE()</td>
<td>替换字符</td>
<td>SELECT REPLACE(‘??MYSQL???’,’?’,’-‘);</td>
<td>–MYSQL—</td>
</tr>
<tr>
<td>SUBSTRING(string，offset，length)</td>
<td>截取字符串</td>
<td>SELECT SUBSTRING(‘MYSQL’,2,3);</td>
<td>SQL</td>
</tr>
<tr>
<td>[NOT]LIKE</td>
<td>模糊匹配   (%)：代表任意个字符，0个或多个 <br>(_)：代表任意一个字符，只有一个</td>
<td>SELECT name FROM test WHERE name LIKE’%O%’; <br> SELECT name FROM test WHERE name LIKE’%1%%’ ESCAPE’1’;</td>
<td>name 中带‘O’的name<br>  中间带% 的匹配name</td>
</tr>
<tr>
<td>LEAGTH()</td>
<td>获取字符串长度</td>
<td></td>
</tr>
</tbody>
</table>
<p><br></p>
<h2 id="数值运算符与函数"><a href="#数值运算符与函数" class="headerlink" title="数值运算符与函数"></a>数值运算符与函数</h2><table>
<thead>
<tr>
<th>函数名称</th>
<th>描述</th>
<th>举例</th>
<th>结果</th>
</tr>
</thead>
<tbody>
<tr>
<td>CEIL(数值)</td>
<td>向上取整</td>
<td>SELECT CEIL(3.01);</td>
<td>4</td>
</tr>
<tr>
<td>FLOOR(数值)</td>
<td>向下取整</td>
<td>SELECT FLOOR(3.99);</td>
<td>3</td>
</tr>
<tr>
<td>DIV</td>
<td>整数除法</td>
<td>SELECT 3 DIV 4;</td>
<td>0</td>
</tr>
<tr>
<td>MOD</td>
<td>取余，可以用%号代替</td>
<td>SELECT 4 MOD 3; <br>SELECT 5.3 MOD 3;</td>
<td>1<br>2.3</td>
</tr>
<tr>
<td>POWER(数值,数值)</td>
<td>幂运算</td>
<td>SELECT POWER(3,3);</td>
<td>27</td>
</tr>
<tr>
<td>ROUND(数值,小数的位数)</td>
<td>四舍五入</td>
<td>ROUND(3.1415926,4)</td>
<td>3.142</td>
</tr>
<tr>
<td>TRUNCATE(数值，截取位数)</td>
<td>截断（不四舍五入）</td>
<td>SELECT TRUNCATE(123.89,1)<br> SELECT TRUNCATE(125.68,-1);</td>
<td>123.8<br>120</td>
</tr>
</tbody>
</table>
<p><br></p>
<h2 id="比较运算符与函数"><a href="#比较运算符与函数" class="headerlink" title="比较运算符与函数"></a>比较运算符与函数</h2><table>
<thead>
<tr>
<th>函数名称</th>
<th>描述</th>
<th>举例</th>
<th>结果</th>
</tr>
</thead>
<tbody>
<tr>
<td>[NOT]BETWEEN…AND…</td>
<td>[不]在范围之间，1为是，0为否</td>
<td>15 BETWEEND 1 AND 20<br>15 NOT BETWEEND 1 AND 20</td>
<td>1<br>0</td>
</tr>
<tr>
<td>[NOT]IN()</td>
<td>[不]在列出值范围内</td>
<td>10 IN(5,10,15)</td>
<td>1</td>
</tr>
<tr>
<td>IS [NOT] NULL</td>
<td>[不]为空</td>
<td>NULL IS NULL  <br>  ‘’ IS NULL</td>
<td>1<br>0</td>
</tr>
</tbody>
</table>
<p><br></p>
<h2 id="日期时间函数"><a href="#日期时间函数" class="headerlink" title="日期时间函数"></a>日期时间函数</h2><table>
<thead>
<tr>
<th>函数名称</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>NOW()</td>
<td>当前时间 含日期时间</td>
</tr>
<tr>
<td>CURDATE()</td>
<td>当前日期 只有日期</td>
</tr>
<tr>
<td>CURTIME()</td>
<td>当前时间 值有时间</td>
</tr>
<tr>
<td>DATE_ADD()</td>
<td>时间增减或减少</td>
</tr>
<tr>
<td>DATEDIFF()</td>
<td>日期差值</td>
</tr>
<tr>
<td>DATE_FORMAT()</td>
<td>日期格式化</td>
</tr>
</tbody>
</table>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">SELECT DATE_ADD(&apos;2014-3-12&apos;,INTERVAL 365 DAY); </div><div class="line">2015-3-12 </div><div class="line">//在原有给定的时间上增加365天 </div><div class="line">//INTERVAL增加可以增加负值 单位 year,month,week,day</div><div class="line"></div><div class="line">SELECT DATEDIFF(&apos;2014-1-1&apos;,&apos;2015-1-1&apos;);</div><div class="line">-365 </div><div class="line">//时间差值计算 单位为日 前面时间减去后面时间</div><div class="line"></div><div class="line">SELECT DATE_FORMAT(&apos;2014-3-2&apos;,&apos;%m/%d/%d&apos;); </div><div class="line">03/02/2014</div><div class="line">//日期格式转换</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="信息函数"><a href="#信息函数" class="headerlink" title="信息函数"></a>信息函数</h2><table>
<thead>
<tr>
<th>函数名称</th>
<th>描述</th>
<th>举例</th>
<th>结果</th>
</tr>
</thead>
<tbody>
<tr>
<td>CONNECTION_ID()</td>
<td>连接ID</td>
<td>SELECT CONNECTION_ID();</td>
<td>SELECT CONNECTION_ID();</td>
<td>3</td>
</tr>
<tr>
<td>SELECT DATABASE()</td>
<td>当前数据库</td>
<td>SELECT DATABASE();</td>
<td>users</td>
</tr>
<tr>
<td>LAST_INSERT_ID();</td>
<td>最后插入记录的 ID 号</td>
<td>SELECT LAST_INSERT_ID();</td>
<td>如果是一次insert中插入的是多条记录，得到的是多条中的第一条（而不是最后一条！）</td>
</tr>
<tr>
<td>USER()</td>
<td>当前用户</td>
<td>SELECT USER();</td>
<td>root@localhost</td>
</tr>
<tr>
<td>VERSION();</td>
<td>版本的信息</td>
<td>SELECT VERSION();</td>
<td>5.7.21</td>
</tr>
</tbody>
</table>
<p><br></p>
<h2 id="聚合函数"><a href="#聚合函数" class="headerlink" title="聚合函数"></a>聚合函数</h2><table>
<thead>
<tr>
<th>函数名称</th>
<th>描述</th>
<th>举例</th>
</tr>
</thead>
<tbody>
<tr>
<td>AVG()</td>
<td>平均值</td>
<td>SELECT ROUND(AVG(goods_price),2) AS avg_price FROM tdb_goods;</td>
</tr>
<tr>
<td>COUNT()</td>
<td>计数</td>
<td>SELECT COUNT(goods_id) as counts FROM tdb_goods;</td>
</tr>
<tr>
<td>MAX()</td>
<td>最大值</td>
<td>SELECT MAX(goods_price) as counts FROM tdb_goods;</td>
</tr>
<tr>
<td>MIN()</td>
<td>最小值</td>
<td>SELECT MIN(goods_price) as counts FROM tdb_goods;</td>
</tr>
<tr>
<td>SUM()</td>
<td>求和</td>
<td>SELECT SUM(goods_price) as counts FROM tdb_goods;</td>
</tr>
</tbody>
</table>
<p><br></p>
<h2 id="加密函数"><a href="#加密函数" class="headerlink" title="加密函数"></a>加密函数</h2><table>
<thead>
<tr>
<th>函数名称</th>
<th>描述</th>
<th>举例</th>
<th>结果</th>
</tr>
</thead>
<tbody>
<tr>
<td>MD5()</td>
<td>信息摘要算法，为以后的Web页面做准备，尽量使用MD5()</td>
<td>SELECT MD5(‘admin’);</td>
<td>21232f297a57a5a743894a0e4a801fc3</td>
</tr>
<tr>
<td>PASSWORD()</td>
<td>密码算法通过PASSWORD()修改(重要用于MYSQL数据库)当前用户和其他用户的密码，修改客户端自己的密码</td>
<td>SELECT PASSWORD(‘admin’); <br>SET PASSWORD=PASSWORD(‘dimitar’);</td>
<td>*4ACFE3202A5FF5CF467898FC58AAB1D615029441 <br>把密码修改成dimitar</td>
</tr>
</tbody>
</table>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;字符函数&quot;&gt;&lt;a href=&quot;#字符函数&quot; class=&quot;headerlink&quot; title=&quot;字符函数&quot;&gt;&lt;/a&gt;字符函数&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;函数名称&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;th&gt;举例&lt;/th&gt;
&lt;th&gt;结果
    
    </summary>
    
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL存储过程</title>
    <link href="http://yoursite.com/post/392b408.html"/>
    <id>http://yoursite.com/post/392b408.html</id>
    <published>2018-06-03T14:13:52.000Z</published>
    <updated>2018-06-04T05:46:44.446Z</updated>
    
    <content type="html"><![CDATA[<h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>存储过程是SQL语句与控制语句的预编译集合，以一个名称存储作为一个单元处理</p>
<p><img src="/img/IMG55.png" alt=""></p>
<p>输入SQL命令，MySQL引擎对命令进行分析，查看输入的语法是否正确，如果正确，再进行编译，编译成MySQL引擎可识别的命令，最后再进行执行，并将执行结果返回给客户端。</p>
<p>如果省略了语法分析和编译的阶段，则效率可提高。</p>
<p>存储过程：是SQL语句和控制语句的预编译集合，以一个名称存储并作为一个单元处理（类似函数）。存储过程存储在数据库内，可以由应用程序调用执行，而且允许用户申明变量以及进行流程控制。存储过程可以接受输入类型的参数和输出类型的参数，并且可以存在多个返回值。只在第一次调用时进行语法分析和编译，以后的调用直接调用编译的结果，效率大大提高。<br><a id="more"></a></p>
<h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ol>
<li>增强SQL语句的功能和灵活性：可以通过控制语句对流程进行控制和判断</li>
<li>实现较快的执行速度：客户端第一次调用存储过程时，MySQL引擎会对其进行语法分析、编译等操作，然后将编译结果存储到内存中，所以第一次和之前的效率一样，然而以后会直接调用内存中的编译结果，效率提高</li>
<li>减少网络流量：例如删除一个记录，我们原本要输入DELETE FROM xx WHERE …; 要传输的字符较多，如果写成存储过程，就只要调用存储过程的名字和相应参数就行，传输的字符数量较少，所以减少了网络流量。</li>
</ol>
<h2 id="创建储存过程"><a href="#创建储存过程" class="headerlink" title="创建储存过程"></a>创建储存过程</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">CREATE</div><div class="line">[DEFINER = &#123;user|CURRENT_USER&#125;]</div><div class="line">PROCEDURE sp_name ([proc_parameter[,...]]) //可以带0到多个参数</div><div class="line">[characteristic ...] routine_body</div></pre></td></tr></table></figure>
<p>其中参数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">proc_parameter:</div><div class="line">[IN | OUT | INOUT] param_name type</div></pre></td></tr></table></figure></p>
<p>IN, 表示该参数的值必须在调用存储过程时指定<br>OUT, 表示该参数的值可以被存储过程改变，并且可以返回<br>INOUT, 表示该参数的值调用时指定，并且可以被改变和返回</p>
<h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">COMMENT &apos;string&apos;</div><div class="line">| &#123;CONTAINS SQL|NO SQL|READS SQL DATA|MODIFIES SQL DATA</div><div class="line">| SQL SECURITY&#123;DEFINER|INVOKER&#125;</div></pre></td></tr></table></figure>
<p>COMMENT:            注释<br>CONTAINS SQL:       包含SQL语句, 但不包含读或写数据的语句<br>NO SQL:             不包含SQL语句<br>READS SQL DATA:     包含读数据的语句<br>MODIFIES SQL DATA:  包含写数据的语句<br>SQL SECURITY {DEFINER|INVOKER}  指明谁有权限来执行</p>
<h2 id="过程体"><a href="#过程体" class="headerlink" title="过程体"></a>过程体</h2><ul>
<li>过程体由合法的SQL语句构成;</li>
<li>过程体可以是任意SQL语句;</li>
<li>过程体如果为复合结构则使用BEGIN…END语句</li>
<li>复合结构可以使用条件、循环等控制语句</li>
</ul>
<h2 id="创建无参的存储过程"><a href="#创建无参的存储过程" class="headerlink" title="创建无参的存储过程"></a>创建无参的存储过程</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">CREATE PROCEDURE sp1() SELECT VERSION(); //创建</div><div class="line">CALL sp1; //调用</div><div class="line">CALL sp1();</div></pre></td></tr></table></figure>
<h2 id="创建带IN类型参数的存储过程"><a href="#创建带IN类型参数的存储过程" class="headerlink" title="创建带IN类型参数的存储过程"></a>创建带IN类型参数的存储过程</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">//若带的参数与数据表中的字段一致，则删除整个数据表。</div><div class="line">DELIMITER //</div><div class="line">CREATE PROCEDURE removeUserById(IN p_id INT UNSIGNED)</div><div class="line">BEGIN </div><div class="line">DELETE FROM users WHERE id = p_id;</div><div class="line">END</div><div class="line">//</div><div class="line">DELIMITER ;</div><div class="line"></div><div class="line">SELECT * FROM users;</div><div class="line">CALL removeUserById(22);</div><div class="line">SELECT * FROM users WHERE id = 22;</div></pre></td></tr></table></figure>
<h2 id="创建带IN-OUT类型参数的存储过程"><a href="#创建带IN-OUT类型参数的存储过程" class="headerlink" title="创建带IN OUT类型参数的存储过程"></a>创建带IN OUT类型参数的存储过程</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">DELIMITER //</div><div class="line">CREATE PROCEDURE removeUserAndReturnUserNums(IN p_id INT UNSIGNED,OUT userNums INT UNSIGNED)</div><div class="line">BEGIN</div><div class="line">DELETE FROM users WHERE id=p_id;</div><div class="line">SELECT COUNT(id) FROM users INTO userNums; </div><div class="line">END</div><div class="line">//</div><div class="line">DELIMITER ;</div><div class="line">CALL removerUserAndReturnUserName(10,@nums); </div><div class="line">SELECT @nums; </div><div class="line">SET @i = 7;</div></pre></td></tr></table></figure>
<p>INTO将SELECT语句结果返回给userNums变量<br>通过@或SET设置的变量称为用户变量<br>@nums 所代表的就是用户变量，可用 SELECT @nums 输出</p>
<p>局部变量与用户变量的区别<br>用 DECLARE 声明的变量是局部变量，局部变量只能存在于 BEGIN…END 之间，<br>且声明时必须置于 BEGIN…END 的第一行。而通过 SELECT…INTO…/SET @id = 07<br>设置的变量称用户变量，只能存在于当前用户所使用的客户端有效。</p>
<h2 id="创建带有多个OUT类型参数的存储过程"><a href="#创建带有多个OUT类型参数的存储过程" class="headerlink" title="创建带有多个OUT类型参数的存储过程"></a>创建带有多个OUT类型参数的存储过程</h2><h3 id="明确OUT类型的参数的定义与作用"><a href="#明确OUT类型的参数的定义与作用" class="headerlink" title="明确OUT类型的参数的定义与作用"></a>明确OUT类型的参数的定义与作用</h3><p>OUT类型参数，表示在调用存储过程时，值可被存储过程改变，并且返回一个值。通常变量用“@”符号开头的变量，在BEGIN和END之中的变量是局部变量，在调用存储过程时写入的变量是“用户变量”。比如有一个存储过程的名称叫做“addUser()”，调用时addUser(@sum),sum就是用户变量。</p>
<h3 id="ROW-COUNT-函数"><a href="#ROW-COUNT-函数" class="headerlink" title="ROW_COUNT()函数"></a>ROW_COUNT()函数</h3><p>相当于PHP的MySQL函数库中的mysql_affected_rows()数作用相同，计算增删改查的个数总和。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">DELIMITER //</div><div class="line">CREATE PROCEDURE removeUserByAgeAndReturnInfos(</div><div class="line">IN p_age SMALLINT UNSIGNED,</div><div class="line">OUT deleteUsers SMALLINT UNSIGNED,</div><div class="line">OUT userCounts SMALLINT UNSIGNED)</div><div class="line">BEGIN</div><div class="line">DELETE FROM users WHERE age=p_age;</div><div class="line">SELECT ROW_COUNT() INTO deleteUsers; #返回被增删改查的记录总数</div><div class="line">SELECT COUNT(id) FROM users INTO userCounts;</div><div class="line">END</div><div class="line">//</div><div class="line">DELIMITER ;</div><div class="line">CALL removeUserByAgeAndReturnInfos(20,@a,@b);</div><div class="line">SELECT @a,@b; #a是删除的记录数，b是剩余的记录数</div></pre></td></tr></table></figure>
<h2 id="修改存储过程"><a href="#修改存储过程" class="headerlink" title="修改存储过程"></a>修改存储过程</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ALTER PROCEDURE sp_name [characteristic]</div><div class="line">COMMENT &apos;string&apos;</div><div class="line">|&#123;CONTAINS SQL|NO SQL|READS SQL DATA|MODIFIES SQL DATA&#125;</div><div class="line">|SQL SECURITY&#123;DEFINER|INVOKER&#125;</div></pre></td></tr></table></figure>
<h2 id="调用存储过程"><a href="#调用存储过程" class="headerlink" title="调用存储过程"></a>调用存储过程</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">CALL sp_name([parameter[,...]]) </div><div class="line">//带参数的存储过程的调用</div><div class="line">CALL sp_name[()] </div><div class="line">//不带参数的存储过程调用</div></pre></td></tr></table></figure>
<h2 id="删除存储过程"><a href="#删除存储过程" class="headerlink" title="删除存储过程"></a>删除存储过程</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">DROP PROCEDURE [IF EXISTS] sp_name;</div><div class="line"></div><div class="line">DROP PROCEDURE removeUserById;</div></pre></td></tr></table></figure>
<h2 id="储存过程与自定义函数的区别："><a href="#储存过程与自定义函数的区别：" class="headerlink" title="储存过程与自定义函数的区别："></a>储存过程与自定义函数的区别：</h2><ul>
<li>储存过程实现的功能要复杂一些；而函数的针对性更强。</li>
<li>储存过程可以返回多个值；函数只能有一个返回值。</li>
<li>储存过程一般独立的来执行；而函数可以作为其他SQL语句组成部分来出现。</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;定义&quot;&gt;&lt;a href=&quot;#定义&quot; class=&quot;headerlink&quot; title=&quot;定义&quot;&gt;&lt;/a&gt;定义&lt;/h2&gt;&lt;p&gt;存储过程是SQL语句与控制语句的预编译集合，以一个名称存储作为一个单元处理&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/IMG55.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;输入SQL命令，MySQL引擎对命令进行分析，查看输入的语法是否正确，如果正确，再进行编译，编译成MySQL引擎可识别的命令，最后再进行执行，并将执行结果返回给客户端。&lt;/p&gt;
&lt;p&gt;如果省略了语法分析和编译的阶段，则效率可提高。&lt;/p&gt;
&lt;p&gt;存储过程：是SQL语句和控制语句的预编译集合，以一个名称存储并作为一个单元处理（类似函数）。存储过程存储在数据库内，可以由应用程序调用执行，而且允许用户申明变量以及进行流程控制。存储过程可以接受输入类型的参数和输出类型的参数，并且可以存在多个返回值。只在第一次调用时进行语法分析和编译，以后的调用直接调用编译的结果，效率大大提高。&lt;br&gt;
    
    </summary>
    
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL记录操作</title>
    <link href="http://yoursite.com/post/2aaa8b1b.html"/>
    <id>http://yoursite.com/post/2aaa8b1b.html</id>
    <published>2018-06-03T02:13:18.000Z</published>
    <updated>2018-06-04T03:54:21.546Z</updated>
    
    <content type="html"><![CDATA[<h2 id="insert-插入记录"><a href="#insert-插入记录" class="headerlink" title="insert 插入记录"></a>insert 插入记录</h2><h3 id="INSERT…VALUES"><a href="#INSERT…VALUES" class="headerlink" title="INSERT…VALUES"></a>INSERT…VALUES</h3><p>比较常用，一次性插入多条记录，可输入表达式甚至是函数。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">INSERT [INTO] table_name [(column_name,...)] </div><div class="line">&#123;VALUES|VALUE&#125; (&#123;expr|DEFAULT&#125;,...),(...),...;</div></pre></td></tr></table></figure></p>
<p>expr 表示表达式<br>对于自动编号的字段，插入<code>NULL</code>或<code>DEFAULT</code>系统将自动依次递增编号；<br>对于有默认约束的字段，可以插入<code>DEFAULT</code>表示使用默认值；<br>列值可传入数值、表达式或函数，如密码可以用md5()函数进行加密（如md5(‘123’)）；<br>可同时插入多条记录，多条记录括号间用逗号<code>,</code>隔开</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">INSERT test VALUES(NULL,&apos;Tom&apos;);</div><div class="line">//插入单条记录</div><div class="line"></div><div class="line">INSERT users </div><div class="line">VALUES(DEFAULT,&apos;Tom&apos;,&apos;123&apos;,1+9*2,1),</div><div class="line">(NULL,&apos;John&apos;,md5(&apos;123&apos;),DEFAULT,0); </div><div class="line">//插入两条记录</div></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="INSERT…SET"><a href="#INSERT…SET" class="headerlink" title="INSERT…SET"></a>INSERT…SET</h3><p>这种方法一次只能插入一条记录<br>列值中有自动编号、默认值或Boolean类型均可以不赋值(使用子查询)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">INSERT [INTO] table_name SET col_name=&#123; expr | DEFAULT &#125;,...;</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">INSERT users SET username=&apos;Ben&apos;,password=&apos;456&apos;;</div></pre></td></tr></table></figure>
<h3 id="INSERT…SELECT"><a href="#INSERT…SELECT" class="headerlink" title="INSERT…SELECT"></a>INSERT…SELECT</h3><p>一般用于将其他表的数据插入到指定表，注意对应<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">INSERT [INTO] table_name(col_name,...) </div><div class="line">SELECT col_name,... FROM table_name [GROUP BY/HAVING/ORDER BY/LIMIT...];</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">INSERT test SELECT username FROM users WHERE age &gt;=30; </div><div class="line">// 字段不匹配提示</div><div class="line">INSERT test (username) SELECT username FROM users WHERE age &gt;=30;</div><div class="line"></div><div class="line">INSERT tdb_goods_cates(cate_name) </div><div class="line">SELECT goods_cate FROM tdb_goods </div><div class="line">GROUP BY goods_cate;</div><div class="line">//在表tdb_goods_cates中插入tdb_goods中的cate</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="update-更新记录"><a href="#update-更新记录" class="headerlink" title="update 更新记录"></a>update 更新记录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">UPDATE [LOW_PRIORITY] [IGNORE] table_reference </div><div class="line">SET col_name1=&#123;exp1|DEFAULT&#125;</div><div class="line">[,col_name2=&#123;exp1|DEFAULT&#125;,...]</div><div class="line">[WHERE where_condition]</div></pre></td></tr></table></figure>
<p>省略WHERE条件则更新所有记录该列的值</p>
<h3 id="单表更新"><a href="#单表更新" class="headerlink" title="单表更新"></a>单表更新</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">UPDATE users SET age = age + 5,sex = 0; </div><div class="line">//使表里所有记录的age加5</div><div class="line">UPDATE users SET age = age + 10 WHERE id % 2=0; </div><div class="line">//取id为偶数的位置</div></pre></td></tr></table></figure>
<h3 id="多表更新"><a href="#多表更新" class="headerlink" title="多表更新"></a>多表更新</h3><p>使用连接进行多表更新，以下为连接的语法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">table_reference</div><div class="line">&#123;[INNER | CROSS] JOIN | &#123;LEFT|RIGHT&#125; [OUTER] JOIN&#125;</div><div class="line">table_reference</div><div class="line">ON conditional_expr</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">UPDATE tdb_goods INNER JOIN tdb_goods_cates </div><div class="line">ON goods_cate=cate_name </div><div class="line">SET goods_cate=cate_id;</div><div class="line">//如果goods_cate等于cate_name那么就让goods_cate=cate_id</div></pre></td></tr></table></figure>
<p>创建数据表同时将查询结果写入到数据表<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE [IF NOT EXISTS] tbl_name</div><div class="line">[(create_definition,...)]</div><div class="line">select_statement</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE tdb_goods_brands (</div><div class="line">brand_id SMALLINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,</div><div class="line">brand_name VARCHAR(40) NOT NULL</div><div class="line">) </div><div class="line">SELECT brand_name FROM tdb_goods </div><div class="line">GROUP BY brand_name;</div><div class="line"> </div><div class="line">UPDATE tdb_goods AS g </div><div class="line">INNER JOIN tdb_goods_brands AS b </div><div class="line">ON g.brand_name = b.brand_name </div><div class="line">SET g.brand_name = b.brand_id;</div><div class="line">//多表更新</div><div class="line"> </div><div class="line">ALTER TABLE tdb_goods </div><div class="line">CHANGE goods_cate cate_id SMALLINT UNSIGNED NOT NULL,</div><div class="line">CHANGE brand_name brand_id SMALLINT UNSIGNED NOT NULL;</div><div class="line">//通过ALTER TABLE语句修改数据表结构</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="delete-删除记录"><a href="#delete-删除记录" class="headerlink" title="delete 删除记录"></a>delete 删除记录</h2><h3 id="单表删除"><a href="#单表删除" class="headerlink" title="单表删除"></a>单表删除</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">DELETE FROM table_name [WHERE where_conditon];</div></pre></td></tr></table></figure>
<p>省略条件则默认删除该表所有记录(仅删除所有记录，不删除数据表)<br>删除后再插入，插入的id号从最大的往上加，而不是填补删除的。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">DELETE FROM users WHERE id=6;</div></pre></td></tr></table></figure>
<h3 id="多表删除"><a href="#多表删除" class="headerlink" title="多表删除"></a>多表删除</h3><p>INSERT … SELECT实现复制<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">INSERT tdb_goods(goods_name,cate_id,brand_id) </div><div class="line">SELECT goods_name,cate_id,brand_id </div><div class="line">FROM tdb_goods </div><div class="line">WHERE goods_id IN (19,20);</div></pre></td></tr></table></figure></p>
<p>查找重复记录<br>SELECT goods_id,goods_name<br>FROM tdb_goods<br>GROUP BY goods_name HAVING count(goods_name) &gt;= 2;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">删除重复记录</div></pre></td></tr></table></figure></p>
<p>DELETE t1<br>FROM tdb_goods AS t1<br>LEFT JOIN (<br>    SELECT goods_id,goods_name<br>    FROM tdb_goods<br>    GROUP BY goods_name HAVING count(goods_name) &gt;= 2 ) AS t2<br>ON t1.goods_name = t2.goods_name<br>WHERE t1.goods_id &gt; t2.goods_id;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">&lt;br&gt;</div><div class="line"></div><div class="line">## select 查找记录</div></pre></td></tr></table></figure></p>
<p>SELECT select_expr [,select expr2…]           //只查找某一个函数或表达式<br>[<br>FROM table_references                           //查询表名<br>[WHERE where_conditon]                          //查询条件<br>[GROUP BY {col_name|position} [ASC|DESC],…]   //按某个字段进行分组，相同的只显示第一个<br>[HAVING where_conditon]                         //分组时，给出显示条件<br>[ORDER BY {col_name|expr|position} [ASC|DESC],…] //排序<br>[LIMIT {[offset,]row_count|row_count OFFSET offset}] //限制返回数量<br>}<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">### 查询表达式</div><div class="line">* 每一个表达式表示想要的一列，必须至少有一个</div><div class="line">* 多个列之间以英文逗号分隔</div><div class="line">* 星号(*)表示所以列 table_name.*可以表示命名表的所有列</div><div class="line">* 查询表达式可以使用`[As]alias_name`为其赋予别名</div><div class="line">* 别名可用于GROUP BY，ORDRE BY或HAVING子句</div><div class="line"></div><div class="line">SELECT 字段出现顺序影响结果集出现顺序，字段别名也影响结果集字段别名</div></pre></td></tr></table></figure></p>
<p>SELECT * FROM users;<br>SELECT id AS userid,usrname AS uname FROM users;<br>SELECT users.id FROM users;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">### WHERE 条件表达式</div><div class="line"></div><div class="line">对记录进行过滤，如果没有指定的WHERE子句，则显示所有记录</div><div class="line">在WHERE表达式中，可以使用MYSQL支持的函数或运算符</div></pre></td></tr></table></figure></p>
<p>SELECT * FROM users WHERE id=1;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div><div class="line">### GROUP BY 查询结果分组</div></pre></td></tr></table></figure></p>
<p>[GROUP BY {col_name|position} [ASC|DESC],…]<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ASC：升序，默认</div><div class="line">DESC：降序</div><div class="line">position：SELECT语句中列的序号</div></pre></td></tr></table></figure></p>
<p>SELECT sex FROM users GROUP BY sex;<br>//对users中的sex按sex进行分组<br>SELECT * FROM users GROUP BY 1;<br>//1表示查询的第一个字段，这里是表中的第一个字段id<br>SELECT sex FROM users GROUP BY 1;<br>//1表示sex<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">如果存在相同的值（例如上面的age可能有多个相同的值），**只会保留一个**。但使用ORDER BY 就不会省略。</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">### HAVING 分组条件</div><div class="line">用在GROUP BY后面追加条件，条件要么为一个聚合函数，要么出现在SELECT要查询的字段中。</div></pre></td></tr></table></figure></p>
<p>[HAVING when where_condition]</p>
<p>SELECT sex FROM users GROUP BY 1 HAVING age &gt; 35; //有错<br>SELECT sex,age FROM users GROUP BY 1 HAVING age &gt; 35;<br>SELECT sex FROM users GROUP BY 1 HAVING count(id) &gt;= 2;<br>//按照sex分组，条件id数大于2的分组留下显示<br>//工作流程就是先从表中查询字段，然后根据GROUP BY的条件对查询结果进行分组，再根据HAVING条件对分组进行筛选，最后留下满足所有条件的分组结果。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">聚合函数永远只有一个返回结果</div><div class="line">count是记录指定列的值的个数（NULL不计入）</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">### ORDER BY 排序</div><div class="line">对查询结果进行排序，默认是升序，DESC是降序</div></pre></td></tr></table></figure></p>
<p>[ORDER BY [col_name | expr | position } [ASC|DESC],…]</p>
<p>SELECT <em> FROM users ORDER BY id DESC;<br>//对一个字段排序<br>SELECT </em> FROM users ORDER BY age,id DESC;<br>//多字段排序，先按照age排序，如果age有重复的，重复的字段里按id排序<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div><div class="line">多个排序条件之间以逗号相隔，在前面的排序条件满足时，忽略后面的排序条件，否则按照后面的排序条件进行排序。</div><div class="line"></div><div class="line"></div><div class="line">### LIMIT 限制查询结果数量</div></pre></td></tr></table></figure></p>
<p>[LIMIT {[offset,] row_count | row_count OFFSET offset}]<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">获取头部记录LIMIT 10; //获取查询结果的前10条记录，**默认从0开始**</div><div class="line">获取中间记录LIMIT 2,10;//获取从第3条开始的10条记录</div></pre></td></tr></table></figure></p>
<p>SELECT <em> FROM users LIMIT 2;<br>//从第一条开始（第一个为0），返回两条<br>SELECT </em> FROM users LIMIT 2,3;<br>//从第三条开始（第一个为0），返回三条<br>```</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;insert-插入记录&quot;&gt;&lt;a href=&quot;#insert-插入记录&quot; class=&quot;headerlink&quot; title=&quot;insert 插入记录&quot;&gt;&lt;/a&gt;insert 插入记录&lt;/h2&gt;&lt;h3 id=&quot;INSERT…VALUES&quot;&gt;&lt;a href=&quot;#INSERT…VALUES&quot; class=&quot;headerlink&quot; title=&quot;INSERT…VALUES&quot;&gt;&lt;/a&gt;INSERT…VALUES&lt;/h3&gt;&lt;p&gt;比较常用，一次性插入多条记录，可输入表达式甚至是函数。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;INSERT [INTO] table_name [(column_name,...)] &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;VALUES|VALUE&amp;#125; (&amp;#123;expr|DEFAULT&amp;#125;,...),(...),...;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;expr 表示表达式&lt;br&gt;对于自动编号的字段，插入&lt;code&gt;NULL&lt;/code&gt;或&lt;code&gt;DEFAULT&lt;/code&gt;系统将自动依次递增编号；&lt;br&gt;对于有默认约束的字段，可以插入&lt;code&gt;DEFAULT&lt;/code&gt;表示使用默认值；&lt;br&gt;列值可传入数值、表达式或函数，如密码可以用md5()函数进行加密（如md5(‘123’)）；&lt;br&gt;可同时插入多条记录，多条记录括号间用逗号&lt;code&gt;,&lt;/code&gt;隔开&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;INSERT test VALUES(NULL,&amp;apos;Tom&amp;apos;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;//插入单条记录&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;INSERT users &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;VALUES(DEFAULT,&amp;apos;Tom&amp;apos;,&amp;apos;123&amp;apos;,1+9*2,1),&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;(NULL,&amp;apos;John&amp;apos;,md5(&amp;apos;123&amp;apos;),DEFAULT,0); &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;//插入两条记录&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL修改数据表</title>
    <link href="http://yoursite.com/post/5f31036f.html"/>
    <id>http://yoursite.com/post/5f31036f.html</id>
    <published>2018-06-02T14:49:01.000Z</published>
    <updated>2018-06-03T10:06:17.716Z</updated>
    
    <content type="html"><![CDATA[<p>总结：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ALTER TABLE table_name ADD/DROP ...;</div></pre></td></tr></table></figure>
<h1 id="添加-删除列"><a href="#添加-删除列" class="headerlink" title="添加/删除列"></a>添加/删除列</h1><h2 id="添加单列"><a href="#添加单列" class="headerlink" title="添加单列"></a>添加单列</h2><p>如果指定FIRST，则在整个表的最前方，默认不写为整个表的最后方；如果指定AFTER col_name，则在col_name的后面。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ALTER TABLE table_name ADD [COLUMN] col_name column_definition [FIRST | AFTER col_name];</div><div class="line"></div><div class="line">ALTER TABLE user1 ADD password varchar(32) not NULL AFTER name;</div></pre></td></tr></table></figure></p>
<h2 id="添加多列"><a href="#添加多列" class="headerlink" title="添加多列"></a>添加多列</h2><p>无法指定FIRST/AFTER、只能默认为最后方<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ALTER TABLE table_name ADD [COLUMN] (col_name column_definition,...);</div><div class="line"></div><div class="line">ALTER TABLE user1 ADD password varchar(32) not NULL,pid smallint unsigned;</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<h2 id="删除单列"><a href="#删除单列" class="headerlink" title="删除单列"></a>删除单列</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ALTER TABLE table_name DROP [COLUMN] col_name;</div><div class="line"></div><div class="line">ALTER TABLE user1 DROP password;</div></pre></td></tr></table></figure>
<h2 id="删除多列"><a href="#删除多列" class="headerlink" title="删除多列"></a>删除多列</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ALTER TABLE table_name DROP [COLUMN] col_name, </div><div class="line">DROP [COLUMN] col_name,</div><div class="line">DROP [COLUMN] col_name;</div></pre></td></tr></table></figure>
<p><br></p>
<h1 id="添加约束"><a href="#添加约束" class="headerlink" title="添加约束"></a>添加约束</h1><h2 id="添加-删除主键约束"><a href="#添加-删除主键约束" class="headerlink" title="添加/删除主键约束"></a>添加/删除主键约束</h2><p>constraint 给主键起名<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">ALTER TABLE table_name ADD [CONSTRAINT [symbol]] PRIMARY KEY [index_type] (index_col_name,...);</div><div class="line">ALTER TABLE table_name DROP PRIMARY KEY;</div><div class="line"></div><div class="line">ALTER TABLE users ADD CONSTRAINT pk_users_id PRIMARY KEY (id);</div><div class="line">ALTER TABLE users DROP PRIMARY KEY;</div></pre></td></tr></table></figure></p>
<h2 id="添加-删除唯一约束"><a href="#添加-删除唯一约束" class="headerlink" title="添加/删除唯一约束"></a>添加/删除唯一约束</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">ALTER TABLE table_name ADD [CONSTRAINT [symbol]] UNIQUE [INDEX|KEY] [index_name] [index_type] (index_col_name,...)</div><div class="line">ALTER TABLE table_name DROP &#123;INDEX|KEY&#125; index_name;</div><div class="line">//删除唯一约束只用删掉它的索引就行了</div><div class="line"></div><div class="line">ALTER TABLE users ADD UNIQUE (username);</div><div class="line">ALTER TABLE users drop INDEX username;</div></pre></td></tr></table></figure>
<h2 id="添加-删除外键约束"><a href="#添加-删除外键约束" class="headerlink" title="添加/删除外键约束"></a>添加/删除外键约束</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">ALTER TABLE table_name ADD [CONSTRAINT [symbol]] FOREIGN KEY [index_name](index_col_name,...) reference_definition;</div><div class="line">ALTER TABLE table_name DROP FOREIGN KEY（fk_symbol);</div><div class="line">//fk_symbol 是CONSTRAINT定义的名字，如果没有定义可以通过 show create table table_name来查看</div><div class="line"></div><div class="line">ALTER TABLE users ADD FOREIGN KEY (pid) REFERENCES provinces (id);</div><div class="line">SHOW TABLE TABLE users;</div><div class="line">ALTER TABLE users DROP FOREIGN KEY (pid);</div></pre></td></tr></table></figure>
<h2 id="添加-删除默认约束"><a href="#添加-删除默认约束" class="headerlink" title="添加/删除默认约束"></a>添加/删除默认约束</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ALTER TABLE table_name ALTER [COLUMN] col_name &#123;SET DEFAULT literal | DROP DEFAULT&#125;</div><div class="line"></div><div class="line">ALTER TABLE users ALTER age SET DEFAULT 15;</div><div class="line">ALTER TABLE users ALTER age DROP DEFAULT;</div></pre></td></tr></table></figure>
<p><br></p>
<h1 id="修改列"><a href="#修改列" class="headerlink" title="修改列"></a>修改列</h1><h2 id="修改列定义"><a href="#修改列定义" class="headerlink" title="修改列定义"></a>修改列定义</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">ALTER TABLE table_name MODIFY [COLUMN] col_name column_definition [FIRST |AFTER col_name];</div><div class="line"></div><div class="line">ALTER TABLE users2 MODIFY id SMALLINT UNSIGNED NOT NULL FIRST; </div><div class="line">//将id字段的位置提到第一列</div><div class="line">ALTER TABLE users2 MODIFY id TINYINT UNSIGNED NOT NULL; </div><div class="line">//修改数据类型，需注意数据丢失的问题（范围大转范围小）</div></pre></td></tr></table></figure>
<h2 id="修改列名称"><a href="#修改列名称" class="headerlink" title="修改列名称"></a>修改列名称</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ALTER TABLE table_name CHANGE [COLUMN] col_name new_col_name column_definition [FIRST|AFTER col_name];</div><div class="line"></div><div class="line">ALTER TABLE users2 CHANGE pid p_id TINYINT UNSIGNED; </div><div class="line">//修改列名称，类型可以通过show create table table_name复制原来的</div></pre></td></tr></table></figure>
<p><br></p>
<h1 id="数据表更名"><a href="#数据表更名" class="headerlink" title="数据表更名"></a>数据表更名</h1><p>方法1<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ALTER TABLE table_name RENAME [TO/AS] new_table_name;</div><div class="line"></div><div class="line">ALTER TABLE users2 RENAME (to/as) users3;</div></pre></td></tr></table></figure></p>
<p>方法2<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">RENAME TABLE table_name TO new_table_name [,table_name2 TO new_table_name2] ...;</div><div class="line"></div><div class="line">RENAME TABLE users5 TO users2;</div></pre></td></tr></table></figure></p>
<p>尽量少使用数据表的列名及表名的更名。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;总结：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;ALTER TABLE table_name ADD/DROP ...;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;添加-删除列&quot;&gt;&lt;a href=&quot;#添加-删除列&quot; class=&quot;headerlink&quot; title=&quot;添加/删除列&quot;&gt;&lt;/a&gt;添加/删除列&lt;/h1&gt;&lt;h2 id=&quot;添加单列&quot;&gt;&lt;a href=&quot;#添加单列&quot; class=&quot;headerlink&quot; title=&quot;添加单列&quot;&gt;&lt;/a&gt;添加单列&lt;/h2&gt;&lt;p&gt;如果指定FIRST，则在整个表的最前方，默认不写为整个表的最后方；如果指定AFTER col_name，则在col_name的后面。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;ALTER TABLE table_name ADD [COLUMN] col_name column_definition [FIRST | AFTER col_name];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ALTER TABLE user1 ADD password varchar(32) not NULL AFTER name;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;添加多列&quot;&gt;&lt;a href=&quot;#添加多列&quot; class=&quot;headerlink&quot; title=&quot;添加多列&quot;&gt;&lt;/a&gt;添加多列&lt;/h2&gt;&lt;p&gt;无法指定FIRST/AFTER、只能默认为最后方&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;ALTER TABLE table_name ADD [COLUMN] (col_name column_definition,...);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ALTER TABLE user1 ADD password varchar(32) not NULL,pid smallint unsigned;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL约束</title>
    <link href="http://yoursite.com/post/1df97176.html"/>
    <id>http://yoursite.com/post/1df97176.html</id>
    <published>2018-06-02T13:42:47.000Z</published>
    <updated>2018-06-03T01:44:29.379Z</updated>
    
    <content type="html"><![CDATA[<p>约束保证数据的完整性和一致性<br>约束按功能分为PRIMARY KEY、UNIQUE KEY、DEFAULT、NOT NULL、FOREIGN KEY<br>按数目分为列级约束和表级约束</p>
<a id="more"></a>
<p><br></p>
<h2 id="查看约束"><a href="#查看约束" class="headerlink" title="查看约束"></a>查看约束</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SHOW INDEX FROM table_name\G;</div><div class="line">SHOW INDEX FROM table_name;</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="主键约束：PRIMARY-KEY"><a href="#主键约束：PRIMARY-KEY" class="headerlink" title="主键约束：PRIMARY KEY"></a>主键约束：PRIMARY KEY</h2><p>主键可以写为PRIMARY KEY，也可以写成KEY</p>
<ol>
<li>唯一性（可以赋值但是不能给两个记录赋一样的值）每张表只存在一个主键</li>
<li>主键保证记录的唯一性</li>
<li>主键自动为NOT NULL，也就是说必须要为主键赋值。但如果主键选择了AUTO_INCREMENT，那么不需要手动赋值</li>
<li>auto_increment必须和主键primary key一起使用，但是主键primary key不一定要和auto_increment一块使用</li>
<li>主键的字段是可以赋值的，但不能赋相同的值</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE user(</div><div class="line">id SMALLINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,</div><div class="line">username VARCHAR(20) NOT NULL</div><div class="line">);</div></pre></td></tr></table></figure>
<p>记录如果删除了编号会出现间断</p>
<h3 id="自增-AUTO-INCREMENT"><a href="#自增-AUTO-INCREMENT" class="headerlink" title="自增 AUTO_INCREMENT"></a>自增 AUTO_INCREMENT</h3><ol>
<li>自动编号，保证记录的唯一性，且必须与主键组合使用</li>
<li>默认情况下，初始为1，每次增长量为1.</li>
<li>对应的字段设置必须是数值类型，若是浮点类型，小数位必须为0.</li>
<li>自动编号必须是主键字段</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE tb3(</div><div class="line">id SMALLINT UNSIGNED AUTO_INCREMENT,</div><div class="line">username VARCHAR(30) NOT NULL); </div><div class="line">//报错，自动增量字段必须设置成主键</div></pre></td></tr></table></figure>
<p>AUTO_INCREMENT必须是主键<br>主键不一定要用AUTO_INCREMENT</p>
<p><br></p>
<h2 id="唯一约束：UNIQUE-KEY"><a href="#唯一约束：UNIQUE-KEY" class="headerlink" title="唯一约束：UNIQUE KEY"></a>唯一约束：UNIQUE KEY</h2><ol>
<li>唯一约束可以保证记录的唯一性</li>
<li>唯一约束的字段可以为空值（NULL），存储时只保留一个NULL</li>
<li>每张数据表可以存在多个唯一约束</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE tb2(</div><div class="line">id SMALLINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,</div><div class="line">username VARCHAR(20) NOT NULL UNIQUE KEY,</div><div class="line">age TINYINT UNSIGNED</div><div class="line">);</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="默认约束：DEFAULT"><a href="#默认约束：DEFAULT" class="headerlink" title="默认约束：DEFAULT"></a>默认约束：DEFAULT</h2><p>如果没有明确为字段赋值会自动赋与默认值<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE tb6(</div><div class="line">id SMALLINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,</div><div class="line">username VARCHAR(20) NOT NULL UNIQUE KEY,</div><div class="line">sex ENUM(&apos;1&apos;,&apos;2&apos;,&apos;3&apos;) DEFAULT &apos;3&apos;</div><div class="line">);</div><div class="line">//表示当sex没有赋值时，默认值为3</div></pre></td></tr></table></figure></p>
<p><br></p>
<h2 id="非空约束：NOT-NULL"><a href="#非空约束：NOT-NULL" class="headerlink" title="非空约束：NOT NULL"></a>非空约束：NOT NULL</h2><p>NULL，字段值可以为空<br>NOT NULL，字段值禁止为空，不赋值会报错</p>
<p><br></p>
<h2 id="外键约束：FOREIGN-KEY"><a href="#外键约束：FOREIGN-KEY" class="headerlink" title="外键约束：FOREIGN KEY"></a>外键约束：FOREIGN KEY</h2><p>保持数据一致性，完整性；实现一对一或一对多关系</p>
<h3 id="要求："><a href="#要求：" class="headerlink" title="要求："></a>要求：</h3><ol>
<li>父表和子表必须使用相同的存储引擎，而且禁止使用临时表(子表：具有外键列的表；父表：子表参照的表)</li>
<li>数据表的存储引擎只能为InnoDB</li>
<li>外键列和参照列必须具有类似的数据类型。其中数字的长度或是否有符号位必须相同；而字符的长度则可以不同</li>
<li>外键列和参照列必须创建索引。如果外键列不存在索引的话，MySQL将自动创建索引</li>
</ol>
<p>在配置文件（my.ini\my.conf）中编辑默认的存储引擎：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">default-storage-engine=INNODB</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE table_name1(</div><div class="line">id SMALLINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,</div><div class="line">name VARCHAR(20) NOT NULL</div><div class="line">);</div><div class="line">CREATE TABLE table_name2(</div><div class="line">id SMALLINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,</div><div class="line">username VARCHAR(20) NOT NULL,</div><div class="line">pid SMALLINT UNSIGNED,</div><div class="line">FOREIGN KEY (pid) REFERENCES table_name1(id)  </div><div class="line">);</div><div class="line">// 外键 pid 参照 table_name1中的 id 字段</div></pre></td></tr></table></figure>
<p>显示创建表的语句：SHOW CREATE TABLE table_name；<br>查看表是否有索引：SHOW INDEXS FROM table_name；<br>以网格查看表是否有索引：SHOW INDEXS FROM table_name\G；</p>
<h3 id="外键约束的参照操作"><a href="#外键约束的参照操作" class="headerlink" title="外键约束的参照操作"></a>外键约束的参照操作</h3><ol>
<li>CASCADE：从父表删除或更新且自动删除或更新子表中匹配的行</li>
<li>SET NULL：从父表删除或更新行，并设置子表中的外键列为NULL。如果使用该选项，必须保证子表列没有指定NOT NULL</li>
<li>RESTRICT：拒绝对父表的删除或更新操作</li>
<li>NO ACTION：标准SQL的关键字，在MySQL中与RESTRICT相同</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE users(</div><div class="line">id SMALLINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,</div><div class="line">pid SMALLINT,</div><div class="line">username VARCHAR(10) NOT NULL,</div><div class="line">FOREIGN KEY (pid) REFERENCES province (id) ON DELETE CASCADE</div><div class="line">);</div></pre></td></tr></table></figure>
<p>从父表删除或更新行，会设置子表中的外键列为NULL，如果使用该选项，必须保证子表列没有指定NOT NULL</p>
<p>实际开发中，我们很少使用物理的外键约束，而是使用逻辑约束；物理的外键约束只有innoDB这种存储引擎才会支持，MYISAM这种引擎就不支持物理的外键约束。反过来说，当我们使用到的引擎为MYISAM时，只能使用逻辑外键（即两个表的设计的逻辑关系）。</p>
<h2 id="表级约束与列级约束"><a href="#表级约束与列级约束" class="headerlink" title="表级约束与列级约束"></a>表级约束与列级约束</h2><p>对一个数据列建立的约束，称为列级约束<br>对多个数据列建立的约束，称为表级约束</p>
<p>列级约束既可以在列定义时声明，也可以在列定以后声明<br>表级约束只能在列定义后声明</p>
<p>主键、外键、唯一既可以作为表级约束，也可作为列级约束<br>not null、default只有列级约束</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;约束保证数据的完整性和一致性&lt;br&gt;约束按功能分为PRIMARY KEY、UNIQUE KEY、DEFAULT、NOT NULL、FOREIGN KEY&lt;br&gt;按数目分为列级约束和表级约束&lt;/p&gt;
    
    </summary>
    
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL数据表</title>
    <link href="http://yoursite.com/post/8ecc2d83.html"/>
    <id>http://yoursite.com/post/8ecc2d83.html</id>
    <published>2018-06-02T13:24:46.000Z</published>
    <updated>2018-06-02T15:02:35.543Z</updated>
    
    <content type="html"><![CDATA[<p>数据表（或表）是数据库最重要的组成部分之一，是其他对象的基础，表是一个二维表，行称为【记录】，列称为【字段】</p>
<h2 id="创建数据表"><a href="#创建数据表" class="headerlink" title="创建数据表"></a>创建数据表</h2><p>首先打开数据库（数据库要存在）: <code>USE 数据库名称</code></p>
<p>创建数据表<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE [IF NOT EXISTS] table_name(</div><div class="line">column_name(列名称) data_type（列类型）,</div><div class="line">.... );</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE tb1(</div><div class="line">username VARCHAR(20),</div><div class="line">userage TINYINT UNSIGNED,</div><div class="line">salary FLOAT(8,2) UNSIGNED,</div><div class="line">);</div></pre></td></tr></table></figure>
<p>UNSIGNED 无符号</p>
<p><br></p>
<h2 id="查看数据表列表"><a href="#查看数据表列表" class="headerlink" title="查看数据表列表"></a>查看数据表列表</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">SHOW TABLES [FROM db_name] [LIKE &apos;pattern&apos; | WHERE expr]；</div><div class="line"></div><div class="line">SHOW TABLES;                //查看当前选择的数据库的所有表</div><div class="line">SHOW TABLES FROM test;      //查看test数据库中的所有表，当前选择数据库位置不变</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="查看数据表的结构"><a href="#查看数据表的结构" class="headerlink" title="查看数据表的结构"></a>查看数据表的结构</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SHOW COLUMNS FROM tb1;      //查看tb1中的数据表结构</div></pre></td></tr></table></figure>
<h2 id="查看创建数据表的语句"><a href="#查看创建数据表的语句" class="headerlink" title="查看创建数据表的语句"></a>查看创建数据表的语句</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SHOW CREATE TABLE table_name;</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="插入记录"><a href="#插入记录" class="headerlink" title="插入记录"></a>插入记录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">INSERT table_name [字段(colume),...] VALUES(val,...);</div><div class="line"></div><div class="line">INSERT tb1 VALUES(&apos;TOM&apos;,25,6782.12);</div><div class="line">INSERT tb1(username,salary) VALUES(&apos;John&apos;,3398.98);</div></pre></td></tr></table></figure>
<p>省略字段后，values(记录内容必须按照表列顺序也就是字段顺序以逗号分隔，且插入内容一个不能少);<br>若不省略字段(可部分省略，省略部分记录自动为空)，values(记录内容按照字段插入内容，写几个字段插入几个内容);</p>
<p><br></p>
<h2 id="查找记录"><a href="#查找记录" class="headerlink" title="查找记录"></a>查找记录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT expr(表达式),...FROM table_name;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;数据表（或表）是数据库最重要的组成部分之一，是其他对象的基础，表是一个二维表，行称为【记录】，列称为【字段】&lt;/p&gt;
&lt;h2 id=&quot;创建数据表&quot;&gt;&lt;a href=&quot;#创建数据表&quot; class=&quot;headerlink&quot; title=&quot;创建数据表&quot;&gt;&lt;/a&gt;创建数据表&lt;/h2&gt;&lt;p&gt;首先打开数据库（数据库要存在）: &lt;code&gt;USE 数据库名称&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;创建数据表&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;CREATE TABLE [IF NOT EXISTS] table_name(&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;column_name(列名称) data_type（列类型）,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.... );&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL数据类型</title>
    <link href="http://yoursite.com/post/47519a60.html"/>
    <id>http://yoursite.com/post/47519a60.html</id>
    <published>2018-06-02T12:16:11.000Z</published>
    <updated>2018-06-02T22:34:07.238Z</updated>
    
    <content type="html"><![CDATA[<p>数据类型是指列、存储过程参数、表达式和局部变量的数据特征，它决定了数据的存储格式，代表了不同的信息类型</p>
<h2 id="整型"><a href="#整型" class="headerlink" title="整型"></a>整型</h2><p>整型的存储范围分有符号位和无符号位两种，一般无符号位是有符号位的两倍</p>
<p>选择数据类型要根据实际数据的大小，选择合适的数据类型有利于数据的优化</p>
<table>
<thead>
<tr>
<th>数据类型</th>
<th>字节</th>
<th>存储范围</th>
</tr>
</thead>
<tbody>
<tr>
<td>tinyint</td>
<td>1</td>
<td>-128~127<br>无符号0~255</td>
</tr>
<tr>
<td>smallint</td>
<td>2</td>
<td>-32768~32767<br>无符号0~65535</td>
</tr>
<tr>
<td>mediumint</td>
<td>3</td>
<td>-2^23~2^23-1(800万)<br>无符号0~2^24-1</td>
</tr>
<tr>
<td>int</td>
<td>4</td>
<td>-2^31~2^31-1(21亿)<br>无符号0~2^32-1</td>
</tr>
<tr>
<td>bigint</td>
<td>8</td>
<td>-2^63~2^63-1<br>无符号0~2^64-1</td>
</tr>
</tbody>
</table>
<a id="more"></a>
<p><br></p>
<h2 id="浮点型"><a href="#浮点型" class="headerlink" title="浮点型"></a>浮点型</h2><table>
<thead>
<tr>
<th>数据类型</th>
<th>存储类型</th>
</tr>
</thead>
<tbody>
<tr>
<td>float[(m,d])</td>
<td>-3.402E+38到-1.175E-38<br>0和1.175E-38到3.402+38<br>m是数字总位数，d是小数点后面的位数，如果m和d被省略，会根据硬件允许的限制来保存值</td>
</tr>
<tr>
<td>double[(m,d)]</td>
<td>-1.797E+308到-2.223E-308、0和2.225E-308到1.797E+308</td>
</tr>
</tbody>
</table>
<p>float，单精度浮点，保留小数点后7位，C语言默认显示6位小数。<br>double，双精度浮点，一般是float存储范围的十倍，C语言默认显示15位小数。</p>
<p><br></p>
<h2 id="日期时间型"><a href="#日期时间型" class="headerlink" title="日期时间型"></a>日期时间型</h2><table>
<thead>
<tr>
<th>数据类型</th>
<th>存储范围</th>
<th>存储需求</th>
</tr>
</thead>
<tbody>
<tr>
<td>YEAR</td>
<td>1970至2069</td>
<td>1</td>
</tr>
<tr>
<td>TIME</td>
<td>-838:59:59至838:59:59</td>
<td>3</td>
</tr>
<tr>
<td>DATE</td>
<td>1000-1-1至9999-12-31</td>
<td>3</td>
</tr>
<tr>
<td>DATETIME</td>
<td>1000-1-1 00:00:00至9999-12-31 23:59:59</td>
<td>8</td>
</tr>
<tr>
<td>TIMESTAMP</td>
<td>1970-1-1 00:00:00到2037-12-31 23:59:59</td>
<td>4</td>
</tr>
</tbody>
</table>
<p><br></p>
<h2 id="字符型"><a href="#字符型" class="headerlink" title="字符型"></a>字符型</h2><table>
<thead>
<tr>
<th>列类型</th>
<th>存储需求</th>
</tr>
</thead>
<tbody>
<tr>
<td>CHAR(M)</td>
<td>M个字节 0&lt;=M&lt;=255 <br>定长 M是5就5个字节 abc会在后面补两个空格</td>
</tr>
<tr>
<td>VARCHAR(M)</td>
<td>L+1个字节 L&lt;=M,0&lt;=M&lt;=65535<br>变长 abc就是abc</td>
</tr>
<tr>
<td>TINYTEXT</td>
<td>L+1个字节，L&lt;2的8次方</td>
</tr>
<tr>
<td>TEXT</td>
<td>L+2个字节，L&lt;2的16次方（6w5），标准文本</td>
</tr>
<tr>
<td>MEDIUMTEXT</td>
<td>L+3个字节，L&lt;2的24次方（1600w）</td>
</tr>
<tr>
<td>LONGTEXT</td>
<td>L+4个字节，L&lt;2的32次方</td>
</tr>
<tr>
<td>ENUM(‘value1’;’value2’,…)</td>
<td>1or2字节 取决于枚举值的个数（最多65535个值）</td>
</tr>
<tr>
<td>SET（’value1’,’value2’,…)</td>
<td>1、2、3、4、8字节，取决于set成员个数（最多64个成员）</td>
</tr>
</tbody>
</table>
<h2 id="boolean"><a href="#boolean" class="headerlink" title="boolean"></a>boolean</h2><p>MySQL没有内置的布尔类型，但是它使用TINYINT(1)。 为了更方便，MySQL提供BOOLEAN或BOOL作为TINYINT(1)的同义词。</p>
<p>MySQL将布尔值作为整数存储在表中，但当显示表定义时，它是却是TINYINT(1)类型<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE tasks (</div><div class="line">id INT PRIMARY KEY AUTO_INCREMENT,</div><div class="line">title VARCHAR(255) NOT NULL,</div><div class="line">completed BOOLEAN</div><div class="line">);</div></pre></td></tr></table></figure></p>
<p><a href="https://www.yiibai.com/mysql/boolean.html" target="_blank" rel="external">https://www.yiibai.com/mysql/boolean.html</a><br><a href="https://dev.mysql.com/doc/refman/8.0/en/bit-type.html" target="_blank" rel="external">https://dev.mysql.com/doc/refman/8.0/en/bit-type.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;数据类型是指列、存储过程参数、表达式和局部变量的数据特征，它决定了数据的存储格式，代表了不同的信息类型&lt;/p&gt;
&lt;h2 id=&quot;整型&quot;&gt;&lt;a href=&quot;#整型&quot; class=&quot;headerlink&quot; title=&quot;整型&quot;&gt;&lt;/a&gt;整型&lt;/h2&gt;&lt;p&gt;整型的存储范围分有符号位和无符号位两种，一般无符号位是有符号位的两倍&lt;/p&gt;
&lt;p&gt;选择数据类型要根据实际数据的大小，选择合适的数据类型有利于数据的优化&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数据类型&lt;/th&gt;
&lt;th&gt;字节&lt;/th&gt;
&lt;th&gt;存储范围&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;tinyint&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;-128~127&lt;br&gt;无符号0~255&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;smallint&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;-32768~32767&lt;br&gt;无符号0~65535&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mediumint&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;-2^23~2^23-1(800万)&lt;br&gt;无符号0~2^24-1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;int&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;-2^31~2^31-1(21亿)&lt;br&gt;无符号0~2^32-1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bigint&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;-2^63~2^63-1&lt;br&gt;无符号0~2^64-1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
    
    </summary>
    
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL数据库操作</title>
    <link href="http://yoursite.com/post/f2cccc89.html"/>
    <id>http://yoursite.com/post/f2cccc89.html</id>
    <published>2018-06-02T11:57:23.000Z</published>
    <updated>2018-06-04T02:47:30.981Z</updated>
    
    <content type="html"><![CDATA[<h2 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">CREATE &#123;DATABASE | SCHEMA&#125; [IF NOT EXISTS] db_name </div><div class="line">[DEFAULT] CHARACTER SET [=] charset_name;</div></pre></td></tr></table></figure>
<p>DATABASE和SCHEMA是相同的，任选其一<br>IF NOT EXISTS:如果创建的数据库存在，则不只报出warning，不写会报错<br>CHRARCTER SET gbk:为表设置编码方式，如果不设置则用mysql默认的编码方式</p>
<p><br><br><a id="more"></a></p>
<h2 id="查看数据库列表"><a href="#查看数据库列表" class="headerlink" title="查看数据库列表"></a>查看数据库列表</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SHOW &#123; DATABASES | SCHEMAS &#125; [LIKE &apos;pattern&apos; | WHERE expr];</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="查看数据库详情"><a href="#查看数据库详情" class="headerlink" title="查看数据库详情"></a>查看数据库详情</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SHOW CREATE DATABASE xx; 展示数据库t1的创建命令和编码形式</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="数据库的修改：ALTER"><a href="#数据库的修改：ALTER" class="headerlink" title="数据库的修改：ALTER"></a>数据库的修改：ALTER</h2><p>修改数据库编码方式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ALTER &#123; DATABASE | SCHEMAS &#125; [db_name][DEFAULT] </div><div class="line">CHARACTER SET [=] charset_name</div></pre></td></tr></table></figure></p>
<p><br></p>
<h2 id="删除数据库：DROP"><a href="#删除数据库：DROP" class="headerlink" title="删除数据库：DROP"></a>删除数据库：DROP</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">DROP &#123; DATABASE | SCHEMAS &#125; [IF EXISTS] db_name;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;创建数据库&quot;&gt;&lt;a href=&quot;#创建数据库&quot; class=&quot;headerlink&quot; title=&quot;创建数据库&quot;&gt;&lt;/a&gt;创建数据库&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;CREATE &amp;#123;DATABASE | SCHEMA&amp;#125; [IF NOT EXISTS] db_name &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[DEFAULT] CHARACTER SET [=] charset_name;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;DATABASE和SCHEMA是相同的，任选其一&lt;br&gt;IF NOT EXISTS:如果创建的数据库存在，则不只报出warning，不写会报错&lt;br&gt;CHRARCTER SET gbk:为表设置编码方式，如果不设置则用mysql默认的编码方式&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL语句规范</title>
    <link href="http://yoursite.com/post/ed36abd2.html"/>
    <id>http://yoursite.com/post/ed36abd2.html</id>
    <published>2018-06-02T10:18:26.000Z</published>
    <updated>2018-06-04T05:47:03.645Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MySql语句规范"><a href="#MySql语句规范" class="headerlink" title="MySql语句规范"></a>MySql语句规范</h2><ol>
<li>关键字和函数名称全部大写</li>
<li>数据库名称、表名称、字段名称全部小写</li>
<li>SQL语句必须以分号结尾</li>
</ol>
<p><br></p>
<a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;MySql语句规范&quot;&gt;&lt;a href=&quot;#MySql语句规范&quot; class=&quot;headerlink&quot; title=&quot;MySql语句规范&quot;&gt;&lt;/a&gt;MySql语句规范&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;关键字和函数名称全部大写&lt;/li&gt;
&lt;li&gt;数据库名称、表名称、字段名称全部小写&lt;/li&gt;
&lt;li&gt;SQL语句必须以分号结尾&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL登录和退出</title>
    <link href="http://yoursite.com/post/20f3fae1.html"/>
    <id>http://yoursite.com/post/20f3fae1.html</id>
    <published>2018-06-02T09:41:30.000Z</published>
    <updated>2018-06-02T15:02:35.543Z</updated>
    
    <content type="html"><![CDATA[<h2 id="mysql命令参数"><a href="#mysql命令参数" class="headerlink" title="mysql命令参数"></a>mysql命令参数</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">-D,--database=name    打开指定数据库 </div><div class="line">--delimiter=name      指定分隔符</div><div class="line">-h,--host=name        服务器名称</div><div class="line">-p,--password[=name]  密码</div><div class="line">-P,--port=#           端口号（默认为3306）</div><div class="line">--prompt=name         设置提示符</div><div class="line">-u,--user=name        用户名</div><div class="line">-V,--version          输出版本信息且推出</div></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql -uroot -P3306 -hlocalhost -p</div></pre></td></tr></table></figure>
<h2 id="退出"><a href="#退出" class="headerlink" title="退出"></a>退出</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mysql&gt;exit;</div><div class="line">mysql&gt;quit;</div><div class="line">mysql&gt;\q;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;mysql命令参数&quot;&gt;&lt;a href=&quot;#mysql命令参数&quot; class=&quot;headerlink&quot; title=&quot;mysql命令参数&quot;&gt;&lt;/a&gt;mysql命令参数&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;-D,--database=name    打开指定数据库 &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;--delimiter=name      指定分隔符&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-h,--host=name        服务器名称&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-p,--password[=name]  密码&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-P,--port=#           端口号（默认为3306）&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;--prompt=name         设置提示符&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-u,--user=name        用户名&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-V,--version          输出版本信息且推出&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL配置</title>
    <link href="http://yoursite.com/post/b62959c1.html"/>
    <id>http://yoursite.com/post/b62959c1.html</id>
    <published>2018-06-02T09:26:17.000Z</published>
    <updated>2018-06-02T14:58:46.055Z</updated>
    
    <content type="html"><![CDATA[<p>配置文件的位置不一，在Centos7.4和MySQL5.5上是在<code>/etc/my.cnf</code><br>也可能在<code>/etc/mysql/my.cnf</code></p>
<h2 id="修改编码方式"><a href="#修改编码方式" class="headerlink" title="修改编码方式"></a>修改编码方式</h2><p>在mysql中可以通过<code>status</code>查看编码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[mysql]</div><div class="line">default-character-set=utf8</div><div class="line"></div><div class="line">[mysqld]</div><div class="line">character-set-server=utf8</div></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="修改提示符"><a href="#修改提示符" class="headerlink" title="修改提示符"></a>修改提示符</h2><ol>
<li><p>连接客户端时通过参数指定</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mysql -uroot -p --prompt 提示符</div><div class="line"></div><div class="line">mysql -uroot -p --prompt &quot;[\D-\d\h\u]&quot;</div></pre></td></tr></table></figure>
</li>
<li><p>连接上客户端后，通过prompt命令修改</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql&gt;prompt 提示符</div></pre></td></tr></table></figure>
</li>
</ol>
<p>提示符有：<br>\D     完整的日期<br>\d     当前数据库<br>\h     服务器名称<br>\u     当前用户</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;配置文件的位置不一，在Centos7.4和MySQL5.5上是在&lt;code&gt;/etc/my.cnf&lt;/code&gt;&lt;br&gt;也可能在&lt;code&gt;/etc/mysql/my.cnf&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;修改编码方式&quot;&gt;&lt;a href=&quot;#修改编码方式&quot; class=&quot;headerlink&quot; title=&quot;修改编码方式&quot;&gt;&lt;/a&gt;修改编码方式&lt;/h2&gt;&lt;p&gt;在mysql中可以通过&lt;code&gt;status&lt;/code&gt;查看编码&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[mysql]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;default-character-set=utf8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[mysqld]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;character-set-server=utf8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL目录结构</title>
    <link href="http://yoursite.com/post/1c0eeefa.html"/>
    <id>http://yoursite.com/post/1c0eeefa.html</id>
    <published>2018-06-02T09:09:21.000Z</published>
    <updated>2018-06-02T15:02:35.543Z</updated>
    
    <content type="html"><![CDATA[<p>使用yum安装MySQL后的各目录位置<br>相关路径直接通过<code>find / -name &quot;mysql*&quot;</code>和<code>whereis mysqld</code>查找：</p>
<p>/usr/lib64/mysql      库文件<br>/usr/share/mysql      配置文件，5.5后的默认安装路径<br>/var/lib/mysql        数据库目录<br>/etc/rc.d/init.d/     启动脚本<br>/usr/bin/             mysqladmin\mysqldump命令<br>/usr/share/doc/       文档<br><a id="more"></a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用yum安装MySQL后的各目录位置&lt;br&gt;相关路径直接通过&lt;code&gt;find / -name &amp;quot;mysql*&amp;quot;&lt;/code&gt;和&lt;code&gt;whereis mysqld&lt;/code&gt;查找：&lt;/p&gt;
&lt;p&gt;/usr/lib64/mysql      库文件&lt;br&gt;/usr/share/mysql      配置文件，5.5后的默认安装路径&lt;br&gt;/var/lib/mysql        数据库目录&lt;br&gt;/etc/rc.d/init.d/     启动脚本&lt;br&gt;/usr/bin/             mysqladmin\mysqldump命令&lt;br&gt;/usr/share/doc/       文档&lt;br&gt;
    
    </summary>
    
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Linux 文件系统</title>
    <link href="http://yoursite.com/post/f525ac74.html"/>
    <id>http://yoursite.com/post/f525ac74.html</id>
    <published>2018-06-02T08:46:30.647Z</published>
    <updated>2018-06-02T08:46:30.603Z</updated>
    
    <content type="html"><![CDATA[<p>linux中一切皆文件。目录为目录文件。普通文件用来保存数据，目录文件用来保存文件<br>文件系统：<br>Windows里面是这样的：C:\Program files\office11\word\word.exe<br>Linux里面是这样的：/etc/sysconfig/network-scripts/ifcfg-eth0</p>
<p>文件有两类数据：<br>元数据：metadata  元数据指用来描述一个文件的特征的系统数据，诸如访问权限、文件拥有者以及文件数据块的分布信息(inode…)等等。<br>数据：data  数据是指普通文件中的实际数据。</p>
<p>1、文件名严格区分字符大小写；file1, File1, FILE1是不同的文件；<br>2、文件名可使用除/以外的任意字符，不建议使用特殊字符；  /: 表示根目录，也用做路径分隔符；<br>3、文件名长度最长不能超过255个字符；<br>4、所以.开头的文件，均为隐藏文件；</p>
<p>LSB: Linux Standard Base Linux标准库</p>
<a id="more"></a>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;linux中一切皆文件。目录为目录文件。普通文件用来保存数据，目录文件用来保存文件&lt;br&gt;文件系统：&lt;br&gt;Windows里面是这样的：C:\Program files\office11\word\word.exe&lt;br&gt;Linux里面是这样的：/etc/sysconfig/network-scripts/ifcfg-eth0&lt;/p&gt;
&lt;p&gt;文件有两类数据：&lt;br&gt;元数据：metadata  元数据指用来描述一个文件的特征的系统数据，诸如访问权限、文件拥有者以及文件数据块的分布信息(inode…)等等。&lt;br&gt;数据：data  数据是指普通文件中的实际数据。&lt;/p&gt;
&lt;p&gt;1、文件名严格区分字符大小写；file1, File1, FILE1是不同的文件；&lt;br&gt;2、文件名可使用除/以外的任意字符，不建议使用特殊字符；  /: 表示根目录，也用做路径分隔符；&lt;br&gt;3、文件名长度最长不能超过255个字符；&lt;br&gt;4、所以.开头的文件，均为隐藏文件；&lt;/p&gt;
&lt;p&gt;LSB: Linux Standard Base Linux标准库&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
</feed>
