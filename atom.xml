<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>太阳落下</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-05-05T03:11:59.409Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>木鱼</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux 专题导航</title>
    <link href="http://yoursite.com/2018/06/05/Linux-%E4%B8%93%E9%A2%98%E5%AF%BC%E8%88%AA/"/>
    <id>http://yoursite.com/2018/06/05/Linux-专题导航/</id>
    <published>2018-06-05T03:09:32.000Z</published>
    <updated>2018-05-05T03:11:59.409Z</updated>
    
    <content type="html"><![CDATA[<h2 id="文件管理"><a href="#文件管理" class="headerlink" title="文件管理"></a>文件管理</h2><h2 id="权限管理"><a href="#权限管理" class="headerlink" title="权限管理"></a>权限管理</h2><h2 id="软件管理"><a href="#软件管理" class="headerlink" title="软件管理"></a>软件管理</h2><h2 id="网络管理"><a href="#网络管理" class="headerlink" title="网络管理"></a>网络管理</h2><h2 id="服务管理"><a href="#服务管理" class="headerlink" title="服务管理"></a>服务管理</h2><h2 id="系统管理"><a href="#系统管理" class="headerlink" title="系统管理"></a>系统管理</h2>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;文件管理&quot;&gt;&lt;a href=&quot;#文件管理&quot; class=&quot;headerlink&quot; title=&quot;文件管理&quot;&gt;&lt;/a&gt;文件管理&lt;/h2&gt;&lt;h2 id=&quot;权限管理&quot;&gt;&lt;a href=&quot;#权限管理&quot; class=&quot;headerlink&quot; title=&quot;权限管理&quot;&gt;&lt;/a
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2018/05/11/Linux%E6%9C%8D%E5%8A%A1%E7%AE%A1%E7%90%86/"/>
    <id>http://yoursite.com/2018/05/11/Linux服务管理/</id>
    <published>2018-05-11T08:11:49.000Z</published>
    <updated>2018-05-11T09:42:10.413Z</updated>
    
    <content type="html"><![CDATA[<h2 id="系统的运行级别"><a href="#系统的运行级别" class="headerlink" title="系统的运行级别"></a>系统的运行级别</h2><table>
<thead>
<tr>
<th>运行级别</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>0</td>
<td>关机</td>
</tr>
<tr>
<td>1</td>
<td>单用户模式，主要用于系统修复</td>
</tr>
<tr>
<td>2</td>
<td>不完全的命令行,不含NFS服务</td>
</tr>
<tr>
<td>3</td>
<td>完全的命令行</td>
</tr>
<tr>
<td>4</td>
<td>系统暴露</td>
</tr>
<tr>
<td>5</td>
<td>图形模式</td>
</tr>
<tr>
<td>6</td>
<td>重启</td>
</tr>
</tbody>
</table>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">runlevel			#查看运行级别</div><div class="line">init 5				#修改运行级别</div><div class="line"></div><div class="line">vi /etc/inittab		#修改系统默认运行级别</div><div class="line">id:3:initdefault:</div><div class="line">#系统开机后直接进入哪个运行级别</div></pre></td></tr></table></figure>
<h2 id="服务的分类"><a href="#服务的分类" class="headerlink" title="服务的分类"></a>服务的分类</h2><p><img src="http://ow3dy62zt.bkt.clouddn.com/IMG33.png" alt=""></p>
<p>独立服务：独立的运行在内存中，一直在运行的</p>
<p>基于xinetd的服务：<br>服务由xinetd来管控，平时不运行，一有访问，先到xinetd，然后由xinetd去调用<br>现在基本上不再使用xinetd。<br>默认没有安装，可以通过yum方式安装xinetd服务，在安装之前使用chkconfig可以查看系统的服务状态，安装完整之后会出现一组xinetd管理的服务，默认都是关闭的。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">chkconfig --list			#查看xinetd是否安装</div><div class="line">yum -y install xinetd		#安装xinetd</div><div class="line">chkconfig --list			#查看xinetd服务</div></pre></td></tr></table></figure></p>
<p>RPM安装服务和源码包安装服务的区别：安装位置不同</p>
<ul>
<li>源码包安装在知道位置，一般是<code>/usr/local</code></li>
<li>RPM包安装在默认位置中</li>
</ul>
<p>| /etc/            |      配置文件位置|<br>|/etc/init.d/      |  启动脚本位置|<br>|/etc/sysconfig/ |     初始化环境配置文件位置|<br>| /etc/xinetd.conf  |   xinetd配置文件|<br>| /etc/xinetd/     |    基于xinetd服务的启动脚本|<br>| /var/lib/       |     服务产生的数据目录|<br>| /var/log/       |     日志|</p>
<h2 id="查询已经安装的服务"><a href="#查询已经安装的服务" class="headerlink" title="查询已经安装的服务"></a>查询已经安装的服务</h2><ol>
<li><p>RPM包安装的服务：<code>chkconfig --list</code><br>查看服务自启动状态，可以看到所有RPM包安装的服务</p>
</li>
<li><p>源码包安装的服务：查看服务安装位置，一般是<code>/usr/local</code>下</p>
</li>
</ol>
<h2 id="服务与端口"><a href="#服务与端口" class="headerlink" title="服务与端口"></a>服务与端口</h2><p>端口：每个协议都有65536个端口，默认给某个协议提供了端口，那么此端口就不在为其他协议体统服务。<br>在<code>/etc/services</code>中可以查看服务与端口对应关系<br>因为服务与端口的这种一一对应的关系，所以可以通过查询端口来查看服务状态<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ps aux  #查看系统中运行了哪些服务（包含程序）</div></pre></td></tr></table></figure></p>
<h2 id="查询系统中开启的服务"><a href="#查询系统中开启的服务" class="headerlink" title="查询系统中开启的服务"></a>查询系统中开启的服务</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">netstat -tlunp</div><div class="line"> -t:列出tcp数据</div><div class="line"> -u:列出udp数据</div><div class="line"> -l:列出正在监听的网络服务(不包含已连接的网络服务)</div><div class="line"> -n:用端口号来显示服务，而不是服务名</div><div class="line"> -p：列出该服务的进程id（PID）</div><div class="line"></div><div class="line">netstat -an  #查看系统中开了哪些程序和服务占用了端口</div></pre></td></tr></table></figure>
<h2 id="服务的启动与自启动"><a href="#服务的启动与自启动" class="headerlink" title="服务的启动与自启动"></a>服务的启动与自启动</h2><p>服务启动：就是在当前系统中让服务运行，并提供功能。<br>服务自启动：让服务在系统开机或者重启动之后，随着系统的启动而自动启动服务。</p>
<p>推荐统一用配置文件的方式，这样不容易冲突</p>
<p><img src="http://ow3dy62zt.bkt.clouddn.com/IMG32.jpg" alt=""></p>
<ul>
<li><code>chkconfig off</code>不需要添加启动级别</li>
<li>xinetd自启动和启动是相通的，相互一致</li>
<li>源码包安装服务的启动使用绝对路径，调用启动脚本来启动。不同的源码包的启动脚本不同。<br>可以查看源码包的安装说明，其中有启动脚本的方法</li>
<li>让源码包的服务能被service命令管理启动：在init.d目录中做个软链接<br>`ln -s /usr/local/apache2/bin/apache    /etc/init.d/</li>
<li><p>让源码包服务能被 chkconfig 与  ntsysv 命令管理自启动</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">vi /etc/init.d/apache</div><div class="line"># chkconfig:35 86 76</div><div class="line">#指定httpd脚本可以被chkconfig命令管理。</div><div class="line">#格式： chkconfig ： 运行级别  启动顺序  关闭顺序</div><div class="line">#description： source package apache   </div><div class="line">#说明，内容随意。</div><div class="line">把这两句加到/etc/rc.d/init.d/apachetctl 保存(需要带#)</div><div class="line">然后chkconfig --add apache</div></pre></td></tr></table></figure>
</li>
<li><p>源码安装的Apache输入IP地址默认打开的网页是/usr/local/apache2/htdocs/index.html<br>rpm包安装的Apache默认打开的是/var/www/html/下的文件，但是默认是没有的，所以打开Apache测试页。当在这个目录下建一个网页后，打开的是新增的网页。</p>
</li>
<li>/etc/rc3.d/下面的文件是运行级别3时，系统开启与关闭分别要执行的服务文件，启动顺序与关闭顺序不能和现有的冲突</li>
</ul>
<p>Linux服务列表，服务的可能/自启动<br>链接: <a href="https://pan.baidu.com/s/13cuRwKQ24MmGciC0twAH0Q" target="_blank" rel="external">https://pan.baidu.com/s/13cuRwKQ24MmGciC0twAH0Q</a> 密码: 4qg6</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;系统的运行级别&quot;&gt;&lt;a href=&quot;#系统的运行级别&quot; class=&quot;headerlink&quot; title=&quot;系统的运行级别&quot;&gt;&lt;/a&gt;系统的运行级别&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;运行级别&lt;/th&gt;
&lt;th&gt;含义&lt;/th&gt;
&lt;/tr&gt;

    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Fiddler for Linux 安装</title>
    <link href="http://yoursite.com/2018/05/11/Fiddler-for-Linux-%E5%AE%89%E8%A3%85/"/>
    <id>http://yoursite.com/2018/05/11/Fiddler-for-Linux-安装/</id>
    <published>2018-05-11T02:01:44.000Z</published>
    <updated>2018-05-11T02:04:31.372Z</updated>
    
    <content type="html"><![CDATA[<ol>
<li><p>安装mono：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt install mono-complete</div></pre></td></tr></table></figure>
</li>
<li><p>下载Fiddler<br><a href="https://www.telerik.com/download/fiddler" target="_blank" rel="external">https://www.telerik.com/download/fiddler</a></p>
</li>
<li><p>用mono安装它，从提取的目录中运行：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mono Fiddler.exe</div></pre></td></tr></table></figure>
</li>
</ol>
<p>或者运行 <code>mono /path/to/extracted/fiddler/Fiddler.exe</code></p>
]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;安装mono：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;co
    
    </summary>
    
    
      <category term="工具" scheme="http://yoursite.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Linux 安装Tomcat并部署Java web项目</title>
    <link href="http://yoursite.com/2018/05/07/Linux-%E5%AE%89%E8%A3%85Tomcat%E5%B9%B6%E9%83%A8%E7%BD%B2Java-web%E9%A1%B9%E7%9B%AE/"/>
    <id>http://yoursite.com/2018/05/07/Linux-安装Tomcat并部署Java-web项目/</id>
    <published>2018-05-07T14:10:33.000Z</published>
    <updated>2018-05-07T14:49:33.155Z</updated>
    
    <content type="html"><![CDATA[<h2 id="在Linux上安装JDK"><a href="#在Linux上安装JDK" class="headerlink" title="在Linux上安装JDK"></a>在Linux上安装JDK</h2><p>略</p>
<h2 id="在Linux上安装FTP"><a href="#在Linux上安装FTP" class="headerlink" title="在Linux上安装FTP"></a>在Linux上安装FTP</h2><p>略</p>
<h2 id="在Linux上安装Tomcat"><a href="#在Linux上安装Tomcat" class="headerlink" title="在Linux上安装Tomcat"></a>在Linux上安装Tomcat</h2><p>下载Tomcat，利用FTP上传到服务器上<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">#解压，位置随意</div><div class="line">tar -zxvf apache-tomcat-8.0.29.tar.gz</div><div class="line"></div><div class="line">#防火墙里面开放8080端口</div><div class="line">vim /etc/sysconfig/iptables</div><div class="line">#重启防火墙</div><div class="line">service iptables restart</div><div class="line"></div><div class="line">#启动Tomcat</div><div class="line">/usr/local/tomcat/bin/startup.sh</div><div class="line"></div><div class="line">#tomcat自启动 </div><div class="line">vim /etc/rc.d/rc.local</div><div class="line">/usr/local/tomcat/bin/startup.sh</div></pre></td></tr></table></figure></p>
<p><img src="http://ow3dy62zt.bkt.clouddn.com/IMG31.png" alt=""></p>
<h2 id="Idea打包Java-web项目"><a href="#Idea打包Java-web项目" class="headerlink" title="Idea打包Java web项目"></a>Idea打包Java web项目</h2><p>点击Idea左下角，在右侧出现maven project选项，单击maven project选项，出现菜单，选择其中的Lifecycle菜单项，展开，执行里面的package命令即可。<br>在项目文件夹/target/下可以找到 *.war 文件。</p>
<h2 id="将war文件部署到tomcat上"><a href="#将war文件部署到tomcat上" class="headerlink" title="将war文件部署到tomcat上"></a>将war文件部署到tomcat上</h2><ol>
<li>将war文件拷贝到tomcat安装目录的<code>$TOMCAT_HOME/webapps</code>文件夹下。</li>
<li>修改<code>$TOMCAT_HOME/conf/server.xml</code>，在Host配置段中添加类似于如下内容：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;Context path=&quot;/&quot; docBase=&quot;appname.war&quot; debug=&quot;0&quot; privileged=&quot;true&quot; reloadable=&quot;true&quot;/&gt;</div></pre></td></tr></table></figure>
</li>
</ol>
<p>docBase=”appname.war”中的appname.war 替换成自己的war的名字。</p>
<ol>
<li>重启tomcat，然后访问<a href="http://localhost:8080/appname" target="_blank" rel="external">http://localhost:8080/appname</a> 即可。</li>
</ol>
<p>参考：</p>
<ul>
<li><a href="https://blog.csdn.net/to_baidu/article/details/52823402" target="_blank" rel="external">https://blog.csdn.net/to_baidu/article/details/52823402</a></li>
<li><a href="https://blog.csdn.net/yums467/article/details/51660683" target="_blank" rel="external">https://blog.csdn.net/yums467/article/details/51660683</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;在Linux上安装JDK&quot;&gt;&lt;a href=&quot;#在Linux上安装JDK&quot; class=&quot;headerlink&quot; title=&quot;在Linux上安装JDK&quot;&gt;&lt;/a&gt;在Linux上安装JDK&lt;/h2&gt;&lt;p&gt;略&lt;/p&gt;
&lt;h2 id=&quot;在Linux上安装FTP&quot;&gt;&lt;a
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux ftp命令</title>
    <link href="http://yoursite.com/2018/05/07/Linux-ftp%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2018/05/07/Linux-ftp命令/</id>
    <published>2018-05-07T09:52:45.000Z</published>
    <updated>2018-05-07T12:03:35.139Z</updated>
    
    <content type="html"><![CDATA[<h2 id="连接ftp服务器"><a href="#连接ftp服务器" class="headerlink" title="连接ftp服务器"></a>连接ftp服务器</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ftp [hostname| ip-address]</div></pre></td></tr></table></figure>
<h2 id="列出文件列表以及切换目录"><a href="#列出文件列表以及切换目录" class="headerlink" title="列出文件列表以及切换目录"></a>列出文件列表以及切换目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ls</div><div class="line">cd</div></pre></td></tr></table></figure>
<h2 id="下载文件"><a href="#下载文件" class="headerlink" title="下载文件"></a>下载文件</h2><p>下载文件通常用get和mget这两条命令。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">#get [remote-file] [local-file]</div><div class="line">#获取远程服务器上/usr/your/1.htm</div><div class="line">ftp&gt; get /usr/your/1.htm 1.htm</div><div class="line"></div><div class="line">mget [remote-files]</div><div class="line">#从远端主机接收一批文件至本地主机</div><div class="line">#获取服务器上/usr/your/下的所有文件</div><div class="line">cd /usr/your/</div><div class="line">mget *.*</div><div class="line"></div><div class="line">#显示下载进度</div><div class="line">ftp&gt; hash</div></pre></td></tr></table></figure>
<h2 id="上传文件"><a href="#上传文件" class="headerlink" title="上传文件"></a>上传文件</h2><p>注意上传命令需要指定目标文件名<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">put local-file [remote-file]</div><div class="line">#将本地一个文件传送至远端主机中。</div><div class="line">#把本地的1.htm传送到远端主机/usr/your,并改名为2.htm</div><div class="line">ftp&gt; put 1.htm /usr/your/2.htm</div><div class="line"></div><div class="line">mput local-files</div><div class="line">#将本地主机中一批文件传送至远端主机。</div><div class="line">#把本地当前目录下所有html文件上传到服务器/usr/your/ 下</div><div class="line">ftp&gt; cd /usr/your</div><div class="line">ftp&gt; mput *.htm</div></pre></td></tr></table></figure></p>
<h2 id="断开连接"><a href="#断开连接" class="headerlink" title="断开连接"></a>断开连接</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">bye：中断与服务器的连接</div><div class="line">ftp&gt; bye</div></pre></td></tr></table></figure>
<h2 id="改变传输模式"><a href="#改变传输模式" class="headerlink" title="改变传输模式"></a>改变传输模式</h2><p>ftp的传输模式有ascii模式和二进制模式<br>直接输入ascii则设置传输模式为ascii模式<br>直接输入binary则设置传输模式为binary模式</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ftp&gt; ascii</div><div class="line">ftp&gt; binary</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;连接ftp服务器&quot;&gt;&lt;a href=&quot;#连接ftp服务器&quot; class=&quot;headerlink&quot; title=&quot;连接ftp服务器&quot;&gt;&lt;/a&gt;连接ftp服务器&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cl
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux 安装vsftpd</title>
    <link href="http://yoursite.com/2018/05/07/Linux-%E5%AE%89%E8%A3%85vsftpd/"/>
    <id>http://yoursite.com/2018/05/07/Linux-安装vsftpd/</id>
    <published>2018-05-07T07:15:39.000Z</published>
    <updated>2018-05-07T11:12:43.409Z</updated>
    
    <content type="html"><![CDATA[<p>vsftpd 的全称是”very secure FTP daemon“，是一款在Linux发行版中最受推崇的FTP服务器程序。特点是小巧轻快，安全易用。</p>
<p>总结起来只有几步</p>
<ul>
<li>安装</li>
<li>配置文件</li>
<li>防火墙</li>
<li>设置ftp用户</li>
</ul>
<p>一、安装FTP服务器<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">#查看是否已经安装vsftpd</div><div class="line">rpm -qa | grep vsftpd</div><div class="line"></div><div class="line">yum -y install vsftpd</div></pre></td></tr></table></figure></p>
<p>二、手动启动，并使其能够从下次系统启动时自动启动<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">systemctl start vsftpd</div><div class="line">systemctl enable vsftpd</div><div class="line">#chkconfig vsftpd on</div></pre></td></tr></table></figure></p>
<p>三、允许从外部系统访问FTP服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">firewall-cmd --permanent --zone=public  --add-port=21/tcp</div><div class="line">firewall-cmd --permanent --zone=public  --add-service=ftp</div><div class="line">firewall-cmd --reload</div></pre></td></tr></table></figure></p>
<p>四、备份配置文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cp /etc/vsftpd/vsftpd.conf /etc/vsftpd/vsftpd.conf.bak</div><div class="line">cp /etc/vsftpd.userlist /etc/vsftpd.userlist.bak</div></pre></td></tr></table></figure></p>
<p>五、配置<code>/etc/vsftpd/vsftpd.conf</code><br>没有的请自行添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">anonymous_enable = NO＃禁用匿名登录</div><div class="line">local_enable = YES＃允许本地登录</div><div class="line">write_enable = YES＃启用更改文件系统的FTP命令</div><div class="line">local_umask = 022＃用于本地用户创建文件的umask值</div><div class="line">dirmessage_enable = YES＃用户首次进入新目录时启用显示消息</div><div class="line">xferlog_enable = YES＃会保存一个日志文件，详细说明上传和下载</div><div class="line">connect_from_port_20 = YES＃使用服务器机器上的端口20（ftp-data）进行端口连接</div><div class="line">xferlog_std_format = YES＃保持标准的日志文件格式</div><div class="line">listen = NO＃阻止vsftpd在独立模式下运行</div><div class="line">listen_ipv6 = YES＃vsftpd将监听IPv6套接字而不是IPv4套接字</div><div class="line">pam_service_name = vsftpd＃vsftpd将使用的PAM服务的名称</div><div class="line">userlist_enable = YES＃启用vsftpd加载用户名列表</div><div class="line">tcp_wrappers = YES＃打开tcp</div></pre></td></tr></table></figure></p>
<p>FTP基于用户列表文件允许/拒绝对用户的FTP访问<br>默认情况下，如果userlist_enable = YES  并且userlist_deny = YES，在<code>userlist_file=/etc/vsftpd/user_list</code>列出的用户都无法登录访问FTP。</p>
<p>如果userlist_deny = NO，这意味着只有<code>userlist_file = /etc/vsftpd/user_list</code>中明确列出的用户才能登录。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">userlist_enable = YES ＃vsftpd将加载从userlist_file给出的用户名列表</div><div class="line">userlist_file = /etc/vsftpd/user_list＃存储用户名</div><div class="line">userlist_deny = NO</div></pre></td></tr></table></figure>
<p>when users login to the FTP server, they are placed in a chroot’ed jail, this is the local root directory which will act as their home directory for the FTP session only.<br>当用户登录到FTP服务器时，他们被放置在chroot jail里，chroot jail是本地根目录，会作为FTP会话的主目录</p>
<p>限制FTP用户到他们的主目录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">chroot_local_user = YES </div><div class="line">allow_writeable_chroot = YES</div></pre></td></tr></table></figure></p>
<p><code>chroot_local_user = YES</code>意味着本地用户通过默认设置登录后，他们的主目录将被放置在chroot jail中</p>
<p>并且默认情况下，vsftpd不允许chroot jail目录因安全原因而可写，但是，我们可以使用选项<code>allow_writeable_chroot = YES</code>来覆盖此设置。</p>
<p>保存该文件并关闭它</p>
<p>六、配置SELinux<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">setsebool -P ftp_home_dir on</div><div class="line">#会报错</div></pre></td></tr></table></figure></p>
<p>set SELinux rule to allow FTP to read/write user’s home directory<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">semanage boolean -m ftpd_full_access --on</div><div class="line">-bash: semanage: command not found</div><div class="line">yum provides semanage</div><div class="line">yum install policycoreutils-python</div><div class="line">systemctl restart vsftpd</div></pre></td></tr></table></figure></p>
<p>七、测试FTP服务器<br>创建一个FTP用户<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">useradd -d /home/ftptest -g ftp -s /sbin/nologin ftptest</div><div class="line">passwd ftpuser</div></pre></td></tr></table></figure></p>
<p>将用户添加到文件/etc/vsftpd/user_list中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">echo ftptest &gt;&gt; /etc/vsftpd.userlist</div><div class="line">cat /etc/vsftpd.userlist</div></pre></td></tr></table></figure></p>
<p>分别测试匿名用户anonymous、root、ftptest</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">ftp 192.168.0.203</div><div class="line">anonymous	530</div><div class="line">root		530</div><div class="line">ftptest		230</div><div class="line"></div><div class="line">#root因为在/etc/ftpusers目录里所以无法登录，该目录为禁止登录的用户</div><div class="line">#ftptest进入后，执行ls，可以测试是否为ftptest用户自己的主目录</div></pre></td></tr></table></figure>
<p>八、配置不同的FTP用户主目录</p>
<p>使用<code>allow_writeable_chroot=YES</code>具有某些安全隐患，特别是在用户具有上载权限或shell访问权限的情况下。<br>只有当你确切地知道你在做什么时才激活这个选项。需要注意的是，这些安全性影响并不是vsftpd特有的，它们适用于所有提供将本地用户放入chroot jail的FTP守护进程。</p>
<p>注释掉之前的语句<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">＃allow_writeable_chroot = YES</div></pre></td></tr></table></figure></p>
<p>为用户创建替代本地根目录的目录（ravi您的可能不同），并将所有用户的写入权限移除到此目录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mkdir /home/ftptest/ftp</div><div class="line">chown nobody：nobody /home/ftptest/ftp</div><div class="line">chmod a+w /home/ftptest/ftp</div></pre></td></tr></table></figure></p>
<p>修改vsftpd配置文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">user_sub_token = $USER＃将用户名插入本地根目录</div><div class="line">local_root = /home/$USER/ftp＃定义任何用户本地根目录</div></pre></td></tr></table></figure></p>
<p>重启vsftpd</p>
<p>注意上传命令需要指定目标文件名<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ftp put /path/to/local_file remote_file_name</div></pre></td></tr></table></figure></p>
<p>参考：</p>
<ul>
<li>重点<a href="https://www.kancloud.cn/chandler/bc-linux/52710" target="_blank" rel="external">https://www.kancloud.cn/chandler/bc-linux/52710</a></li>
<li><a href="https://www.tecmint.com/install-ftp-server-in-centos-7/" target="_blank" rel="external">https://www.tecmint.com/install-ftp-server-in-centos-7/</a></li>
<li><a href="https://wsgzao.github.io/post/vsftpd/" target="_blank" rel="external">https://wsgzao.github.io/post/vsftpd/</a></li>
<li><a href="https://blog.csdn.net/aiynmimi/article/details/77012507" target="_blank" rel="external">https://blog.csdn.net/aiynmimi/article/details/77012507</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;vsftpd 的全称是”very secure FTP daemon“，是一款在Linux发行版中最受推崇的FTP服务器程序。特点是小巧轻快，安全易用。&lt;/p&gt;
&lt;p&gt;总结起来只有几步&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安装&lt;/li&gt;
&lt;li&gt;配置文件&lt;/li&gt;
&lt;li&gt;防火墙&lt;/
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux 安装Apache</title>
    <link href="http://yoursite.com/2018/05/07/Linux-%E5%AE%89%E8%A3%85Apache/"/>
    <id>http://yoursite.com/2018/05/07/Linux-安装Apache/</id>
    <published>2018-05-07T06:15:33.000Z</published>
    <updated>2018-05-07T07:10:44.118Z</updated>
    
    <content type="html"><![CDATA[<p>安裝Apache<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo yum install httpd</div></pre></td></tr></table></figure></p>
<p>启动Apache，并且设定为开机自动启动<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo systemctl start httpd</div><div class="line">sudo systemctl enable httpd</div></pre></td></tr></table></figure></p>
<p>允许http服务通过防火墙<br>CentOS 7的内置防火墙默认设置为阻止网络流量<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">sudo firewall-cmd --add-service=http --permanent</div><div class="line">sudo firewall-cmd --add-service=https --permanent</div><div class="line">#sudo firewall-cmd --permanent --add-port=80/tcp</div><div class="line">#sudo firewall-cmd --permanent --add-port=443/tcp</div><div class="line">sudo systemctl restart firewalld</div></pre></td></tr></table></figure></p>
<p>重启Apache<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo systemctl restart httpd.service</div></pre></td></tr></table></figure></p>
<p>配置文件</p>
<p><code>/etc/httpd/conf/httpd.conf</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">DocumentRoot &quot;/var/www/html/example.com/public_html&quot;</div><div class="line"></div><div class="line">...</div><div class="line"></div><div class="line">&lt;IfModule prefork.c&gt;</div><div class="line">    StartServers        5</div><div class="line">    MinSpareServers     20</div><div class="line">    MaxSpareServers     40</div><div class="line">    MaxRequestWorkers   256</div><div class="line">    MaxConnectionsPerChild 5500</div><div class="line">&lt;/IfModule&gt;</div></pre></td></tr></table></figure></p>
<p><code>/etc/httpd/conf.d/vhost.conf</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">NameVirtualHost *:80</div><div class="line"></div><div class="line">&lt;VirtualHost *:80&gt;</div><div class="line">    ServerAdmin webmaster@example.com</div><div class="line">    ServerName example.com</div><div class="line">    ServerAlias www.example.com</div><div class="line">    DocumentRoot /var/www/html/example.com/public_html/</div><div class="line">    ErrorLog /var/www/html/example.com/logs/error.log</div><div class="line">    CustomLog /var/www/html/example.com/logs/access.log combined</div><div class="line">&lt;/VirtualHost&gt;</div></pre></td></tr></table></figure></p>
<p>创建上面引用的目录：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo mkdir -p /var/www/html/example.com/&#123;public_html,logs&#125;</div></pre></td></tr></table></figure></p>
<p>检查Apache的状态<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo systemctl status httpd</div></pre></td></tr></table></figure></p>
<p>停止Apache<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo systemctl stop httpd</div></pre></td></tr></table></figure></p>
<p>参考：</p>
<p><a href="https://www.linode.com/docs/web-servers/apache/install-and-configure-apache-on-centos-7/" target="_blank" rel="external">https://www.linode.com/docs/web-servers/apache/install-and-configure-apache-on-centos-7/</a><br><a href="https://www.liquidweb.com/kb/how-to-install-apache-on-centos-7/" target="_blank" rel="external">https://www.liquidweb.com/kb/how-to-install-apache-on-centos-7/</a><br>SELinux：<a href="https://www.brilliantcode.net/170/centos-7-install-apache-httpd/" target="_blank" rel="external">https://www.brilliantcode.net/170/centos-7-install-apache-httpd/</a><br>SELinux：<a href="https://www.brilliantcode.net/145/centos-7-check-selinux-status-enabled-or-not/" target="_blank" rel="external">https://www.brilliantcode.net/145/centos-7-check-selinux-status-enabled-or-not/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;安裝Apache&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux desktop entriy</title>
    <link href="http://yoursite.com/2018/05/07/Linux-desktop-entry/"/>
    <id>http://yoursite.com/2018/05/07/Linux-desktop-entry/</id>
    <published>2018-05-07T03:17:37.000Z</published>
    <updated>2018-05-07T03:28:54.314Z</updated>
    
    <content type="html"><![CDATA[<p>在 Windows 平台上，用户可以通过点击位于桌面或菜单上的快捷方式轻松打开目标应用程序。现代 Linux 桌面系统的应用程序是通过<code>*.desktop</code>文件管理的。</p>
<p>一个应用程序对应一个<code>.desktop</code>文件，根据是用户自己可见还是所有用户可见的不同而放在 <code>~/.local/share/applications</code>或者 <code>/usr/share/applications/</code> 目录中。</p>
<p>可以自己添加.desktop文件来增加应用程序到launcher里，<code>*.desktop</code>文件格式如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">[Desktop Entry]</div><div class="line">Encoding=UTF-8</div><div class="line">Name=火狐浏览器</div><div class="line">Name[en]=Firefox</div><div class="line">Name[en_US]=Firefox</div><div class="line">Comment=Firefox for jason</div><div class="line">Exec=/opt/firefox/firefox</div><div class="line">Icon=/opt/firefox/browser/icons/mozicon128.png</div><div class="line">Terminal=false</div><div class="line">Type=Application</div><div class="line">Categories=Application;Network;</div></pre></td></tr></table></figure>
<p>使用流程：</p>
<ol>
<li>创建文件，以.desktop为后缀。</li>
<li>编写内容，修改权限</li>
<li>测试是否能双击启动程序</li>
<li>移动到/usr/share/applications/目录下</li>
</ol>
<p>文件中不能有多余的全角或半角空格，否则会出错</p>
<p>参考：</p>
<ul>
<li><a href="https://linux.cn/article-9199-1.html" target="_blank" rel="external">https://linux.cn/article-9199-1.html</a></li>
<li><a href="https://wiki.archlinux.org/index.php/Desktop_entries_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87" target="_blank" rel="external">https://wiki.archlinux.org/index.php/Desktop_entries_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87</a>)</li>
<li><a href="https://www.ibm.com/developerworks/cn/linux/l-cn-dtef/index.html" target="_blank" rel="external">https://www.ibm.com/developerworks/cn/linux/l-cn-dtef/index.html</a></li>
<li><a href="https://blog.csdn.net/lwjdgl/article/details/49204659" target="_blank" rel="external">https://blog.csdn.net/lwjdgl/article/details/49204659</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在 Windows 平台上，用户可以通过点击位于桌面或菜单上的快捷方式轻松打开目标应用程序。现代 Linux 桌面系统的应用程序是通过&lt;code&gt;*.desktop&lt;/code&gt;文件管理的。&lt;/p&gt;
&lt;p&gt;一个应用程序对应一个&lt;code&gt;.desktop&lt;/code&gt;文件，
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux用户管理 查看用户</title>
    <link href="http://yoursite.com/2018/05/06/Linux%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86-%E6%9F%A5%E7%9C%8B%E7%94%A8%E6%88%B7/"/>
    <id>http://yoursite.com/2018/05/06/Linux用户管理-查看用户/</id>
    <published>2018-05-06T11:56:06.000Z</published>
    <updated>2018-05-06T12:21:32.128Z</updated>
    
    <content type="html"><![CDATA[<h3 id="查看用户"><a href="#查看用户" class="headerlink" title="查看用户"></a>查看用户</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">w：查看登录用户信息</div><div class="line">w 用户名</div><div class="line">user:登陆的用户名</div><div class="line">tty:登陆终端</div><div class="line">from:从哪个IP地址登陆</div><div class="line">login@:登陆时间</div><div class="line">idle:用户闲置时间</div><div class="line">jcpu:和终端连接所有进程占用的时间</div><div class="line">pcpu:当前进程所占用的时间</div><div class="line">what:正在运行的命令</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">who：查看登录用户信息</div><div class="line">who 用户名</div><div class="line">登录名</div><div class="line">登陆终端</div><div class="line">登录时间（登陆来源IP地址）</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">last：查询当前和过去登录的用户信息</div><div class="line">last  默认读取var/log/wtmp</div><div class="line">用户名</div><div class="line">登录终端</div><div class="line">登陆IP</div><div class="line">登录时间</div><div class="line">退出时间（在线时间）</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">lastlog：查看所有用户最后一次登录信息</div><div class="line">lastlog </div><div class="line">lastlog命令默认是读取/var/log/lastlog文件内容</div><div class="line">用户名</div><div class="line">登录终端</div><div class="line">登陆ip</div><div class="line">最后一次登陆时间</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">whoami				#显示当前登录用户名</div><div class="line">id 用户名			#显示指定用户信息，包括用户编号、用户编号、主要组编号及名称、附属组列表</div><div class="line">groups 用户名 		#显示用户所在的所有组，包括主要组和附属组</div><div class="line">chfn 用户名 		#设置用户资料，依次输入用户资料</div><div class="line">finger 用户名 		#显示用户详细资料，与chfn对应</div></pre></td></tr></table></figure>
<p>###切换用户<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">su 用户名 				#切换到其他用户下</div><div class="line">su 					</div><div class="line">#后面什么也不接表示切换到root用户下</div><div class="line">#普通用户进其他用户需要密码，root用户进普通用户不需要密码</div></pre></td></tr></table></figure></p>
<h3 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">touch /etc/nologin					#在etc目录下创建一个nologin文件(文件内容无关紧要)，暂时禁止除管理员外的用户登录</div><div class="line">passwd -l user1						#锁定账户</div><div class="line">passwd -u user1						#解锁账户</div><div class="line">passwd -d user1						#清除用户密码，无密码登录</div><div class="line"></div><div class="line">wall [想说的话] 相当于喇叭广播的功能</div><div class="line">talk [用户名] 聊天框里聊天</div><div class="line">write [用户名] 相当于密聊</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;查看用户&quot;&gt;&lt;a href=&quot;#查看用户&quot; class=&quot;headerlink&quot; title=&quot;查看用户&quot;&gt;&lt;/a&gt;查看用户&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pr
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux用户管理 新增/修改/删除用户</title>
    <link href="http://yoursite.com/2018/05/06/Linux%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86-%E6%96%B0%E5%A2%9E-%E4%BF%AE%E6%94%B9-%E5%88%A0%E9%99%A4%E7%94%A8%E6%88%B7/"/>
    <id>http://yoursite.com/2018/05/06/Linux用户管理-新增-修改-删除用户/</id>
    <published>2018-05-06T11:55:37.000Z</published>
    <updated>2018-05-06T12:00:27.594Z</updated>
    
    <content type="html"><![CDATA[<h2 id="用户基本命令"><a href="#用户基本命令" class="headerlink" title="用户基本命令"></a>用户基本命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">useradd 用户名					#添加用户，所在用户组与用户名同名</div><div class="line">useradd -g 组名 用户名			#添加用户，指定其所在的组</div><div class="line">useradd -d 目录 用户名 			#添加用户，制定其用户的家目录，没有指定所在组时，默认用户名就为用户组名</div><div class="line">#passwd 用户名					#新建的用户需要设置密码，设置用户目录</div><div class="line"></div><div class="line">usermod -c 注释信息 用户名 	  #为指定用户名添加注释</div><div class="line">usermod -l 新用户名 旧用户名 		#更改用户名</div><div class="line">usermod -d 目录 用户名 			#更改用户个人文件夹的路径</div><div class="line">usermod -g 新用户组 用户名 	#更改指定用户的所属组</div><div class="line">userdel 用户名 				#删除用户，但是不删除用户个人文件夹里的文件</div><div class="line">userdel -r 用户名 				#删除用户并且删除用户个人文件夹里的文件</div></pre></td></tr></table></figure>
<h2 id="用户组基本命令"><a href="#用户组基本命令" class="headerlink" title="用户组基本命令"></a>用户组基本命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">groupadd 组名 				#创建用户组</div><div class="line">groupadd -g 组编号 组名 			#创建用户组并指定组编号</div><div class="line">groupmod -n 新组名 原组名 		#更改用户组名称</div><div class="line">groupmod -g 组编号 组名 			#设置用户组编号</div><div class="line">groupdel 组名 					#删除用户组，前提是用户组内没有用户</div></pre></td></tr></table></figure>
<h2 id="附属组"><a href="#附属组" class="headerlink" title="附属组"></a>附属组</h2><p>用户可以同时属于多个组，一个是主要组，其他的为附属组</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">gpasswd -a 用户名 附属组 			#给用户添加附属组</div><div class="line">gpasswd -d 用户名 附属组 			#把用户从附属组中删除</div><div class="line"></div><div class="line">newgrp 组名</div><div class="line">#用户创建的文件默认为主要组；需要以附属组创建文件的，需将身份切换到附属组</div><div class="line">#把用户的组切换到附属组，需要用户登录后，自己执行，切换</div><div class="line">#组密码是在组切换时用的，如果有会要求输入组密码</div><div class="line"></div><div class="line">useradd -g group1 -G group2,group3... 用户名  </div><div class="line">#同时指定主用户组和附属用户组</div><div class="line">gpasswd 用户名 </div><div class="line">#更改组密码,回车会有相应的提示操作</div><div class="line">gpasswd -a 用户名 附属组，附属组，.....</div><div class="line">#添加附属组</div><div class="line">usermod -g</div><div class="line">#修改主要组</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;用户基本命令&quot;&gt;&lt;a href=&quot;#用户基本命令&quot; class=&quot;headerlink&quot; title=&quot;用户基本命令&quot;&gt;&lt;/a&gt;用户基本命令&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gut
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux磁盘管理 swap分区</title>
    <link href="http://yoursite.com/2018/05/06/Linux%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86-swap%E5%88%86%E5%8C%BA/"/>
    <id>http://yoursite.com/2018/05/06/Linux磁盘管理-swap分区/</id>
    <published>2018-05-06T07:59:06.000Z</published>
    <updated>2018-05-06T08:18:27.167Z</updated>
    
    <content type="html"><![CDATA[<p>为磁盘添加SWAP交换分区</p>
<p>1.首先建立一个普通的Linux分区<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">fdisk /dev/sdb</div><div class="line">#参考MBR分区</div><div class="line">#输入p查看sdb的分区</div></pre></td></tr></table></figure></p>
<p>2.修改分区类型的16进制编码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">输入t，输入要修改的磁盘编号 这里是 6（sdb6的6）；</div><div class="line">输入 L 来查看可以修改成的类型</div><div class="line">再输入82（Linux swap）,保存成功</div><div class="line">输入p来查看已经保存的情况</div><div class="line">输入w保存分区</div></pre></td></tr></table></figure></p>
<p><img src="http://ow3dy62zt.bkt.clouddn.com/IMG30.jpg" alt=""></p>
<p>3.格式化交换分区<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkswap（后面跟随设备名称） /dev/sdb6 完成格式化</div></pre></td></tr></table></figure></p>
<p>4.启动交换分区<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">swapon /dev/sdb6 	#启动交换分区</div><div class="line">free 				#查看加载状况</div><div class="line">swapoff /dev/sdb6 	#关闭交换分区</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;为磁盘添加SWAP交换分区&lt;/p&gt;
&lt;p&gt;1.首先建立一个普通的Linux分区&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;d
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux磁盘管理 格式化</title>
    <link href="http://yoursite.com/2018/05/06/Linux%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86-%E6%A0%BC%E5%BC%8F%E5%8C%96/"/>
    <id>http://yoursite.com/2018/05/06/Linux磁盘管理-格式化/</id>
    <published>2018-05-06T06:23:56.000Z</published>
    <updated>2018-05-06T08:38:54.588Z</updated>
    
    <content type="html"><![CDATA[<h2 id="格式化："><a href="#格式化：" class="headerlink" title="格式化："></a>格式化：</h2><p>又称逻辑格式化，它是指根据用户选定的文件系统（eg：FAT16（最大支持2GB分区），FAT32（单个文件大小不能超过4GB，最大支持16TB分区），NTFS，EXT2，EXT3，EXT4（centos6默认文件系统）等），在磁盘特定区域写入特定数据，在分区中划出一片用于存放文件分配表、目录表等用于文件管理的磁盘空间。</p>
<p>格式化的目的并不是清空数据，其根本目的是为了<strong>写入文件系统，能够更快查找读写数据</strong>，但是在进行格式化的操作时会先清空原有数据。</p>
<p>格式化具体进行的操作：<br>将整个分区分割成等大小的数据块（Block），每个数据块默认4KB，存储文件的最小，可以手动选择1KB、2KB或4KB。假设存放10KB的文件，会使用3个数据块，三个数据块不一定是连续的，最后的一数据块中即使没有放满，也不能再存放其他文件。<br>在分区列表中建立一个二维表格，记录了文件的id号（即文件放在那些数据库中，叫做iNode）、文件修改时间、文件的访问权限。操作文件时先访问此二维表进行权限匹配。</p>
<p>parted工具可以格式化，但是parted支持的文件系统有限<br>无论使用MBR，还是GPT进行的分区，都可以使用”mkfs”进行分区格式化</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mkfs (-make for system)</div><div class="line">mkfs -t ext3 /dev/sda6     #将sda6分区格式化为ext3格式</div><div class="line">mkfs -t ext2 /dev/sda7     #将sda7分区格式化为ext2格式</div></pre></td></tr></table></figure>
<p>MBR只有主分区和逻辑分区可以格式化， 扩展分区不可以格式化<br>GPT类型格式化后，使用fdisk看不到各个分区的系统文件格式， 必须启动parted工具的print指令来查看</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ls -l /dev/sdb 		#查看sdb磁盘上的设备情况</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;格式化：&quot;&gt;&lt;a href=&quot;#格式化：&quot; class=&quot;headerlink&quot; title=&quot;格式化：&quot;&gt;&lt;/a&gt;格式化：&lt;/h2&gt;&lt;p&gt;又称逻辑格式化，它是指根据用户选定的文件系统（eg：FAT16（最大支持2GB分区），FAT32（单个文件大小不能超过4GB
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux磁盘管理 GPT分区</title>
    <link href="http://yoursite.com/2018/05/06/Linux%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86-GPT%E5%88%86%E5%8C%BA/"/>
    <id>http://yoursite.com/2018/05/06/Linux磁盘管理-GPT分区/</id>
    <published>2018-05-06T06:21:07.000Z</published>
    <updated>2018-05-06T09:21:34.998Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MBR分区模式和GPT分区模式比较"><a href="#MBR分区模式和GPT分区模式比较" class="headerlink" title="MBR分区模式和GPT分区模式比较"></a>MBR分区模式和GPT分区模式比较</h2><p>MBR</p>
<ul>
<li>区容量最大2TB</li>
<li>分区命令fdisk /dev/sdxx  </li>
<li>分区完毕，执行-w 写入分区表才能生效</li>
<li>分区表类型是：msdos</li>
<li>缺点：限制多，跟不上发展</li>
</ul>
<p>GPT</p>
<ul>
<li>主分区个数”几乎”没有限制（最多128个）</li>
<li>单个分区容量”几乎”没有限制(最大18EB)</li>
<li>使用parted命令工具（同时支持MBR,GPT分区）</li>
<li>分区表类型是：gpt</li>
<li>1EB=1024PB,1PB=1024TB,1TB=1024GB</li>
<li>缺点：GPT主分区中不适合安装x86的系统架构</li>
</ul>
<h2 id="使用parted进行分区"><a href="#使用parted进行分区" class="headerlink" title="使用parted进行分区"></a>使用parted进行分区</h2><p>fdisk只能给硬盘做MBR分区<br>parted既能给硬盘做MBR分区，又能做GPT分区</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">输入parted命令，启动parted分区工具，默认分区目标是系统的第一块硬盘</div><div class="line">输入help，查看帮助信息</div><div class="line">输入select /dev/sdc，切换分区目标磁盘</div><div class="line">输入mklable命令，给目标硬盘指定分区表的类型，然后才能给硬盘添加分区</div><div class="line">如果使用MBR分区，输入mklabel msdos；使用GPT分区，输入mklabel gpt</div><div class="line">输入print 查看当前分区详情；输入print all命令，查看所有分区详情</div><div class="line"></div><div class="line">parted分区操作模式：①交互模式（使用提问模式选择） ②命令模式</div><div class="line"></div><div class="line">**交互模式**</div><div class="line">输入mkpart  #添加分区</div><div class="line">输入分区名称</div><div class="line">选择分区系统类型</div><div class="line">分区从第几MB开始，4K对齐对硬盘分区很重要，为了达到最佳性能，分出1MB空间，让数据块对齐</div><div class="line">结束位置</div><div class="line"></div><div class="line">**命令模式**</div><div class="line">命令模式下，分区名称不能省略</div><div class="line">mkpart test(分区名称) 2000(开始位置2000MB) 3000(结束位置MB)</div><div class="line"></div><div class="line"></div><div class="line">rm [分区编号] #删除分区</div><div class="line">unit GB		#使用GB给分区指定开始和结束位置</div><div class="line">quit		#退出分区工具</div></pre></td></tr></table></figure>
<p>fdisk分区设计完成后 最后要通过w来写入硬盘,parted不需使用w保存</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;MBR分区模式和GPT分区模式比较&quot;&gt;&lt;a href=&quot;#MBR分区模式和GPT分区模式比较&quot; class=&quot;headerlink&quot; title=&quot;MBR分区模式和GPT分区模式比较&quot;&gt;&lt;/a&gt;MBR分区模式和GPT分区模式比较&lt;/h2&gt;&lt;p&gt;MBR&lt;/p&gt;
&lt;u
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux磁盘管理 基本命令</title>
    <link href="http://yoursite.com/2018/05/06/Linux%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86-%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2018/05/06/Linux磁盘管理-基本命令/</id>
    <published>2018-05-06T06:04:50.000Z</published>
    <updated>2018-05-06T06:08:00.089Z</updated>
    
    <content type="html"><![CDATA[<h2 id="df"><a href="#df" class="headerlink" title="df"></a>df</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">df：查看磁盘分区使用状况</div><div class="line">-l：仅显示本地默认磁盘（默认）</div><div class="line">-a：显示所有文件系统的磁盘使用情况</div><div class="line">-h：以1024进制计算最合适的单位显示磁盘容量（默认KB显示）</div><div class="line">-H：显示以1000进制计算最合适的单位显示磁盘容量</div><div class="line">-T：显示磁盘分区类型</div><div class="line">-t：显示指定类型文件系统的磁盘分区  //如：df -t ext4</div><div class="line">-x：不显示指定类型文件系统的磁盘分区</div></pre></td></tr></table></figure>
<h2 id="du"><a href="#du" class="headerlink" title="du"></a>du</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">du 统计磁盘上的文件大小</div><div class="line">-b 以byte为单位统计文件  //统计出来的都是四舍五入的大小</div><div class="line">-k 以KB为单位统计文件    //统计出来的都是四舍五入的大小</div><div class="line">-m 以MB为单位统计文件    //统计出来的都是四舍五入的大小</div><div class="line">-h 按照1024进制以最适合的单位统计文件</div><div class="line">-H 按照1000进制以最适合的单位统计文件</div><div class="line">-s 指定统计目标  </div><div class="line">du -s tmp</div><div class="line">du -sb *.zip</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;df&quot;&gt;&lt;a href=&quot;#df&quot; class=&quot;headerlink&quot; title=&quot;df&quot;&gt;&lt;/a&gt;df&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div c
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux su root和sudo su</title>
    <link href="http://yoursite.com/2018/05/05/Linux-su-root%E5%92%8Csudo-su/"/>
    <id>http://yoursite.com/2018/05/05/Linux-su-root和sudo-su/</id>
    <published>2018-05-05T15:43:02.000Z</published>
    <updated>2018-05-06T05:51:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>来自<a href="https://askubuntu.com/questions/86095/does-executing-sudo-su-and-su-root-do-the-same-thing?utm_medium=organic&amp;utm_source=google_rich_qa&amp;utm_campaign=google_rich_qa" target="_blank" rel="external">https://askubuntu.com/questions/86095/does-executing-sudo-su-and-su-root-do-the-same-thing?utm_medium=organic&amp;utm_source=google_rich_qa&amp;utm_campaign=google_rich_qa</a></p>
<p>Does executing sudo su and su root do the same thing?What are the technical differences between the two? The only thing I noticed is that</p>
<p><code>sudo su</code><br>requires you to enter your own password (assuming you’re not root)</p>
<p><code>su root</code><br>requires you to enter root’s password. However both seem to log you into the root user account.</p>
<p>The second command cannot be executed in a default Ubuntu installation, where the root account is not enabled.</p>
<p>But supposing you have unlocked the root account giving him a password, the two commands could only differ in the environment and shell variable set, I think. Compare the output of env in the two situations, and maybe also the output of set to see the differences.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;来自&lt;a href=&quot;https://askubuntu.com/questions/86095/does-executing-sudo-su-and-su-root-do-the-same-thing?utm_medium=organic&amp;amp;utm_source=g
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux用户管理 配置文件</title>
    <link href="http://yoursite.com/2018/05/05/Linux%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
    <id>http://yoursite.com/2018/05/05/Linux用户管理-配置文件/</id>
    <published>2018-05-05T14:41:15.000Z</published>
    <updated>2018-05-06T12:16:55.546Z</updated>
    
    <content type="html"><![CDATA[<p>用户：使用操作系统的人<br>用户组：具有相同系统权限的一组用户</p>
<p>用户和用户组配置文件</p>
<p>/etc/group    存储当前系统中所有用户组的信息<br>-Group：        x        ：  501   ：abc,def,xyz<br>-组名称：组密码占位符    ： 组编号：组中用户名列表</p>
<p>组编号1-499是系统预留给软件的<br>手动创建的用户从500开始</p>
<p>/etc/gshadow    存储当前系统中用户组的密码信息<br>-Group：        *        ：      ：abc,def,xyz<br>-组名称：  组密码    ：组管理者：组中用户名列表</p>
<p>/etc/passwd    存储当前系统中所有用户的信息<br>-user：    x    ：   123   ：   456    ：   xxxxxxxx  ：/home/user  ： /bin/bash<br>-用户名：密码占位符：用户编号： 用户组编号：  用户注释信息：用户主目录 ：shell类型</p>
<p>/etc/shadow    存储当前系统中所有用户的密码信息<br>-user    ：   vf;/Zu8sdf… ：：：：：<br>-用户名 ：    密码         ：：：：：</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;用户：使用操作系统的人&lt;br&gt;用户组：具有相同系统权限的一组用户&lt;/p&gt;
&lt;p&gt;用户和用户组配置文件&lt;/p&gt;
&lt;p&gt;/etc/group    存储当前系统中所有用户组的信息&lt;br&gt;-Group：        x        ：  501   ：abc,def,xyz&lt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux 关机和重启</title>
    <link href="http://yoursite.com/2018/05/05/Linux-%E5%85%B3%E6%9C%BA%E5%92%8C%E9%87%8D%E5%90%AF/"/>
    <id>http://yoursite.com/2018/05/05/Linux-关机和重启/</id>
    <published>2018-05-05T07:24:14.000Z</published>
    <updated>2018-05-05T10:15:05.588Z</updated>
    
    <content type="html"><![CDATA[<h2 id="关机"><a href="#关机" class="headerlink" title="关机"></a>关机</h2><pre><code>shutdown [选项] 时间
#相比其它命令更安全，在关机和重启时会正确保存正在运行的程序
选项：
 -c:取消前一个关机命令
 -h:关机（half）
 -r:重启

shutdown -r 05:30
shutdown -r 05:30 &amp; (后台运行)
shutdown -r now
#在服务器上尽量避免远程关机，因为再开机麻烦，所以远程重启就足够了
#服务器由于经常进行高速运算强制重启非常容易损坏硬件，也容易造成数据丢失，所以一定要小心

#其他关机命令(不安全，慎用)
half
poweroff
init 0
</code></pre><p><br>  </p>
<h2 id="重启"><a href="#重启" class="headerlink" title="重启"></a>重启</h2><pre><code>reboot (相对安全)
init 6 (尽量不要用)
</code></pre><p><br>  </p>
<h2 id="系统运行级别"><a href="#系统运行级别" class="headerlink" title="系统运行级别"></a>系统运行级别</h2><p>0 关机<br>1 单用户 （与windows安全模式相似）<br>2 不完全多用户，不含NFS服务（NFS：文件共享服务）<br>3 完全多用户（字符界面）<br>4 未分配<br>5 图形界面（如果装了图形界面，init 5 进入图形界面）<br>6 重启</p>
<pre><code>runlevel
# 查询系统运行级别
# 结果：N 3 (当前是3 N是上一次登陆级别)

cat /etc/inittab 
# 查看/etc/inittab的内容
id:3:initdefault: 
# 修改系统默认运行级别，这里默认是3
</code></pre><p><br>  </p>
<h2 id="退出登录命令"><a href="#退出登录命令" class="headerlink" title="退出登录命令"></a>退出登录命令</h2><pre><code>logout 
# LINUX默认同时256个登录，最大支持6万多
# 每次使用后，建议退出当前用户，避免他人因账户占用无法使用！与windows中的注销相似！
</code></pre><p>注意：<br>如果关闭远程登录xshell时直接点X，该用户就卡在计算机里，因为没有正确退出，所以一定养成正确退出登录的习惯</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;关机&quot;&gt;&lt;a href=&quot;#关机&quot; class=&quot;headerlink&quot; title=&quot;关机&quot;&gt;&lt;/a&gt;关机&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;shutdown [选项] 时间
#相比其它命令更安全，在关机和重启时会正确保存正在运行的程序
选项：
 -c:取消前一个关
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux 帮助命令</title>
    <link href="http://yoursite.com/2018/05/05/Linux-%E5%B8%AE%E5%8A%A9%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2018/05/05/Linux-帮助命令/</id>
    <published>2018-05-05T07:22:49.000Z</published>
    <updated>2018-05-05T09:51:17.124Z</updated>
    
    <content type="html"><![CDATA[<h2 id="man"><a href="#man" class="headerlink" title="man"></a>man</h2><pre><code>man 命令
# 获取指定命令的帮助
# man是manual的缩写
# 最常用的帮助命令
# q退出
# 输入:/-d 搜索&quot;-d&quot;字符串，按n往下搜“-d”,shift+n 往上搜“-d”

man -f 命令
# 查看命令的所有帮助等级
# 相当于 whatis 命令
# 因为whereis命令可以看到命令的帮助文档目录，所以也可以查看目录的等级

man 级别 命令
#查看相应等级的命令
man -5 passwd
man -4 null
man -8 ifconfig

man -k 命令 
# 相当于 apropos 命令
# 搜索含有关键词“命令”的所有帮助文档
man -k passwd
# 搜索含有关键词“passwd”的所有命令的帮助文档
</code></pre><p>man的级别：</p>
<ol>
<li>查看命令的帮助</li>
<li>查看可被内核调用的函数的帮助</li>
<li>查看函数和函数库的帮助</li>
<li>查看特殊文件的帮助（主要是/dev目录下的文件）</li>
<li>查看配置文件的帮助</li>
<li>查看游戏的帮助</li>
<li>查看其它杂项的帮助</li>
<li>查看系统管理员可用命令的帮助</li>
<li>查看和内核相关文件的帮助</li>
</ol>
<h2 id="–help"><a href="#–help" class="headerlink" title="–help"></a>–help</h2><pre><code>命令 --help 
#获取命令选项的帮助
ls --help 
</code></pre><h2 id="helpshell内部命令帮助"><a href="#helpshell内部命令帮助" class="headerlink" title="helpshell内部命令帮助"></a>helpshell内部命令帮助</h2><pre><code>help shell内部命令
#whereis可以用来判断一个命令是否是shell内部命令
#ls在/bin/下面有可执行文件，说明ls命令不是shell内部命令
#cd命令在/bin/下面没有相应的可执行文件，所以是shell自带的命令
</code></pre><p>man命令不能只获取shell的内部命令</p>
<pre><code>#help命令只能获取shell的内部命令
</code></pre><h2 id="info"><a href="#info" class="headerlink" title="info"></a>info</h2><pre><code>info 命令
#info里面内容十分繁琐，是关于命令的一个巨大的帮助文档，里面有各个版本对于此命令的说明。
回车：进入带*号的说明
-u: 进入上层页面
-n: 进入下一个帮助小节
-p: 进入上一个帮助小节
-q: 退出
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;man&quot;&gt;&lt;a href=&quot;#man&quot; class=&quot;headerlink&quot; title=&quot;man&quot;&gt;&lt;/a&gt;man&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;man 命令
# 获取指定命令的帮助
# man是manual的缩写
# 最常用的帮助命令
# q退出
# 输入:/
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux文件管理 链接命令</title>
    <link href="http://yoursite.com/2018/05/05/Linux%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86-%E9%93%BE%E6%8E%A5%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2018/05/05/Linux文件管理-链接命令/</id>
    <published>2018-05-05T04:32:53.000Z</published>
    <updated>2018-05-05T04:41:58.871Z</updated>
    
    <content type="html"><![CDATA[<h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><pre><code>ln -s [原文件][目标文件] （link）
#生成链接文件
-s 创建软链接
</code></pre><p><br></p>
<h2 id="硬链接"><a href="#硬链接" class="headerlink" title="硬链接"></a>硬链接</h2><ul>
<li>拥有相同的i节点和存储block块，可以看做是同一个文件。（在格式化时，第一将分区划分为等大小的block数据块，该数据块通常为4KB。第二建立分区表，并为每个文件建立一个相关数据。当用户搜索某个文件时，会先到分区表中查找文件所对应的block存储位置，接着到相应位置取出，并返回给用户。）硬链接与原文件拥有相同的i节点。因此，与原文件非常相似。当删除原文件或硬链接文件的任何一文件，不影响文件索引操作。可看做，同一个文件的不通进入点。它是同样的存储空间。</li>
<li>可通过i节点识别</li>
<li>不能跨分区建立</li>
<li>不能针对目录使用，只有文件才可以创建</li>
</ul>
<pre><code>ln ./source/abc ./target/bcd.hard
# 创建后，引用计数+1
ls -i ./source/abc ./target/bcd.hard
# 可使用ls -i 来查看文件i节点号
</code></pre><p>不建议创建硬链接文件<br>文件太过隐蔽，除了有i节点这样一个标识之外，很难区分它是不是硬链接<br>硬链接限制较多，不能跨分区，不能针对目录，使用当中容易出现错误使用方法</p>
<p><br></p>
<p>##软链接</p>
<ul>
<li>类似于Windows快捷方式</li>
<li>软链接拥有自己的i节点和block块，但是数据块中只保存原文件的文件名和i节点号，并没有实际的文件数据。（拥有自己的分区表中索引数据,通过索引找到分区表中文件的目标索引数据，再通过目标索引数据，查找数据）</li>
<li>lrwxrwxrwx  l软链接， 软链接文件权限都为rwxrwxrwx, 虽然权限显示为777，但实际权限需要看原文件权限。</li>
<li>修改任意文件，另一个都改变</li>
<li>删除原文件，软链接不能使用</li>
<li>创建软链接，原文件<strong>一定要写绝对路径</strong>。否则，软链接会到它所在的同一目录去找原文件。</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;命令&quot;&gt;&lt;a href=&quot;#命令&quot; class=&quot;headerlink&quot; title=&quot;命令&quot;&gt;&lt;/a&gt;命令&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;ln -s [原文件][目标文件] （link）
#生成链接文件
-s 创建软链接
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux磁盘管理 挂载命令</title>
    <link href="http://yoursite.com/2018/05/05/Linux%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86-%E6%8C%82%E8%BD%BD%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2018/05/05/Linux磁盘管理-挂载命令/</id>
    <published>2018-05-05T03:40:03.000Z</published>
    <updated>2018-05-06T11:51:12.798Z</updated>
    
    <content type="html"><![CDATA[<h2 id="mount-命令"><a href="#mount-命令" class="headerlink" title="mount 命令"></a>mount 命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">mount </div><div class="line">#查看系统中已挂载的设备</div><div class="line">mount -a </div><div class="line">#依据配置文件/etc/fstab内容，自动挂载    </div><div class="line">#光盘、U盘的数据不建议写入自动挂载中，否则开机时没有光盘和U盘的话，系统崩溃</div><div class="line"></div><div class="line">mount [-t 文件系统] [-o 特殊选项] [设备文件名] [挂载点]</div><div class="line">-t：加入文件系统类型来指定挂载的类型，ext3,ext4,iso9660等文件系统</div><div class="line">-o：可以指定挂载的额外选项</div><div class="line">mount -o remount，noexec /home</div><div class="line">#/home内的执行文件无法执行</div><div class="line">mount -o remount，exec /home</div></pre></td></tr></table></figure>
<p>###挂载光盘<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">mkdir /mnt/cdrom/   </div><div class="line">#建立挂载点</div><div class="line">mount -t iso9660 /dev/sr0  /mnt/cdrom          </div><div class="line">#/dev/sr0是光盘设备名，也可以用/dev/cdrom（sr0的软连接，但需要系统完全启动才能用）   -t iso9660 可以省略  因为系统知道sr0是iso9660</div></pre></td></tr></table></figure></p>
<p>###卸载<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">umount [设备文件名或挂载点]   </div><div class="line">umount /mnt/cdrom    </div><div class="line">umount /dev/sr0  </div><div class="line">#都可以   卸载时位置不能在光盘目录下</div></pre></td></tr></table></figure></p>
<p>###挂载U盘<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">fdisk -l   </div><div class="line">#查看U盘设备文件名    </div><div class="line">#U盘可以看成系统的第二块硬盘</div><div class="line">mount -t vfat /dev/sdb1 /mnt/usb/           </div><div class="line">#-t vfat     windows的fat32文件系统</div><div class="line">注：linux默认不支持ntfs文件系统，所以移动硬盘正常没法挂载，能挂载后也只能读，不能写，所以用windows数据一般用网络传播</div><div class="line">#解决办法</div><div class="line">1. 编译内核   让linux 支持NTFS文件系统   </div><div class="line">2. 安装ntfs-3g</div></pre></td></tr></table></figure></p>
<h2 id="手动挂载分区"><a href="#手动挂载分区" class="headerlink" title="手动挂载分区"></a>手动挂载分区</h2><p>手动挂载的分区，不具有永久性，系统重启后，挂载就会失效<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"># 没有挂载无法使用，分区默认的挂载目录是/mnt目录</div><div class="line">sudo fdisk -l</div><div class="line">#查看系统的硬盘和硬盘分区情况，了解需要的设备，比如移动硬盘/U盘/windows下的分区/光盘</div><div class="line">sudo mkdir -p /media/usb</div><div class="line">#创建挂载目录</div><div class="line">sudo mount /dev/sdb /media/usb</div><div class="line">#挂载</div><div class="line"></div><div class="line">sudo umount /dev/sdb</div><div class="line">#卸载</div></pre></td></tr></table></figure></p>
<h2 id="永久挂载"><a href="#永久挂载" class="headerlink" title="永久挂载"></a>永久挂载</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim /etc/fstab</div></pre></td></tr></table></figure>
<p><img src="http://ow3dy62zt.bkt.clouddn.com/IMG29.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;mount-命令&quot;&gt;&lt;a href=&quot;#mount-命令&quot; class=&quot;headerlink&quot; title=&quot;mount 命令&quot;&gt;&lt;/a&gt;mount 命令&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cl
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
</feed>
